<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第一模块考试</title>
      <link href="/2022/05/24/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5%E8%80%83%E8%AF%95/"/>
      <url>/2022/05/24/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5%E8%80%83%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="第一阶段考试题"><a href="#第一阶段考试题" class="headerlink" title="第一阶段考试题"></a>第一阶段考试题</h1><ol><li><p>简述解释型语言和编译型语言的区别。</p><pre class="language-python" data-language="python"><code class="language-python">解释型语言：实时翻译，运行一行翻译一行编译型语言：全文翻译，将代码文件翻译后进行存储，运行时直接运行翻译好的零时文件</code></pre></li><li><p>罗列你听说过的编程语言。</p><pre class="language-none"><code class="language-none">python, C, C++, Ruby, Java, PHP, Javascript, Ada</code></pre></li><li><p>简述位和字节的关系？</p><pre class="language-none"><code class="language-none">位(bit):计算机最小表示单位，表示共有多少个0101字节(bety)：计算机最小的存储单位，8bit &#x3D; 1bety</code></pre></li><li><p>简述你理解的 ascii、unicode、utf-8、gbk 编码。</p><pre class="language-none"><code class="language-none">编码就是一个密码本，建立了文字和数字之间的映射关系， ascii、unicode、utf-8、gbk是不同的编码系统  - ascii编码：建立了英文和数字之间的映射关系，取值范围0~255，不支持中文  - gbk 编码：建立了汉字（韩语、日语等亚洲语言）和数字之间的映射关系，一个中文字符由两个字节表示  - unicode 编码：建立了世界上大多数语言与数字的映射关系，向下兼容ascii编码，由于其适宜性广，数据的存储一般使用该编码，但其数据量相对较大，不利于网络传输  - utf-8 编码：本质上是对unicode编码的压缩，规定了对应的unicode码号使用多少字节进行表示，减少了数据量。</code></pre></li><li><p>py2和py3默认解释器编码分别是什么？如何在代码中修改解释器的编码？</p><pre class="language-pyth" data-language="pyth"><code class="language-pyth">- py2的默认解释器编码为ascii- py3的默认解释器编码为utf-8- 默认解释器修改方法  文件写入如下代码： # -*- coding：utf-8 ——*-</code></pre></li><li><p>pass的作用？</p><pre class="language-none"><code class="language-none">起到站位符的作用，当代码不完整时，保证Python语法的完整性</code></pre></li><li><p>is和&#x3D;&#x3D;的区别？</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">-</span> <span class="token keyword">is</span><span class="token punctuation">:</span>判断内存地址是否相等<span class="token operator">-</span> <span class="token operator">==</span><span class="token punctuation">:</span>判读取值是否相等示例：a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">==</span> b<span class="token punctuation">)</span>  <span class="token comment"># True</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token keyword">is</span> b<span class="token punctuation">)</span>  <span class="token comment"># False</span></code></pre></li><li><p>列举你了解的Python2和Python3的区别。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token number">1.</span> 默认编码：python2使用<span class="token builtin">ascii</span>，python3使用utf<span class="token operator">-</span><span class="token number">8</span><span class="token number">2.</span> 整型：python2分为长整型和短整型，python3只有整型<span class="token punctuation">(</span>长整型<span class="token punctuation">)</span>修改：<span class="token number">3.</span> 地板除：Python2取整，python3取小数<span class="token number">4.</span> python2字典无序，py3<span class="token punctuation">.</span><span class="token number">6</span><span class="token operator">+</span>字典有序<span class="token number">5.</span> 字典的keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span>valies<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> python2列表，python3高仿列表</code></pre></li><li><p>变量名的命名规范有哪些？</p><pre class="language-python" data-language="python"><code class="language-python">三条规范：<span class="token number">1.</span> 是能使用字母，下划线和数字的组合<span class="token number">2.</span> 不能以数字开头<span class="token number">3.</span> 不能使用系统保留关键字两条建议：<span class="token number">1.</span> 多个字母使用下划线进行链接<span class="token number">2.</span> 全局变量使用大写字母，局部变量使用小写<span class="token number">3.</span> 见名之意</code></pre></li><li><p>都有那些值转换为布尔值时为False？</p><pre class="language-none"><code class="language-none">0&#39;&#39;[]()set()&#123;&#125;None</code></pre></li><li><p>简述如下三个变量的区别。</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>v2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span>v3 <span class="token operator">=</span> <span class="token number">1</span></code></pre><pre class="language-none"><code class="language-none">v1 &#x3D; v3 数据类型：intv2 数据类型：tuple 内部元素 1</code></pre></li><li><p>你所学的数据类型中哪些是可变的类型？</p><pre class="language-none"><code class="language-none">- list- set- dict</code></pre></li><li><p>你所学的数据类型中哪些是可哈希的类型？</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">-</span> <span class="token builtin">int</span><span class="token operator">-</span> <span class="token builtin">str</span><span class="token operator">-</span> <span class="token builtin">bool</span><span class="token operator">-</span> <span class="token builtin">float</span><span class="token operator">-</span> <span class="token builtin">tuple</span></code></pre></li><li><p>你所学的数据类型（容器）中哪些是有序的</p><pre class="language-none"><code class="language-none">- list- tuple- dict(python3.6+)</code></pre></li><li><p>列举你能记得的如下数据类型的方法（独有功能）。</p><ul><li><p>str</p><pre class="language-none"><code class="language-none">startswith()， endswith(), replace(), upper(), lower(), strip(), split(), isdecimal(), join(), center(), ljust(), rjust()</code></pre></li><li><p>list</p><pre class="language-python" data-language="python"><code class="language-python">增：append<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> insert<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> extend<span class="token punctuation">(</span><span class="token punctuation">)</span>删：remove<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">del</span> <span class="token punctuation">,</span> claer<span class="token punctuation">(</span><span class="token punctuation">)</span>改：sort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> reverse<span class="token punctuation">(</span><span class="token punctuation">)</span>查<span class="token punctuation">:</span>index<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></li><li><p>dict</p><pre class="language-python" data-language="python"><code class="language-python">增：setdefault<span class="token punctuation">(</span><span class="token punctuation">)</span>删：popitem<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">del</span> 改：updat<span class="token punctuation">(</span><span class="token punctuation">)</span>查：get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> items<span class="token punctuation">(</span><span class="token punctuation">)</span> </code></pre></li></ul></li><li><p>请将字符 <code>name = &quot;wupeiqi&quot;</code> 翻转。</p><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"wupeiqi"</span>new_name <span class="token operator">=</span> name<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span></code></pre></li><li><p>进制之间如何进行转换？</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">-</span> 由十进制<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>转出  <span class="token operator">-</span> 二进制 <span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">-</span> 八进制 <span class="token builtin">oct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">-</span> 十六进制 <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span> 转为十进制<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">)</span>  <span class="token operator">-</span> 二进制 <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">,</span> base<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>  <span class="token operator">-</span> 八进制 <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">,</span> base<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">)</span>  <span class="token operator">-</span> 十六进制 <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">,</span> base<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span></code></pre></li><li><p>循环过程中 break和continue的作用是什么？</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">-</span> <span class="token keyword">break</span><span class="token punctuation">:</span>终止循环，当循环内部代码块遇到<span class="token keyword">break</span>后会立刻停止下方代码执行，并结束循环<span class="token operator">-</span> <span class="token keyword">continue</span>：跳出本次循环，当循环内部代码块遇到<span class="token keyword">break</span>后会停止下方代码执行，直接开始下次循环</code></pre></li><li><p>看代码写结果</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">or</span> <span class="token number">9</span> <span class="token keyword">and</span> <span class="token number">88</span> <span class="token keyword">or</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span>v2 <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">></span><span class="token number">5</span> <span class="token keyword">or</span> <span class="token string">"alex"</span> <span class="token keyword">and</span> <span class="token punctuation">&#123;</span><span class="token string">"K1"</span><span class="token punctuation">:</span><span class="token string">"v1"</span><span class="token punctuation">&#125;</span> <span class="token keyword">or</span> <span class="token number">888</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">,</span>v2<span class="token punctuation">)</span>  <span class="token comment">#1， &#123;"K1":"v1"&#125;</span></code></pre></li><li><p>看代码写结果</p><pre class="language-python" data-language="python"><code class="language-python"> info <span class="token operator">=</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span><span class="token string">'k1'</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'k2'</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span><span class="token string">'k9'</span><span class="token punctuation">:</span><span class="token string">'luffy'</span><span class="token punctuation">,</span><span class="token string">'k10'</span><span class="token punctuation">:</span><span class="token string">'武沛齐'</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token punctuation">&#123;</span><span class="token number">199</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>     <span class="token boolean">True</span><span class="token punctuation">,</span>      <span class="token punctuation">[</span><span class="token string">'李杰'</span><span class="token punctuation">,</span><span class="token string">'alex'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token string">'extra'</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'eric'</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span> </code></pre><ul><li><p>利用索引获取 “luffy” </p><pre class="language-python" data-language="python"><code class="language-python">info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'k2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'k9'</span><span class="token punctuation">]</span></code></pre></li><li><p>利用索引获取 44</p><pre class="language-python" data-language="python"><code class="language-python">info<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span></code></pre></li><li><p>删除k10对应的键值对</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">del</span> info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'k2'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'k10'</span><span class="token punctuation">]</span></code></pre></li><li><p>在 <code>&#123; &#39;extra&#39;: (&quot;alex&quot;,[18,20],&#39;eric&#39;) &#125;</code> 字典中添加一个键值对 <code>&quot;name&quot;:&quot;武沛齐&quot;</code></p><pre class="language-python" data-language="python"><code class="language-python">info<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"武沛齐"</span></code></pre></li><li><p>在集合<code>&#123;199,2,3,4,5&#125;</code>中添加一个 “北京”</p><pre class="language-python" data-language="python"><code class="language-python">info<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">'北京'</span><span class="token punctuation">)</span></code></pre></li><li><p>将列表中的True修改为 “真”</p><pre class="language-python" data-language="python"><code class="language-python">info<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'真'</span></code></pre></li><li><p>在列表 <code>[18,20]</code>的第0个索引位置插入 666</p><pre class="language-python" data-language="python"><code class="language-python">info<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'extra'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">666</span><span class="token punctuation">)</span></code></pre></li></ul></li><li><p>判断下面的代码是否正确？正确的话则写出结果，否则标明错误。</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">)</span>  <span class="token comment"># (11,22,33)</span>v2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span>  <span class="token comment"># 11</span>v3 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">&#125;</span>  <span class="token comment"># &#123;11,2,33&#125;</span>v4 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"eric"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">&#125;</span>  <span class="token comment"># &#123;11,2,("alex","eric"),33&#125;</span>v5 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">"北京"</span><span class="token punctuation">,</span><span class="token string">"上海"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token string">"eric"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">&#125;</span>  <span class="token comment"># 集合v5内部子孙中存在不可哈希元素&#123;"北京","上海"&#125;</span></code></pre></li><li><p>看代码写结果</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">]</span>v2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">]</span>v1<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">666</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span>  <span class="token comment"># [11,22,33,66]</span><span class="token keyword">print</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span>  <span class="token comment"># [11,22,33]</span></code></pre></li><li><p>看代码写结果</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">]</span>v2 <span class="token operator">=</span> v1v1<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">666</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span>  <span class="token comment"># [11,22,33,66]</span><span class="token keyword">print</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span>  <span class="token comment"># [11,22,33,66]</span></code></pre></li><li><p>看代码写结果</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span>v2 <span class="token operator">=</span> <span class="token punctuation">[</span>v1<span class="token punctuation">,</span>v1<span class="token punctuation">,</span>v1<span class="token punctuation">]</span>  <span class="token comment"># [[1,2,3,4,5], [1,2,3,4,5], [1,2,3,4,5]]</span>v2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">111</span>v2<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">222</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span>  <span class="token comment">#  v1 = [1,2,3,4,5]</span><span class="token keyword">print</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span>  <span class="token comment"># [[1,2,3,4,5], [111,2,3,4,5], [222,2,3,4,5]]</span></code></pre></li><li><p>写代码实现，循环提示用户输入内容（Q或q终止），并将内容用 “_” 连接起来。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">'''本文件功能为：循环提示用户输入内容（Q或q终止），并将内容用 "_" 连接起来。'''</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    user_input <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input something,(Q/q to quit): '</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> user_input<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'Q'</span><span class="token punctuation">:</span>  <span class="token comment"># 输入Q/q退出</span>        <span class="token keyword">break</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'_'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>user_input<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></li><li><p>写代码实现，将IP转换为整数。</p><blockquote><p>如 10.3.9.12 转换规则为：<br> 10            00001010<br>  3             00000011<br>  9             00001001<br> 12            00001100<br>再将以上二进制拼接起来，然后再进行一次翻转。</p><p>最终将翻转之后的二进制转换为整型。</p></blockquote><pre class="language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">'''本文件实现功能为，将IP转换为整数。如 10.3.9.12 转换规则为：     10            00001010      3            00000011      9            00001001     12            00001100再将以上二进制拼接起来，然后再进行一次翻转。最终将翻转之后的二进制转换为整型。'''</span>ip_str <span class="token operator">=</span> <span class="token string">'10.3.9.12'</span>ip_list <span class="token operator">=</span> ip_str<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span>  <span class="token comment"># ['10', '3', '9', '12']</span><span class="token comment"># 1、将ip_list按转换规则进行转换</span>bin_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> item <span class="token keyword">in</span> ip_list<span class="token punctuation">:</span>    bin_ip <span class="token operator">=</span> <span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># '0b1010' ...</span>    data <span class="token operator">=</span> bin_ip<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>  <span class="token comment"># 00001010 ...</span>    bin_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token comment"># 2、再将以上二进制拼接起来，然后再进行一次翻转</span>result_reverse <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>bin_list<span class="token punctuation">)</span>  <span class="token comment"># 拼接</span>result_bin <span class="token operator">=</span> result_reverse<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment"># 翻转</span><span class="token comment"># 3、最终将翻转之后的二进制转换为整型</span>result <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>result_bin<span class="token punctuation">,</span> base<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span></code></pre></li><li><p>写代码实现，车牌的区域划分。</p><pre class="language-python" data-language="python"><code class="language-python">car_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'鲁A32444'</span><span class="token punctuation">,</span> <span class="token string">'沪B12333'</span><span class="token punctuation">,</span> <span class="token string">'京B8989M'</span><span class="token punctuation">,</span> <span class="token string">'京C49678'</span><span class="token punctuation">,</span> <span class="token string">'黑C46555'</span><span class="token punctuation">,</span> <span class="token string">'晋B25041'</span><span class="token punctuation">,</span> <span class="token string">'沪C34567'</span><span class="token punctuation">]</span><span class="token comment"># 根据以上代码获取各省车牌数量，例如：info = &#123;"沪":2,"京":2 ...&#125;</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">'''本文件实现功能为，根据以上车牌号码获取各省车牌数量。如 car_list =['鲁A32444', '沪B12333', '京B8989M', '京C49678', '黑C46555', '晋B25041', '沪C34567']输出：info = &#123;"沪":2,"京":2 ...&#125;'''</span>car_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'鲁A32444'</span><span class="token punctuation">,</span> <span class="token string">'沪B12333'</span><span class="token punctuation">,</span> <span class="token string">'京B8989M'</span><span class="token punctuation">,</span> <span class="token string">'京C49678'</span><span class="token punctuation">,</span> <span class="token string">'黑C46555'</span><span class="token punctuation">,</span> <span class="token string">'晋B25041'</span><span class="token punctuation">,</span> <span class="token string">'沪C34567'</span><span class="token punctuation">]</span>info_list <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment"># "沪":[沪B12333, 沪C34567] ...</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> car <span class="token keyword">in</span> car_list<span class="token punctuation">:</span>    location <span class="token operator">=</span> car<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    info_list<span class="token punctuation">[</span>location<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token comment"># &#123;'鲁': [], '沪': [], '京': [], '黑': [], '晋': []&#125;</span><span class="token keyword">for</span> car <span class="token keyword">in</span> car_list<span class="token punctuation">:</span>    location <span class="token operator">=</span> car<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    info_list<span class="token punctuation">[</span>location<span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>car<span class="token punctuation">)</span>  <span class="token comment"># &#123;'鲁': ['鲁A32444'], ...&#125;</span>info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> location <span class="token keyword">in</span> info_list<span class="token punctuation">:</span>    info<span class="token punctuation">[</span>location<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>info_list<span class="token punctuation">[</span>location<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># &#123;'鲁': 1, '沪': 2, '京': 2, '黑': 1, '晋': 1&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span></code></pre></li><li><p>写代码实现，数据格式化处理。</p><pre class="language-python" data-language="python"><code class="language-python">text <span class="token operator">=</span> <span class="token triple-quoted-string string">"""id,name,age,phone,job1,alex,22,13651054608,IT 2,wusir,23,13304320533,Tearcher3,老男孩,18,1333235322,IT"""</span><span class="token comment"># 将上述数据处理为如下格式的结果：</span><span class="token comment">#    info = [&#123;'id':'1','name':'alex','age':'22','phone':'13651054608','job':'IT'&#125;,.... ..]</span><span class="token comment"># 提示：text的内容是根据 \n 分割（\n表示回车换行）。</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">'''本文件实现功能为，数据格式化处理。。如   text = """id,name,age,phone,job    1,alex,22,13651054608,IT    2,wusir,23,13304320533,Tearcher    3,老男孩,18,1333235322,IT"""输出为：info = [&#123;'id':'1','name':'alex','age':'22','phone':'13651054608','job':'IT'&#125;,                .... ,                ....                ]'''</span>text <span class="token operator">=</span> <span class="token triple-quoted-string string">"""id,name,age,phone,job          1,alex,22,13651054608,IT          2,wusir,23,13304320533,Tearcher          3,老男孩,18,1333235322,IT        """</span>text_list <span class="token operator">=</span> text<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>  <span class="token comment"># ['id,name,age,phone,job', '1,alex,22,13651054608,IT ', ...]</span>keys <span class="token operator">=</span> text_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span>  <span class="token comment"># ['id', 'name', 'age', 'phone', 'job']</span>values_list <span class="token operator">=</span> text_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>  <span class="token comment"># ['1,alex,22,13651054608,IT', ...]</span>info <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>values_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    info<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    values <span class="token operator">=</span> values_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span>  <span class="token comment"># ['1', 'alex', '22', '13651054608', 'IT'] ...</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        key <span class="token operator">=</span> keys<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>        value <span class="token operator">=</span> values<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>        info<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token keyword">print</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span></code></pre></li><li><p>写代码实现 累乘计算器。</p><pre class="language-python" data-language="python"><code class="language-python">content <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入内容:"</span><span class="token punctuation">)</span> <span class="token comment"># 用户可能输入 5*9*99.... 或 5* 9 * 10 * 99 或 5 * 9 * 99...</span><span class="token comment"># 补充代码实现</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">'''本文件实现功能为，实现累乘计算器。'''</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    result <span class="token operator">=</span> <span class="token number">1</span>    content <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入内容(Q/q退出):"</span><span class="token punctuation">)</span>  <span class="token comment"># 用户可能输入 5*9*99.... 或 5* 9 * 10 * 99 或 5 * 9 * 99...</span>    <span class="token keyword">if</span> content<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'Q'</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    num_list <span class="token operator">=</span> content<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'*'</span><span class="token punctuation">)</span>  <span class="token comment"># ['5', ' 9 ', ' 10 ', ' 99']</span>    <span class="token keyword">for</span> num <span class="token keyword">in</span> num_list<span class="token punctuation">:</span>        num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>num<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        result <span class="token operator">*=</span> num    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span></code></pre></li><li><p>使用for循环实现输出 9*9 乘法表</p><pre class="language-none"><code class="language-none">1*12*1 2*23*1 3*2 3*34*1 4*2 4*3 4*45*1 5*2 5*3 5*4 5*56*1 6*2 6*3 6*4 6*5 6*67*1 7*2 7*3 7*4 7*5 7*6 7*78*1 8*2 8*3 8*4 8*5 8*6 8*7 8*89*1 9*2 9*3 9*4 9*5 9*6 9*7 9*8 9*9</code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">'''本文件实现功能为，for循环实现输出 9*9 乘法表。'''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'&#123;&#125;*&#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">' '</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">9</span><span class="token punctuation">:</span>        <span class="token keyword">continue</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></li><li><p>补充代码实现《棋牌游戏11点》</p><p>需求：</p><ul><li><p>生成一副扑克牌（自己设计扑克牌的结构，小王和大王可以分别用14、15表示 ）</p></li><li><p>3个玩家</p><pre class="language-python" data-language="python"><code class="language-python">user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"武沛齐"</span><span class="token punctuation">,</span><span class="token string">"李路飞"</span><span class="token punctuation">]</span></code></pre></li><li><p>发牌规则</p><ul><li>默认先给用户发一张牌，其中 J、Q、K、小王、大王代表的值为0.5，其他就是则就是当前的牌面值。</li><li>用户根据自己的情况判断是否继续要牌。<ul><li>要，则再给他发一张。</li><li>不要，则开始给下个玩家发牌。</li></ul></li><li>如果用户手中的所有牌相加大于11，则表示爆了，此人的分数为0，并且自动开始给下个人发牌。</li></ul></li><li><p>最终计算并获得每个玩家的分值，例如：</p><pre class="language-python" data-language="python"><code class="language-python">result <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"alex"</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">,</span>    <span class="token string">"武沛齐"</span><span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">,</span>    <span class="token string">"李路飞"</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">&#125;</span></code></pre></li></ul><p>必备技术点：随机抽排</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> randomtotal_poke_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">"红桃"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">"黑桃"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">"大王"</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">"小王"</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token comment"># 随机生成一个数，当做索引。</span>index <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>total_poke_list<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment"># 获取牌</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"抽到的牌为："</span><span class="token punctuation">,</span> total_poke_list<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 踢除这张牌</span>total_poke_list<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"抽完之后，剩下的牌为："</span><span class="token punctuation">,</span> total_poke_list<span class="token punctuation">)</span></code></pre><p>代码示例：（请补充实现）</p><pre class="language-python" data-language="python"><code class="language-python">result <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"武沛齐"</span><span class="token punctuation">,</span><span class="token string">"李路飞"</span><span class="token punctuation">]</span><span class="token comment"># 补充代码</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">'''本文件实现功能为，《棋牌游戏11点》。- 生成一副扑克牌（自己设计扑克牌的结构，小王和大王可以分别用14、15表示 ）- 3个玩家  user_list = ["alex","武沛齐","李路飞"]- 发牌规则  - 默认先给用户发一张牌，其中 J、Q、K、小王、大王代表的值为0.5，其他就是则就是当前的牌面值。  - 用户根据自己的情况判断是否继续要牌。    - 要，则再给他发一张。    - 不要，则开始给下个玩家发牌。  - 如果用户手中的所有牌相加大于11，则表示爆了，此人的分数为0，并且自动开始给下个人发牌。- 最终计算并获得每个玩家的分值，例如：result = &#123;"alex":8,"武沛齐":9,"李路飞":0&#125;'''</span><span class="token keyword">import</span> random<span class="token comment"># 1.生成一副扑克牌</span>cards_num <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    cards_num<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>cards_num<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'J'</span><span class="token punctuation">,</span> <span class="token string">'Q'</span><span class="token punctuation">,</span> <span class="token string">'K'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 12345678910JQK</span>cards_col <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'♠'</span><span class="token punctuation">,</span> <span class="token string">'♥'</span><span class="token punctuation">,</span> <span class="token string">'♦'</span><span class="token punctuation">,</span> <span class="token string">'♣'</span><span class="token punctuation">]</span>cards_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> color <span class="token keyword">in</span> cards_col<span class="token punctuation">:</span>    <span class="token keyword">for</span> index <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>cards_num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 将得分附到牌的后面 ['♠', '1', 1]</span>        <span class="token keyword">if</span> index <span class="token operator">></span> <span class="token number">9</span><span class="token punctuation">:</span>            cards <span class="token operator">=</span> <span class="token punctuation">[</span>color<span class="token punctuation">,</span> cards_num<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">]</span>            cards_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>cards<span class="token punctuation">)</span>            <span class="token keyword">continue</span>        cards <span class="token operator">=</span> <span class="token punctuation">[</span>color<span class="token punctuation">,</span> cards_num<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">,</span> index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span>        cards_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>cards<span class="token punctuation">)</span><span class="token comment"># 加入大小王</span>cards_list<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'大'</span><span class="token punctuation">,</span> <span class="token string">'王'</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'小'</span><span class="token punctuation">,</span> <span class="token string">'王'</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">,</span> <span class="token string">"武沛齐"</span><span class="token punctuation">,</span> <span class="token string">"李路飞"</span><span class="token punctuation">]</span>result <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> player <span class="token keyword">in</span> user_list<span class="token punctuation">:</span>    <span class="token comment"># 每一个玩家，重置分数，打印提示语句</span>    score <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'hello,&#123;&#125;! welcome to our game'</span><span class="token punctuation">.</span>center<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token string">'*'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>player<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token comment"># 给该玩家发牌，打印提示，加上分数，删除该牌</span>        draw_card <span class="token operator">=</span> random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>cards_list<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'The cards you draw are:&#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>draw_card<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        score <span class="token operator">+=</span> draw_card<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        cards_list<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>draw_card<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span>        <span class="token keyword">if</span> score <span class="token operator">></span> <span class="token number">11</span><span class="token punctuation">:</span>            score <span class="token operator">=</span> <span class="token number">0</span>            <span class="token keyword">break</span>        <span class="token comment"># 询问是否继续</span>        user_input <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'do you want to continue: '</span><span class="token punctuation">)</span>        <span class="token comment"># 非法输入退出</span>        <span class="token keyword">if</span> user_input <span class="token operator">!=</span> <span class="token string">'不要'</span> <span class="token keyword">and</span> user_input <span class="token operator">!=</span> <span class="token string">'要'</span><span class="token punctuation">:</span>            exit<span class="token punctuation">(</span><span class="token string">'input wrong'</span><span class="token punctuation">)</span>        <span class="token comment"># 输入不要结束本次循环</span>        <span class="token keyword">if</span> user_input <span class="token operator">==</span> <span class="token string">'不要'</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>        <span class="token comment"># 输入要，抽排，计算得分，去掉抽到的牌</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">continue</span>    result<span class="token punctuation">[</span>player<span class="token punctuation">]</span> <span class="token operator">=</span> score<span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span></code></pre></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 考试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模块1--day2</title>
      <link href="/2022/05/23/Python%E6%A8%A1%E5%9D%97%E4%B8%80day2/"/>
      <url>/2022/05/23/Python%E6%A8%A1%E5%9D%97%E4%B8%80day2/</url>
      
        <content type="html"><![CDATA[<h4 id="此文章为路飞学院PYTHON课程模块一笔记"><a href="#此文章为路飞学院PYTHON课程模块一笔记" class="headerlink" title="此文章为路飞学院PYTHON课程模块一笔记"></a>此文章为路飞学院PYTHON课程<font color="#dd0000">模块一笔记</font></h4><span id="more"></span><h1 id="六、-数据类型（上）"><a href="#六、-数据类型（上）" class="headerlink" title="六、 数据类型（上）"></a>六、 数据类型（上）</h1><p>接下来的3天的课程都是来讲解数据类型的知识点，常见的数据类型：</p><ul><li>int，整数类型（整形）</li><li>bool，布尔类型</li><li>str，字符串类型</li><li>list，列表类型</li><li>tuple，元组类型</li><li>dict，字典类型</li><li>set，集合类型</li><li>float，浮点类型（浮点型）</li></ul><p>每种数据类型都有自己的特点及应用场景，以后的开发中需要根据实际的开发情况选择合适的数据类型。</p><p><img src="/asserts/image-20201102172217820.png" alt="image-20201102172217820"></p><p>每种数据类型的讲解，会按照以下4个维度来进行：</p><ol><li>定义</li><li>独有功能</li><li>公共功能</li><li>类型转换</li><li>其他</li></ol><p>今日课程目标：掌握整形、布尔类型、字符串的必备知识。</p><p>今日课程概要：</p><ul><li>整形</li><li>布尔类型</li><li>字符串类型</li></ul><h2 id="1-整型"><a href="#1-整型" class="headerlink" title="1.整型"></a>1.整型</h2><p>​整型其实就是十进制整数的统称，比如：1、68、999都属于整型。他一般用于表示 年龄、序号等。</p><h3 id="1-1-定义"><a href="#1-1-定义" class="headerlink" title="1.1 定义"></a>1.1 定义</h3><pre class="language-python" data-language="python"><code class="language-python">number <span class="token operator">=</span> <span class="token number">10</span>age <span class="token operator">=</span> <span class="token number">99</span></code></pre><h3 id="1-2-独有功能"><a href="#1-2-独有功能" class="headerlink" title="1.2 独有功能"></a>1.2 独有功能</h3><p>无</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token number">5</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bin</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 0b101</span><span class="token comment"># 调用v1（int）的独有功能，获取v1的二进制有多少个位组成。</span>result1 <span class="token operator">=</span> v1<span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result1<span class="token punctuation">)</span>  <span class="token comment"># 3</span>v2 <span class="token operator">=</span> <span class="token number">10</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 0b1010</span><span class="token comment"># 调用v2（int）的独有功能，获取v2的二进制有多少个位组成。</span>result2 <span class="token operator">=</span> v2<span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result2<span class="token punctuation">)</span>  <span class="token comment"># 4</span></code></pre><h3 id="1-3-公共功能"><a href="#1-3-公共功能" class="headerlink" title="1.3 公共功能"></a>1.3 公共功能</h3><p>加减乘除</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token number">4</span>v2 <span class="token operator">=</span> <span class="token number">8</span>v3 <span class="token operator">=</span> v1 <span class="token operator">+</span> v2</code></pre><h3 id="1-4-转换"><a href="#1-4-转换" class="headerlink" title="1.4 转换"></a>1.4 转换</h3><p>在项目开发和面试题中经常会出现一些<font color="#dd0000">“字符串” 和 布尔值 </font> 转换为 整型的情况。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 布尔值转整型</span>n1 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>  <span class="token comment"># True转换为整数 1</span>n2 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token comment"># False转换为整数 0</span><span class="token comment"># 字符串转整型</span>v1 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">"186"</span><span class="token punctuation">,</span>base<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment"># 把字符串看成十进制的值，然后再转换为 十进制整数，结果：v1 = 186</span>v2 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">"0b1001"</span><span class="token punctuation">,</span>base<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># 把字符串看成二进制的值，然后再转换为 十进制整数，结果：v1 = 9 (0b表示二进制)</span>v3 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">"0o144"</span><span class="token punctuation">,</span>base<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">)</span>  <span class="token comment"># 把字符串看成八进制的值，然后转换为 十进制整数，结果：v1 = 100 (0o表示八进制)</span>v4 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">"0x59"</span><span class="token punctuation">,</span>base<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>  <span class="token comment"># 把字符串看成十六进制的值，然后转换为 十进制整数，结果：v1 = 89 （0x表示十六进制）</span><span class="token comment"># 浮点型（小数）</span>v1 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">8.7</span><span class="token punctuation">)</span> <span class="token comment"># 8</span></code></pre><p>​所以，如果以后别人给你一个按 二进制、八进制、十进制、十六进制 规则存储的字符串时，可以轻松的通过int转换为十进制的整数。</p><h3 id="1-5-其他"><a href="#1-5-其他" class="headerlink" title="1.5 其他"></a>1.5 其他</h3><h4 id="1-5-1-长整型"><a href="#1-5-1-长整型" class="headerlink" title="1.5.1 长整型"></a>1.5.1 长整型</h4><ul><li>Python3：整型（无限制）</li><li>Python2：整型、长整形</li></ul><p>在python2中跟整数相关的数据类型有两种：int(整型)、long（长整型），他们都是整数只不过能表示的值范围不同。</p><img src="asserts/image-20201102190227431.png" alt="image-20201102190227431" style="zoom:50%;" /><ul><li>int，可表示的范围：-9223372036854775808～9223372036854775807</li><li>long，整数值超出int范围之后自动会转换为long类型（无限制）。</li></ul><p>在python3中去除了long只剩下：int（整型），并且 int 长度不在限制。</p><h4 id="1-5-2-地板除"><a href="#1-5-2-地板除" class="headerlink" title="1.5.2 地板除"></a>1.5.2 地板除</h4><ul><li><p>Py3：</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token number">9</span><span class="token operator">/</span><span class="token number">2</span> <span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span> <span class="token comment"># 4.5</span></code></pre></li><li><p>py2:</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token number">9</span><span class="token operator">/</span><span class="token number">2</span> <span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span> <span class="token comment"># 4</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> __future__ <span class="token keyword">import</span> division v1 <span class="token operator">=</span> <span class="token number">9</span><span class="token operator">/</span><span class="token number">2</span> <span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span> <span class="token comment"># 4.5</span></code></pre></li></ul><h2 id="2-布尔类型"><a href="#2-布尔类型" class="headerlink" title="2. 布尔类型"></a>2. 布尔类型</h2><p>​布尔值，其实就是 “真”、“假” 。</p><h3 id="2-1-定义"><a href="#2-1-定义" class="headerlink" title="2.1 定义"></a>2.1 定义</h3><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token boolean">False</span>alex_is_sb <span class="token operator">=</span> <span class="token boolean">True</span></code></pre><h3 id="2-2-独有功能"><a href="#2-2-独有功能" class="headerlink" title="2.2 独有功能"></a>2.2 独有功能</h3><p>无</p><h3 id="2-3-公共功能"><a href="#2-3-公共功能" class="headerlink" title="2.3 公共功能"></a>2.3 公共功能</h3><p>无</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token boolean">True</span> <span class="token operator">+</span> <span class="token boolean">True</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span> <span class="token comment"># 2</span></code></pre><h3 id="2-4-转换"><a href="#2-4-转换" class="headerlink" title="2.4 转换"></a>2.4 转换</h3><p>​在以后的项目开发中，会经常使用其他类型转换为布尔值的情景，此处只要记住一个规律即可。</p><pre class="language-python" data-language="python"><code class="language-python">整数<span class="token number">0</span>、空字符串、空列表、空元组、空字典转换为布尔值时均为<span class="token boolean">False</span>其他均为<span class="token boolean">True</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 练习题：查看一些变量为True还是False</span>v1 <span class="token operator">=</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>  v2 <span class="token operator">=</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span>v3 <span class="token operator">=</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>v4 <span class="token operator">=</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token string">"武沛齐"</span><span class="token punctuation">)</span>v5 <span class="token operator">=</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>v6 <span class="token operator">=</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span>v7 <span class="token operator">=</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># [] 表示空列表</span>v8 <span class="token operator">=</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">11</span>，<span class="token number">22</span>，<span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># [11，22，33] 表示非空列表</span>v9 <span class="token operator">=</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token comment"># &#123;&#125; 表示空字典</span>v10 <span class="token operator">=</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"武沛齐"</span><span class="token punctuation">,</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token comment"># &#123;"name":"武沛齐","age":18&#125; 表示非空字典</span></code></pre><h3 id="2-5-其他"><a href="#2-5-其他" class="headerlink" title="2.5 其他"></a>2.5 其他</h3><h4 id="2-5-1-做条件自动转换"><a href="#2-5-1-做条件自动转换" class="headerlink" title="2.5.1 做条件自动转换"></a>2.5.1 做条件自动转换</h4><p>​如果在 <code>if</code> 、<code>while</code> 条件后面写一个值当做条件时，他会默认转换为布尔类型，然后再做条件判断。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> <span class="token number">0</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"太六了"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">999</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token string">"武沛齐"</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"你好"</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token string">"alex"</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"你是傻逼？"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"你是逗比？"</span><span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> 值<span class="token punctuation">:</span>  <span class="token keyword">pass</span><span class="token keyword">while</span> 值<span class="token punctuation">:</span>  <span class="token keyword">pass</span></code></pre><h2 id="3-字符串类型"><a href="#3-字符串类型" class="headerlink" title="3.字符串类型"></a>3.字符串类型</h2><p>​字符串，我们平时会用他来表示文本信息。例如：姓名、地址、自我介绍等。</p><h3 id="3-1-定义"><a href="#3-1-定义" class="headerlink" title="3.1 定义"></a>3.1 定义</h3><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token string">"包治百病"</span>v2 <span class="token operator">=</span> <span class="token string">'包治百病'</span>v3 <span class="token operator">=</span> <span class="token string">"包'治百病"</span>v4 <span class="token operator">=</span> <span class="token string">'包"治百病'</span>v5 <span class="token operator">=</span> <span class="token triple-quoted-string string">"""吵架都是我的错，因为大家打不过。"""</span><span class="token comment"># 三个引号，可以支持多行/换行表示一个字符串，其他的都只能在一行中表示一个字符串。</span></code></pre><h3 id="3-2-独有功能（18-x2F-48）"><a href="#3-2-独有功能（18-x2F-48）" class="headerlink" title="3.2 独有功能（18&#x2F;48）"></a>3.2 独有功能（18&#x2F;48）</h3><pre class="language-python" data-language="python"><code class="language-python"><span class="token string">"xxxxx"</span><span class="token punctuation">.</span>功能<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span>v1 <span class="token operator">=</span> <span class="token string">"xxxxx"</span>v1<span class="token punctuation">.</span>功能<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span></code></pre><ol><li><p>str.startswith()  判断字符串是否以 XX 开头？得到一个布尔值</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token string">"叨逼叨的一天，烦死了"</span><span class="token comment"># True</span>result <span class="token operator">=</span> v1<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"叨逼叨的一天"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment"># 值为True</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 案例</span>v1 <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入住址："</span><span class="token punctuation">)</span><span class="token keyword">if</span> v1<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"北京市"</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"北京人口"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"非北京人口"</span><span class="token punctuation">)</span></code></pre></li><li><p>str.endswith()  判断字符串是否以 XX 结尾？得到一个布尔值</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token string">"叨逼叨的一天，烦死了"</span>result <span class="token operator">=</span> v1<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">"烦死了"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment"># 值为True</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 案例</span>address <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入地址："</span><span class="token punctuation">)</span><span class="token keyword">if</span> address<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'村'</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"农业户口"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"非农户口"</span><span class="token punctuation">)</span></code></pre></li><li><p>str.isdecimal()  判断字符串是否为十进制数？得到一个布尔值</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token string">"1238871"</span>result <span class="token operator">=</span> v1<span class="token punctuation">.</span>isdecimal<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment"># True</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 案例,两个数相加。</span>v1 <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入值："</span><span class="token punctuation">)</span> <span class="token comment"># ”666“</span>v2 <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入值："</span><span class="token punctuation">)</span> <span class="token comment"># ”999“</span><span class="token keyword">if</span> v1<span class="token punctuation">.</span>isdecimal<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">and</span> v2<span class="token punctuation">.</span>isdecimal<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>data <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">int</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"请正确输入数字"</span><span class="token punctuation">)</span></code></pre><p><font color="#dd0000">为什么不用isdigit() </font></p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token string">"123"</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">.</span>isdecimal<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span>v2 <span class="token operator">=</span> <span class="token string">"①"</span><span class="token keyword">print</span><span class="token punctuation">(</span>v2<span class="token punctuation">.</span>isdecimal<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># False</span>v3 <span class="token operator">=</span> <span class="token string">"123"</span><span class="token keyword">print</span><span class="token punctuation">(</span>v3<span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span>v4 <span class="token operator">=</span> <span class="token string">"①"</span><span class="token keyword">print</span><span class="token punctuation">(</span>v4<span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span></code></pre></li><li><p>str.strip()  去除字符串两边的 空格、换行符、制表符，得到一个新字符串</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入内容："</span><span class="token punctuation">)</span> <span class="token comment"># '武沛齐   ' </span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">msg <span class="token operator">=</span> <span class="token string">" H e ll o啊，树哥 "</span>data <span class="token operator">=</span> msg<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 将msg两边的空白去掉，得到"H e ll o啊，树哥"</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">msg <span class="token operator">=</span> <span class="token string">" H e ll o啊，树哥 "</span>data <span class="token operator">=</span> msg<span class="token punctuation">.</span>lstrip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 将msg两边的空白去掉，得到"H e ll o啊，树哥 "</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">msg <span class="token operator">=</span> <span class="token string">" H e ll o啊，树哥 "</span>data <span class="token operator">=</span> msg<span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 将msg两边的空白去掉，得到" H e ll o啊，树哥"</span></code></pre><p><strong>补充：去除 空格、换行符、制表符。</strong></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 案例</span>code <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入4位验证码："</span><span class="token punctuation">)</span> <span class="token comment">#' FB87 '   </span>data <span class="token operator">=</span> code<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> data <span class="token operator">==</span> <span class="token string">"FB87"</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'验证码正确'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"验证码错误"</span><span class="token punctuation">)</span></code></pre><p><strong>再补充：str.lstrip()  去除字符串两边指定的内容</strong></p><pre class="language-python" data-language="python"><code class="language-python">msg <span class="token operator">=</span> <span class="token string">"哥H e ll o啊，树哥"</span>data <span class="token operator">=</span> msg<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">"哥"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 将msg两边的空白去掉，得到"H e ll o啊，树"</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">msg <span class="token operator">=</span> <span class="token string">"哥H e ll o啊，树哥"</span>data <span class="token operator">=</span> msg<span class="token punctuation">.</span>lstrip<span class="token punctuation">(</span><span class="token string">"哥"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 将msg两边的空白去掉，得到"H e ll o啊，树哥"</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">msg <span class="token operator">=</span> <span class="token string">"哥H e ll o啊，树哥"</span>data <span class="token operator">=</span> msg<span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token string">"哥"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 将msg两边的空白去掉，得到"哥H e ll o啊，树"</span></code></pre></li><li><p>str.upper()  字符串变大写，得到一个新字符串</p><pre class="language-python" data-language="python"><code class="language-python">msg <span class="token operator">=</span> <span class="token string">"my name is oliver queen"</span>data <span class="token operator">=</span> msg<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span> <span class="token comment"># my name is oliver queen</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 输出为：MY NAME IS OLIVER QUEEN</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 案例</span>code <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入4位验证码："</span><span class="token punctuation">)</span> <span class="token comment">#  ' FB88 '   '  fb88' </span>value <span class="token operator">=</span> code<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#  '  FB88'  </span>data <span class="token operator">=</span> value<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 'FB88'</span><span class="token keyword">if</span> data <span class="token operator">==</span> <span class="token string">"FB87"</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'验证码正确'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"验证码错误"</span><span class="token punctuation">)</span>  <span class="token comment"># 注意事项</span><span class="token triple-quoted-string string">"""code的值"  fb88"value的值"  FB88"data的值"FB88""""</span></code></pre></li><li><p>str.lower()  字符串变小写，得到一个新字符串</p><pre class="language-python" data-language="python"><code class="language-python">msg <span class="token operator">=</span> <span class="token string">"My Name Is Oliver Queen"</span>data <span class="token operator">=</span> msg<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 输出为：my name is oliver queen</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 案例</span>code <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入4位验证码："</span><span class="token punctuation">)</span>value <span class="token operator">=</span> code<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> value <span class="token operator">==</span> <span class="token string">"fb87"</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'验证码正确'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"验证码错误"</span><span class="token punctuation">)</span></code></pre></li><li><p>str.replace()  字符串内容替换，得到一个新的字符串</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token string">"你是个好人，但是好人不合适我"</span>value <span class="token operator">=</span> data<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"好人"</span><span class="token punctuation">,</span><span class="token string">"贱人"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>  <span class="token comment"># "你是个好人，但是好人不合适我"</span><span class="token keyword">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment"># "你是个贱人，但是贱人不合适我"</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 案例</span>video_file_name <span class="token operator">=</span> <span class="token string">"高清无码爱情动作片.mp4"</span>new_file_name <span class="token operator">=</span> video_file_name<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"mp4"</span><span class="token punctuation">,</span><span class="token string">"avi"</span><span class="token punctuation">)</span> <span class="token comment"># "高清无码爱情动作片.avi"</span>final_file_name <span class="token operator">=</span> video_file_name<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"无码"</span><span class="token punctuation">,</span><span class="token string">"步兵"</span><span class="token punctuation">)</span> <span class="token comment"># "高清步兵爱情动作片.mp4"</span><span class="token keyword">print</span><span class="token punctuation">(</span>final_file_name<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 案例</span>content <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入评论信息"</span><span class="token punctuation">)</span> <span class="token comment"># alex是一个草包</span>content <span class="token operator">=</span> content<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"草"</span><span class="token punctuation">,</span><span class="token string">"**"</span><span class="token punctuation">)</span> <span class="token comment"># alex是一个**包</span>content <span class="token operator">=</span> content<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"泥马"</span><span class="token punctuation">,</span><span class="token string">"***"</span><span class="token punctuation">)</span> <span class="token comment"># alex是一个**包</span><span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span> <span class="token comment"># alex是一个**包</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">char_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"草拟吗"</span><span class="token punctuation">,</span><span class="token string">"逗比"</span><span class="token punctuation">,</span><span class="token string">"二蛋"</span><span class="token punctuation">,</span><span class="token string">"钢球"</span><span class="token punctuation">]</span>content <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入评论信息"</span><span class="token punctuation">)</span><span class="token keyword">for</span> item <span class="token keyword">in</span> char_list<span class="token punctuation">:</span>  content <span class="token operator">=</span> content<span class="token punctuation">.</span>repalce<span class="token punctuation">(</span>item<span class="token punctuation">,</span><span class="token string">"**"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span></code></pre></li><li><p>str.split()  字符串切割，得到一个列表</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token string">"武沛齐|root|wupeiqi@qq.com"</span>result <span class="token operator">=</span> data<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span> <span class="token comment"># ["武沛齐","root","wupeiqi@qq.com"]</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># "武沛齐|root|wupeiqi@qq.com"</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment"># 输出 ["武沛齐","root","wupeiqi@qq.com"] 根据特定字符切开之后保存在列表中，方便以后的操作</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">&lt;</span>font color<span class="token operator">=</span><span class="token string">"#dd0000"</span><span class="token operator">></span><span class="token string">"字符串"</span> 和 布尔值 <span class="token operator">&lt;</span><span class="token operator">/</span>font<span class="token operator">></span> <span class="token comment"># 案例：判断用户名密码是否正确</span>info <span class="token operator">=</span> <span class="token string">"武沛齐,root"</span>   <span class="token comment"># 备注：字符串中存储了用户名和密码</span>user_list <span class="token operator">=</span> info<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span>    <span class="token comment"># 得到一个包含了2个元素的列表 [ "武沛齐" , "root" ]</span>user <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名："</span><span class="token punctuation">)</span>pwd <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入密码："</span><span class="token punctuation">)</span><span class="token keyword">if</span> user <span class="token operator">==</span> user_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">and</span> pwd <span class="token operator">==</span> user_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"登录成功"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"用户名或密码错误"</span><span class="token punctuation">)</span></code></pre><p><font color="#dd0000">扩展：只切遇到的前第n个 </font> </p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token string">"武沛齐|root|wupeiqi@qq.com"</span>v1 <span class="token operator">=</span> data<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"|"</span><span class="token punctuation">)</span>   <span class="token comment"># ['武沛齐', 'root', 'wupeiqi@qq.com']</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span>v2 <span class="token operator">=</span> data<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">"|"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># ['武沛齐', 'root|wupeiqi@qq.com']</span><span class="token keyword">print</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span></code></pre><p><font color="#dd0000">再扩展：从右向左切 </font> </p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token string">"武沛齐,root,wupeiqi@qq.com"</span>v1 <span class="token operator">=</span> data<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span> <span class="token comment"># ['武沛齐', 'root', 'wupeiqi@qq.com']</span>v2 <span class="token operator">=</span> data<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span> <span class="token comment"># ['武沛齐,root', 'wupeiqi@qq.com']</span></code></pre><p><strong>应用场景：找路径拓展名</strong></p><pre class="language-python" data-language="python"><code class="language-python">file_path <span class="token operator">=</span> <span class="token string">"xxx/xxxx/xx.xx/xxx.mp4"</span>data_list <span class="token operator">=</span> file_path<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># ["xxx/xxxx/xx.xx/xxx","mp4"]</span>data_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment"># 路径拓展名</span></code></pre></li><li><p>str.join()  字符串拼接，得到一个新的字符串</p><pre class="language-python" data-language="python"><code class="language-python">data_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"是"</span><span class="token punctuation">,</span><span class="token string">"大烧饼"</span><span class="token punctuation">]</span>v1 <span class="token operator">=</span> <span class="token string">"_"</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>data_list<span class="token punctuation">)</span> <span class="token comment"># alex_是_大烧饼</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span></code></pre></li><li><p>str.format()  格式化字符串，得到新的字符串</p><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"&#123;0&#125;的喜欢干很多行业，例如有：&#123;1&#125;、&#123;2&#125; 等"</span>data <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">"老王"</span><span class="token punctuation">,</span><span class="token string">"护士"</span><span class="token punctuation">,</span><span class="token string">"嫩模"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 老王的喜欢干很多行业，例如有：护士、嫩模 等</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token comment"># "&#123;0&#125;的喜欢干很多行业，例如有：&#123;1&#125;、&#123;2&#125; 等"</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"&#123;&#125;的喜欢干很多行业，例如有：&#123;&#125;、&#123;&#125; 等"</span>data <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">"老王"</span><span class="token punctuation">,</span><span class="token string">"护士"</span><span class="token punctuation">,</span><span class="token string">"嫩模"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 老王的喜欢干很多行业，例如有：护士、嫩模 等</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"&#123;name&#125;的喜欢干很多行业，例如有：&#123;h1&#125;、&#123;h2&#125; 等"</span>data <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"老王"</span><span class="token punctuation">,</span>h1<span class="token operator">=</span><span class="token string">"护士"</span><span class="token punctuation">,</span>h2<span class="token operator">=</span><span class="token string">"嫩模"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 老王的喜欢干很多行业，例如有：护士、嫩模 等</span></code></pre></li><li><p>str.encode()  字符串转换为字节类型</p><p>str.decode()  字节类型转换为字符串</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token string">"嫂子"</span>  <span class="token comment"># unicode，字符串类型</span>v1 <span class="token operator">=</span> data<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>  <span class="token comment"># utf-8，字节类型</span>v2 <span class="token operator">=</span> data<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"gbk"</span><span class="token punctuation">)</span>  <span class="token comment"># gbk，字节类型</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span>  <span class="token comment"># b'\xe5\xab\x82 \xe5\xad\x90'</span><span class="token keyword">print</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span>  <span class="token comment"># b'\xc9\xa9 \xd7\xd3'</span>s1 <span class="token operator">=</span> v1<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>s2 <span class="token operator">=</span> v2<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">"gbk"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span>  <span class="token comment"># 嫂子</span><span class="token keyword">print</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span>  <span class="token comment"># 嫂子</span></code></pre></li><li><p>str.center()  str.ljust()  str.rjust()  将字符串内容居中、居左、居右展示</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token string">"王老汉"</span><span class="token comment"># data = v1.center(21, "-")</span><span class="token comment"># print(data) #---------王老汉---------</span><span class="token comment"># data = v1.ljust(21, "-")</span><span class="token comment"># print(data) # 王老汉------------------</span><span class="token comment"># data = v1.rjust(21, "-")</span><span class="token comment"># print(data) # ------------------王老汉</span></code></pre></li><li><p>str.zfill() 帮助你填充0</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token string">"alex"</span>v1 <span class="token operator">=</span> data<span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span> <span class="token comment"># 000000alex</span></code></pre><p><strong>应用场景：处理二进制数据</strong></p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token string">"101"</span> <span class="token comment"># "00000101"</span>v1 <span class="token operator">=</span> data<span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span> <span class="token comment"># "00000101"</span></code></pre></li></ol><h4 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h4><ol><li><p>写代码实现判断用户输入的值否以 “al”开头,如果是则输出 “是的” 否则 输出 “不是的”</p><pre class="language-python" data-language="python"><code class="language-python">text <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input a name: '</span><span class="token punctuation">)</span>data <span class="token operator">=</span> text<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'al'</span><span class="token punctuation">)</span><span class="token keyword">if</span> data<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Yes'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Noo'</span><span class="token punctuation">)</span></code></pre></li><li><p>写代码实现判断用户输入的值否以”Nb”结尾,如果是则输出 “是的” 否则 输出 “不是的”</p><pre class="language-python" data-language="python"><code class="language-python">text <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input a name: '</span><span class="token punctuation">)</span>data <span class="token operator">=</span> text<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'NB'</span><span class="token punctuation">)</span><span class="token keyword">if</span> data<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Yes'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Noo'</span><span class="token punctuation">)</span></code></pre></li><li><p>将 name 变量对应的值中的 所有的”l”替换为 “p”,并输出结果</p><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">'耿|天|霸'</span>new_name <span class="token operator">=</span> name<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">,</span> <span class="token string">'p'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>new_name<span class="token punctuation">)</span></code></pre></li><li><p>写代码实现对用户输入的值判断，是否为整数，如果是则转换为整型并输出，否则直接输出”请输入数字”</p><pre class="language-python" data-language="python"><code class="language-python">user_input <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input a number: '</span><span class="token punctuation">)</span>data <span class="token operator">=</span> user_input<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> data<span class="token punctuation">.</span>isdecimal<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'wrong type'</span><span class="token punctuation">)</span></code></pre></li><li><p>对用户输入的数据使用”+”切割，判断输入的值是否都是数字？<br>提示：用户输入的格式必须是以下+连接的格式，如 5+9 、alex+999</p><pre class="language-python" data-language="python"><code class="language-python">user_input <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input a string link with "+": '</span><span class="token punctuation">)</span>data <span class="token operator">=</span> user_input<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'+'</span><span class="token punctuation">)</span>  <span class="token comment"># ['5', '9']</span><span class="token keyword">if</span> data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isdecimal <span class="token keyword">and</span> data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isdecimal<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'wrong type'</span><span class="token punctuation">)</span></code></pre></li><li><p>写代码实现一个整数加法计算器(两个数相加)<br>需求：提示用户输入：5 + 9 ,计算出两个值的和（提示：先分割再去空白再转换为整型，再相加）</p><pre class="language-python" data-language="python"><code class="language-python">user_input <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input a string link with "+": '</span><span class="token punctuation">)</span>data <span class="token operator">=</span> user_input<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'+'</span><span class="token punctuation">)</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isdecimal <span class="token keyword">and</span> data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isdecimal<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">int</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'wrong type'</span><span class="token punctuation">)</span></code></pre></li><li><p>补充代码实现用户认证。<br>需求：提示用户输入手机号、验证码，全都验证通过之后才算登录成功（验证码大小写不敏感）</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> randomcode <span class="token operator">=</span> random<span class="token punctuation">.</span>randrange<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">9999</span><span class="token punctuation">)</span> <span class="token comment"># 生成动态验证码</span>msg <span class="token operator">=</span> <span class="token string">"欢迎登录PythonAV系统，您的验证码为：&#123;&#125;,手机号为：&#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>code<span class="token punctuation">,</span><span class="token string">"15131266666"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token comment"># 请补充代码</span>log_phone <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input your phone: '</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>log_code <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input your code: '</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> log_phone <span class="token operator">==</span> <span class="token string">"15131266666"</span> <span class="token keyword">and</span> log_code <span class="token operator">==</span> <span class="token builtin">str</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'login successful'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'phone_number or code wrong'</span><span class="token punctuation">)</span></code></pre></li><li><p>补充代码实现数据拼接</p><pre class="language-python" data-language="python"><code class="language-python">data_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    hobby <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入你的爱好（Q/q退出）："</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> hobby<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'Q'</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    <span class="token comment"># 把输入的值添加到 data_list 中，如：data_list = ["小姨子","哥们的女朋友"]</span>    data_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>hobby<span class="token punctuation">)</span>     <span class="token comment"># 将所有的爱好通过符号 "、"拼接起来并输出</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'、'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>data_list<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></li></ol><h3 id="3-3-公共功能"><a href="#3-3-公共功能" class="headerlink" title="3.3 公共功能"></a>3.3 公共功能</h3><ol><li><p>相加：字符串 + 字符串</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token string">"alex"</span> <span class="token operator">+</span> <span class="token string">"大sb"</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span></code></pre></li><li><p>相乘：字符串 * 整数</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token string">"嫂子"</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 嫂子嫂子嫂子</span></code></pre></li><li><p>运算符in包含<br>由于字符串内部是由多个元素组成，可以通过in来判断元素是否在字符串中。</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token string">"嫂子满身大汉"</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'子'</span> <span class="token keyword">in</span> data<span class="token punctuation">)</span>  <span class="token comment"># True</span></code></pre></li><li><p>长度</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token string">"嫂子满身大汉"</span>value <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment"># 6</span></code></pre></li><li><p>获取字符串中的字符，索引</p><pre class="language-python" data-language="python"><code class="language-python">message <span class="token operator">=</span> <span class="token string">"来做点py交易呀"</span><span class="token comment">#          0 1 2345 6 7</span><span class="token comment">#           ... -3 -2 -1</span><span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># "来"</span><span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># "做"</span><span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># "点"</span><span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 呀</span><span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 易</span><span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 交</span></code></pre><p>​<font color="#dd0000">注意：字符串中是能通过索引取值，无法修改值。【字符串在内部存储时不允许对内部元素修改，想修改只能重新创建。】 </font> </p><pre class="language-python" data-language="python"><code class="language-python">message <span class="token operator">=</span> <span class="token string">"来做点py交易呀"</span>index <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> index <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">:</span>value <span class="token operator">=</span> message<span class="token punctuation">[</span>index<span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>    index <span class="token operator">+=</span> <span class="token number">1</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">message <span class="token operator">=</span> <span class="token string">"来做点py交易呀"</span>index <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>  <span class="token comment"># 索引号比长度小1，索引号从0开始，长度从1开始</span><span class="token keyword">while</span> index <span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">:</span>    value <span class="token operator">=</span> message<span class="token punctuation">[</span>index<span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>    index <span class="token operator">-=</span> <span class="token number">1</span></code></pre></li><li><p>获取字符串中的子序列，切片</p><pre class="language-python" data-language="python"><code class="language-python">xxxxxxxxxx message <span class="token operator">=</span> <span class="token string">"来做点py交易呀"</span><span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># "来做"print(message[3:7]) # "py交易"print( message[3:] ) # "py交易呀"print( message[:5] ) # "来做点py"print(message[4:-1]) # "y交易"print(message[4:-2]) # "y交"print( message[4:len(message)] ) # "y交易呀"</span></code></pre><p>​<font color="#dd0000">注意：字符串中的切片只能读取数据，无法修改数据。【字符串在内部存储时不允许对内部元素修改，想要修改只能重新创建】 </font> </p><pre class="language-python" data-language="python"><code class="language-python">message <span class="token operator">=</span> <span class="token string">"来做点py交易呀"</span>value <span class="token operator">=</span> message<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"Python"</span> <span class="token operator">+</span> message<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span></code></pre></li><li><p>步长，跳着去字符串的内容</p><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"生活不是电影，生活比电影苦"</span><span class="token keyword">print</span><span class="token punctuation">(</span> name<span class="token punctuation">[</span> <span class="token number">0</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token number">2</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span>   <span class="token comment"># 输出：生不电 【前两个值表示区间范围，最有一个值表示步长】</span><span class="token keyword">print</span><span class="token punctuation">(</span> name<span class="token punctuation">[</span> <span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token number">2</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span>    <span class="token comment"># 输出：生不电，  【区间范围的前面不写则表示起始范围为0开始】、</span><span class="token keyword">print</span><span class="token punctuation">(</span> name<span class="token punctuation">[</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">3</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span>    <span class="token comment"># 输出：不影活影</span><span class="token keyword">print</span><span class="token punctuation">(</span> name<span class="token punctuation">[</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">3</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span>    <span class="token comment"># 输出：不电，活电苦 【区间范围的后面不写则表示结束范围为最后】</span><span class="token keyword">print</span><span class="token punctuation">(</span> name<span class="token punctuation">[</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span>     <span class="token comment"># 输出：生不电，活电苦 【区间范围不写表示整个字符串】</span><span class="token keyword">print</span><span class="token punctuation">(</span> name<span class="token punctuation">[</span> <span class="token number">8</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span>  <span class="token comment"># 输出：活生，影电是不 【倒序】</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"生活不是电影，生活比电影苦"</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 输出：活生，影电是不 【倒序】</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 输出：苦影电比活生，影电是不 【倒序】</span><span class="token comment"># 面试题：给你一个字符串，请将这个字符串翻转。</span></code></pre><p>​<font color="#dd0000"><strong>面试题：给你一个字符串，请将这个字符串翻转</strong> </font> </p><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"生活不是电影，生活比电影苦"</span>value <span class="token operator">=</span> name<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>  <span class="token comment"># 苦影电比活生，影电是不活生</span></code></pre></li><li><p>循环</p><ul><li><p>while循环</p><pre class="language-python" data-language="python"><code class="language-python">message <span class="token operator">=</span> <span class="token string">"来做点py交易呀"</span>index <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> index <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">:</span>value <span class="token operator">=</span> message<span class="token punctuation">[</span>index<span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>    index <span class="token operator">+=</span> <span class="token number">1</span></code></pre></li><li><p>for循环</p><pre class="language-python" data-language="python"><code class="language-python">message <span class="token operator">=</span> <span class="token string">"来做点py交易呀"</span><span class="token keyword">for</span> char <span class="token keyword">in</span> message<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span></code></pre></li><li><p>range，帮助我们创建一系列的数字</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment"># [0,1,2,3,4,5,6,7,8,9]</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment"># [1,2,3,4,5,6,7,8,9]</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># [1,3,5,7,9]</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># [10,9,8,7,6,5,4,3,2]</span></code></pre></li><li><p>for + range</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">message <span class="token operator">=</span> <span class="token string">"来做点py交易呀"</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># [0,1,2,3,4]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">message <span class="token operator">=</span> <span class="token string">"来做点py交易呀"</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span> <span class="token builtin">len</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># [0,1,2,3,4,5,6,7]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre></li></ul><p>一般应用场景：</p><ul><li><p><font color="#dd0000"><strong>while，一般在做无限制（未知）循环此处时使用.</strong></font></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 用户输入一个值，如果不是整数则一直输入，直到是整数了才结束。</span>num <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    data <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入内容:"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> data<span class="token punctuation">.</span>isdecimal<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>        <span class="token keyword">break</span><span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"输入错误，请重新输入！"</span><span class="token punctuation">)</span></code></pre></li><li><p><font color="#dd0000"><strong>for循环，一般应用在已知的循环数量的场景。</strong></font></p><pre class="language-python" data-language="python"><code class="language-python">message <span class="token operator">=</span> <span class="token string">"来做点py交易呀"</span><span class="token keyword">for</span> char <span class="token keyword">in</span> message<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre></li><li><p>break和continue关键字</p><pre class="language-python" data-language="python"><code class="language-python">message <span class="token operator">=</span> <span class="token string">"来做点py交易呀"</span><span class="token keyword">for</span> char <span class="token keyword">in</span> message<span class="token punctuation">:</span>    <span class="token keyword">if</span> char <span class="token operator">==</span> <span class="token string">"p"</span><span class="token punctuation">:</span>        <span class="token keyword">continue</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token comment"># 输出：</span>来做点y交易呀</code></pre><pre class="language-python" data-language="python"><code class="language-python">message <span class="token operator">=</span> <span class="token string">"来做点py交易呀"</span><span class="token keyword">for</span> char <span class="token keyword">in</span> message<span class="token punctuation">:</span>    <span class="token keyword">if</span> char <span class="token operator">==</span> <span class="token string">"p"</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token comment"># 输出：</span>来做点</code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token comment"># 0 1 2 3 4</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>               <span class="token keyword">print</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span> <span class="token comment"># 0 1 2  # 0 1 2  # 0 1 2  # 0 1 2  # 0 1 2  </span></code></pre></li></ul></li></ol><h3 id="3-4-转换"><a href="#3-4-转换" class="headerlink" title="3.4 转换"></a>3.4 转换</h3><pre class="language-python" data-language="python"><code class="language-python">num <span class="token operator">=</span> <span class="token number">999</span>data <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># "999"</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">data_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"eric"</span><span class="token punctuation">,</span><span class="token number">999</span><span class="token punctuation">]</span>data <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>data_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># '["alex","eric",999]'</span></code></pre><p>​<font color="#dd0000">一般情况下，只有整型转字符串才有意义。</font></p><h3 id="3-5-其他-字符串不可被修改"><a href="#3-5-其他-字符串不可被修改" class="headerlink" title="3.5 其他-字符串不可被修改"></a>3.5 其他-字符串不可被修改</h3><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"武沛齐"</span>name<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>name<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">num_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">]</span>num_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>num_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">666</span></code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li><p>整型在Python2和Python3中的区别？</p><pre class="language-python" data-language="python"><code class="language-python">Python2中的整型<span class="token operator">-</span> 长整型    <span class="token operator">-</span> 短整型Python3中的整型：所有整数</code></pre></li><li><p>进制之间的转换。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">-</span> 其它进制转为十进制<span class="token operator">-</span> 二进制转十进制： <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">'0b...'</span><span class="token punctuation">,</span> base<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token operator">-</span> 八进制转十进制： <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">'0o...'</span><span class="token punctuation">,</span> base<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">)</span>    <span class="token operator">-</span> 十六进制转十进制： <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">'0x...'</span><span class="token punctuation">,</span> base<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token operator">-</span> 十进制转其它进制    <span class="token operator">-</span> 十进制转二进制： <span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token operator">-</span> 十进制转八进制： <span class="token builtin">oct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token operator">-</span> 十进制转十六进制： <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   </code></pre></li><li><p>其他类型转换为布尔类型时，空和0为False，其他均为True。</p></li><li><p>条件语句中可自动化转换布尔类型来做判断。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> <span class="token string">"武沛齐"</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">666</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">999</span><span class="token punctuation">)</span></code></pre></li><li><p>字符串中常见的独有功能。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token builtin">str</span><span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 判断字符串是否以 XX 开头？得到一个布尔值</span><span class="token builtin">str</span><span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 判断字符串是否以 XX 结尾？得到一个布尔值</span><span class="token builtin">str</span><span class="token punctuation">.</span>isdecimal<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 判断字符串是否为十进制数？得到一个布尔值</span><span class="token builtin">str</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 去除字符串两边的 空格、换行符、制表符，得到一个新字符串</span>    lstrip<span class="token punctuation">(</span><span class="token punctuation">)</span>、rstrip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token builtin">str</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 字符串变大写，得到一个新字符串</span>    <span class="token builtin">str</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token builtin">str</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 字符串内容替换，得到一个新的字符串</span><span class="token builtin">str</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 字符串切割，得到一个列表</span>    lsplit<span class="token punctuation">(</span><span class="token punctuation">)</span>、rsplit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token builtin">str</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 字符串拼接，得到一个新的字符串</span><span class="token builtin">str</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 格式化字符串，得到新的字符串</span><span class="token builtin">str</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 字符串转换为字节类型</span><span class="token builtin">str</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 字节类型转换为字符串</span><span class="token builtin">str</span><span class="token punctuation">.</span>center<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token builtin">str</span><span class="token punctuation">.</span>ljust<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token builtin">str</span><span class="token punctuation">.</span>rjust<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 将字符串内容居中、居左、居右展示</span><span class="token builtin">str</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 帮助你填充0</span></code></pre></li><li><p>字符串中常见的公共功能。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token number">1</span>、相加：字符串 <span class="token operator">+</span> 字符串<span class="token number">2</span>、相乘：字符串 <span class="token operator">*</span> 整数<span class="token number">3</span>、长度<span class="token number">4</span>、获取字符串中的字符，索引<span class="token number">5</span>、获取字符串中的子序列，切片<span class="token number">6</span>、步长，跳着去字符串的内容<span class="token number">7</span>、循环</code></pre></li><li><p><font color="#dd0000">字符串创建之后是不可以被修改的。</font></p></li></ol><h2 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h2><ol><li><p>请用代码实现如下进制的转换。</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token number">675</span>          <span class="token comment"># 请将v1转换为二进制（字符串类型）。</span>v2 <span class="token operator">=</span> <span class="token string">"0b11000101"</span> <span class="token comment"># 请将二进制v2转换为十进制（整型）</span>v3 <span class="token operator">=</span> <span class="token string">"11000101"</span>   <span class="token comment"># 请将二进制v3转换为十进制（整型）</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token number">675</span>v1_bin <span class="token operator">=</span> <span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token number">675</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1_bin<span class="token punctuation">)</span>  <span class="token comment"># 1010100011</span>v2 <span class="token operator">=</span> <span class="token string">"0b11000101"</span>v2_int <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>v2<span class="token punctuation">,</span> base<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>v2_int<span class="token punctuation">)</span>  <span class="token comment"># 197</span>v3 <span class="token operator">=</span> <span class="token string">"11000101"</span>v3_int <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>v3<span class="token punctuation">,</span> base<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>v3_int<span class="token punctuation">)</span>  <span class="token comment"># 197</span></code></pre></li><li><p>按要求实现</p><blockquote><p>现有 <code>v1=123</code> 和 <code>v2=456</code>，请将这两个值转换为二进制，并将其二进制中的前缀 0b 去掉，然后将两个二进制拼接起来，最终再转换为整型（十进制）。</p><p>例如：</p><p>​123  对应二进制为  “0b1111011” ，去除前缀0b之后的二进制为 “1111011”</p><p>​456  对应二进制为  “0b111001000” ，去除前缀0b之后的二进制为 “111001000”</p><p>​将两个二进制拼接起来的值为：”1111011111001000”，再将此值转换为整型为：63432</p></blockquote><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token number">123</span>v2 <span class="token operator">=</span> <span class="token number">456</span>v1_bin <span class="token operator">=</span> <span class="token builtin">bin</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span>v2_bin <span class="token operator">=</span> <span class="token builtin">bin</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span>value <span class="token operator">=</span> v1_bin<span class="token punctuation">.</span>lstrip<span class="token punctuation">(</span><span class="token string">'0b'</span><span class="token punctuation">)</span> <span class="token operator">+</span> v2_bin<span class="token punctuation">.</span>lstrip<span class="token punctuation">(</span><span class="token string">'0b'</span><span class="token punctuation">)</span>  <span class="token comment"># 使用lstrip()、strip()会报错</span>value_int <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> base<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>value_int<span class="token punctuation">)</span>  <span class="token comment"># 63432</span><span class="token comment"># 使用切片去除'0b'更便捷</span></code></pre></li><li><p>按要求实现</p><blockquote><p>现有 <code>v1=123</code> 和 <code>v2=456</code>，请将这两个值转换为二进制，并将其二进制中的前缀 0b 去掉，再补足为2个字节（16位），然后将两个二进制拼接起来，最终再转换为整型（十进制）。</p><p>例如：</p><p>​123  对应二进制为  “0b1111011” ，去除前缀0b之后的二进制为 “1111011” ，补足16位为  “00000000 01111011”</p><p>​456  对应二进制为  “0b111001000” ，去除前缀0b之后的二进制为 “111001000”，，补足16位为  “00000001 11001000”</p><p>​将两个二进制拼接起来的值为：”00000000 0111101100000001 11001000”，再将此值转换为整型为：8061384</p></blockquote><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token number">123</span>v2 <span class="token operator">=</span> <span class="token number">456</span>v1_2byte <span class="token operator">=</span> <span class="token builtin">bin</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span><span class="token punctuation">.</span>lstrip<span class="token punctuation">(</span><span class="token string">'0b'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>v2_2byte <span class="token operator">=</span> <span class="token builtin">bin</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span><span class="token punctuation">.</span>lstrip<span class="token punctuation">(</span><span class="token string">'0b'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>value <span class="token operator">=</span> v1_2byte <span class="token operator">+</span> v2_2bytevalue_int <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> base<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>value_int<span class="token punctuation">)</span>  <span class="token comment"># 8061384</span></code></pre></li><li><p>列举你了解的哪些数据类型的值转换为布尔值为False。</p><pre class="language-python" data-language="python"><code class="language-python">空值和<span class="token number">0</span></code></pre></li><li><p>看代码写结果：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> <span class="token string">""</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">456</span><span class="token punctuation">)</span>    <span class="token comment"># 456</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> <span class="token number">0</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">999</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">666</span><span class="token punctuation">)</span>    <span class="token comment"># 666</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> <span class="token string">"武沛齐"</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">345</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">110</span><span class="token punctuation">)</span><span class="token comment"># 345</span></code></pre></li><li><p>让用户输入一段文本，请实现将文本中的敏感词 <code>苍老师</code>、<code>波波老师</code>替换为 <code>***</code>，最后并输入替换后的文本。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 自己的版本</span>sensitive_words <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'苍老师'</span><span class="token punctuation">,</span> <span class="token string">'波波老师'</span><span class="token punctuation">]</span>text <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input a text: '</span><span class="token punctuation">)</span><span class="token keyword">for</span> sw <span class="token keyword">in</span> sensitive_words<span class="token punctuation">:</span>    <span class="token keyword">if</span> sw <span class="token keyword">in</span> text<span class="token punctuation">:</span>        text <span class="token operator">=</span> text<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>sw<span class="token punctuation">,</span> <span class="token string">'***'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 老师的版本</span>text <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input a text: '</span><span class="token punctuation">)</span>text <span class="token operator">=</span> text<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'苍老师'</span><span class="token punctuation">,</span> <span class="token string">'***'</span><span class="token punctuation">)</span>text <span class="token operator">=</span> text<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'波波老师'</span><span class="token punctuation">,</span> <span class="token string">'***'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span></code></pre></li><li><p>有变量name &#x3D; “aleX leNb “ 完成如下操作： </p><ul><li>移除 name 变量对应的值两边的空格,并输出处理结果</li><li>判断 name 变量是否以 “al” 开头,并输出结果（用切片 或 startswith实现）</li><li>判断name变量是否以”Nb”结尾,并输出结果（用切片 或 endswith实现）</li><li>将 name 变量对应的值中的 所有的”l” 替换为 “p”,并输出结果 </li><li>将 name 变量对应的值根据 所有的”l” 分割,并输出结果</li><li>将name变量对应的值根据第一个”l”分割,并输出结果</li><li>将 name 变量对应的值变大写,并输出结果</li><li>将 name 变量对应的值变小写,并输出结果</li></ul><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"aleX leNb "</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'al'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'al'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'NB'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'NB'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'l'</span><span class="token punctuation">,</span> <span class="token string">'p'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'l'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'l'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></li><li><p>如何实现字符串的翻转？</p><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"aleX leNb "</span>new_name <span class="token operator">=</span> name<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>new_name<span class="token punctuation">)</span></code></pre></li><li><p>有字符串s &#x3D; “123a4b5c”</p><ul><li>通过对s切片形成新的字符串 “123”</li><li>通过对s切片形成新的字符串 “a4b”</li><li>通过对s切片形成字符串 “c”</li><li>通过对s切片形成字符串 “ba2”</li></ul><pre class="language-python" data-language="python"><code class="language-python">s <span class="token operator">=</span> <span class="token string">"123a4b5c"</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre></li><li><p>使用while循环实现对字符串 message &#x3D; “伤情最是晚凉天，憔悴厮人不堪言” 中每个字符进行输出。</p><pre class="language-python" data-language="python"><code class="language-python">message <span class="token operator">=</span> <span class="token string">"伤情最是晚凉天，憔悴厮人不堪言"</span>count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> count <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">[</span>count<span class="token punctuation">]</span><span class="token punctuation">)</span>    count <span class="token operator">+=</span> <span class="token number">1</span></code></pre></li><li><p>使用for循环实现对字符串 message &#x3D; “伤情最是晚凉天，憔悴厮人不堪言” 中每个字符进行输出。</p><pre class="language-python" data-language="python"><code class="language-python">message <span class="token operator">=</span> <span class="token string">"伤情最是晚凉天，憔悴厮人不堪言"</span><span class="token keyword">for</span> char <span class="token keyword">in</span> message<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span></code></pre></li><li><p>使用for循环和range实现对字符串 message &#x3D; “伤情最是晚凉天，憔悴厮人不堪言” 中每个字符进行倒叙输出。</p><pre class="language-python" data-language="python"><code class="language-python">message <span class="token operator">=</span> <span class="token string">"伤情最是晚凉天，憔悴厮人不堪言"</span><span class="token keyword">for</span> index <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span> <span class="token operator">*</span> index<span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre></li><li><p>使用for循环实现输出倒计时效果，例如：输出内容依次是：”倒计时3秒”，”倒计时2秒”，”倒计时1秒”。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 我的版本</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'倒计时&#123;n&#125;秒'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>n<span class="token operator">=</span><span class="token number">3</span><span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 老师的版本</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'倒计时&#123;n&#125;秒'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>n<span class="token operator">=</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></li><li><p>让用户输入一段文本，请计算文本中 “浪” 出现的次数，并输入结果。</p><pre class="language-python" data-language="python"><code class="language-python">msg <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input a text: '</span><span class="token punctuation">)</span>count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> char <span class="token keyword">in</span> msg<span class="token punctuation">:</span>    <span class="token keyword">if</span> char <span class="token operator">==</span> <span class="token string">'浪'</span><span class="token punctuation">:</span>        count <span class="token operator">+=</span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span></code></pre></li><li><p>获取用户两次输入的内容，并提取其中的数字，然后实现数字的相加（转换为整型再相加）：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">"""要求：将num1中的的所有数字找到并拼接起来：1232312将num1中的的所有数字找到并拼接起来：1218323然后将两个数字进行相加。"""</span>num1 <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入："</span><span class="token punctuation">)</span> <span class="token comment"># asdfd123sf2312</span>num2 <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入："</span><span class="token punctuation">)</span> <span class="token comment"># a12dfd183sf23</span><span class="token comment"># 请补充代码</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 请补充代码</span>num1_dec <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> char <span class="token keyword">in</span> num1<span class="token punctuation">:</span>    <span class="token keyword">if</span> char<span class="token punctuation">.</span>isdecimal<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        num1_dec <span class="token operator">+=</span> charnum2_dec <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> char <span class="token keyword">in</span> num2<span class="token punctuation">:</span>    <span class="token keyword">if</span> char<span class="token punctuation">.</span>isdecimal<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        num2_dec <span class="token operator">+=</span> char<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>num1_dec<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">int</span><span class="token punctuation">(</span>num2_dec<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></li></ol><h1 id="七-、数据类型（中）"><a href="#七-、数据类型（中）" class="headerlink" title="七 、数据类型（中）"></a>七 、数据类型（中）</h1><p>常见的数据类型：</p><ul><li><span style="color:gray">int，整数类型（整形）</span></li><li><span style="color:gray">bool，布尔类型</span></li><li><span style="color:gray">str，字符串类型</span></li><li><strong>list，列表类型</strong></li><li><strong>tuple，元组类型</strong></li><li><span style="color:gray">dict，字典类型</span></li><li><span style="color:gray">set，集合类型</span></li><li><span style="color:gray">float，浮点类型（浮点型）</span></li></ul><p>目标：掌握列表和元组数据类型的各种操作（知识点应用案例）。</p><p>课程概要：</p><ul><li>list，列表类型，用于存储一些数据的容器（有序 &amp; 可修改）。【80%】</li><li>tuple，元组类型，用于存储一些数据的容器（有序 &amp; 不可修改）。【20%】</li></ul><h2 id="1-列表（list）"><a href="#1-列表（list）" class="headerlink" title="1.列表（list）"></a>1.列表（list）</h2><p>​列表（list），是一个<strong>有序</strong>且<strong>可变</strong>的容器，在里面可以存放<strong>多个不同类型</strong>的元素。</p><h3 id="1-1-定义-1"><a href="#1-1-定义-1" class="headerlink" title="1.1 定义"></a>1.1 定义</h3><pre class="language-python" data-language="python"><code class="language-python">user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>user_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"铁锤"</span><span class="token punctuation">)</span>  <span class="token comment"># 可变</span>user_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span>  <span class="token comment"># 可变</span>user_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>  <span class="token comment"># 可变</span><span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span> <span class="token comment"># ["铁锤",123,True] 有序、可存放多种数据类型</span></code></pre><p>​<font color="#dd0000">不可变类型：字符串、布尔、整型（已最小，内部数据无法进行修改）</font></p><p>​<font color="#dd0000">可变类型：列表（内部数据元素可以修改）</font></p><h3 id="1-2-独有功能-1"><a href="#1-2-独有功能-1" class="headerlink" title="1.2 独有功能"></a>1.2 独有功能</h3><p>​Python中为所有的列表类型的数据提供了一批独有的功能。在开始学习列表的独有功能之前，先来做一个可变类型（字符串）和不可变类型（列表）的对比：</p><ul><li><p>字符串，不可变，即：创建好之后内部就无法修改。【独有功能都是新创建一份数据】</p><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"alex"</span>data <span class="token operator">=</span> name<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 需要新变量进行接收</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></code></pre></li><li><p>列表，可变，即：创建好之后内部元素可以修改。【独有功能基本上都是直接操作列表内部，不会创建新的一份数据】</p><pre class="language-python" data-language="python"><code class="language-python">user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"车子"</span><span class="token punctuation">,</span><span class="token string">"妹子"</span><span class="token punctuation">]</span>user_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"嫂子"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span> <span class="token comment"># ["车子","妹子","嫂子"]</span></code></pre></li></ul><p>列表中的常见独有功能如下：</p><ol><li><p><code>list.append()</code>  追加，在原<font color="#dd0000">列表中尾部追加值。</font></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 案例1</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    user <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名(Q退出)："</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> user <span class="token operator">==</span> <span class="token string">"Q"</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    user_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>user<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span> </code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 案例2</span>welcome <span class="token operator">=</span> <span class="token string">"欢迎使用NB游戏"</span><span class="token punctuation">.</span>center<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token string">'*'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>welcome<span class="token punctuation">)</span>user_count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    count <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入游戏人数："</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> count<span class="token punctuation">.</span>isdecimal<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        user_count <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>        <span class="token keyword">break</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"输入格式错误，人数必须是数字。"</span><span class="token punctuation">)</span>message <span class="token operator">=</span> <span class="token string">"&#123;&#125;人参加游戏NB游戏。"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>user_count<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span>user_name_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> user_count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    tips <span class="token operator">=</span> <span class="token string">"请输入玩家姓名（&#123;&#125;/&#123;&#125;）："</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> user_count<span class="token punctuation">)</span>    name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>tips<span class="token punctuation">)</span>    user_name_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>user_name_list<span class="token punctuation">)</span></code></pre></li><li><p><code>list.extend()</code>  批量追加，将<font color="#dd0000">一个列表中的元素逐一添加另外一个列表。</font></p><pre class="language-python" data-language="python"><code class="language-python">tools <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"搬砖"</span><span class="token punctuation">,</span><span class="token string">"菜刀"</span><span class="token punctuation">,</span><span class="token string">"榔头"</span><span class="token punctuation">]</span>weapon <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"AK47"</span><span class="token punctuation">,</span><span class="token string">"M6"</span><span class="token punctuation">]</span><span class="token comment">#tools.extend(weapon) # weapon中的值逐一追加到tools中</span><span class="token comment">#print(tools) # ["搬砖","菜刀","榔头","AK47","M6"]</span>weapon<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>tools<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>tools<span class="token punctuation">)</span> <span class="token comment"># ["搬砖","菜刀","榔头"]</span><span class="token keyword">print</span><span class="token punctuation">(</span>weapon<span class="token punctuation">)</span> <span class="token comment"># ["AK47","M6","搬砖","菜刀","榔头"]</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">tools <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"搬砖"</span><span class="token punctuation">,</span><span class="token string">"菜刀"</span><span class="token punctuation">,</span><span class="token string">"榔头"</span><span class="token punctuation">]</span>weapon <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"AK47"</span><span class="token punctuation">,</span><span class="token string">"M6"</span><span class="token punctuation">]</span><span class="token keyword">for</span> item <span class="token keyword">in</span> weapon<span class="token punctuation">:</span>    tools<span class="token punctuation">.</span>append<span class="token punctuation">(</span>item<span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>tools<span class="token punctuation">)</span> <span class="token comment"># ["搬砖","菜刀","榔头","AK47","M6"]</span></code></pre></li><li><p><code>list.insert()</code>  插入，在原列表的<font color="#dd0000">指定索引位置插入值</font></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 案例</span>name_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入购买火车票用户姓名（Q/q退出）："</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> name<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"Q"</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    <span class="token keyword">if</span> name<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"刁"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        name_list<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        name_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>name_list<span class="token punctuation">)</span></code></pre></li><li><p><code>list.remove</code>在原列表中<font color="#dd0000">根据值删除（从左到右找到第一个删除）【慎用，里面没有会报错】</font></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 怎样在使用remove()时，不报错（if item in ...:）</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"王宝强"</span><span class="token punctuation">,</span><span class="token string">"陈羽凡"</span><span class="token punctuation">,</span><span class="token string">"Alex"</span><span class="token punctuation">,</span><span class="token string">"贾乃亮"</span><span class="token punctuation">,</span><span class="token string">"Alex"</span><span class="token punctuation">]</span><span class="token keyword">if</span> <span class="token string">"Alex"</span> <span class="token keyword">in</span> user_list<span class="token punctuation">:</span>user_list<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">"Alex"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span><span class="token comment"># 怎样在使用remove()时，不报错且能删除所有目标值（循环）</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"王宝强"</span><span class="token punctuation">,</span><span class="token string">"陈羽凡"</span><span class="token punctuation">,</span><span class="token string">"Alex"</span><span class="token punctuation">,</span><span class="token string">"贾乃亮"</span><span class="token punctuation">,</span><span class="token string">"Alex"</span><span class="token punctuation">]</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token string">"Alex"</span> <span class="token keyword">in</span> user_list<span class="token punctuation">:</span>        user_list<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">"Alex"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 案例：自动抽奖程序</span><span class="token keyword">import</span> randomdata_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"iphone12"</span><span class="token punctuation">,</span> <span class="token string">"二手充气女友"</span><span class="token punctuation">,</span> <span class="token string">"大保健一次"</span><span class="token punctuation">,</span> <span class="token string">"泰国5日游"</span><span class="token punctuation">,</span> <span class="token string">"避孕套"</span><span class="token punctuation">]</span><span class="token keyword">while</span> data_list<span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"自动抽奖程序，请输入自己的姓名："</span><span class="token punctuation">)</span>    <span class="token comment"># 随机从data_list抽取一个值出来</span>    value <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>data_list<span class="token punctuation">)</span> <span class="token comment"># "二手充气女友"</span>    <span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token string">"恭喜&#123;&#125;，抽中&#123;&#125;."</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token punctuation">)</span>        data_list<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment"># "二手充气女友"</span></code></pre></li><li><p><code>list.pop()</code>在原列表中<font color="#dd0000">根据索引踢出某个元素（根据索引位置删除）</font></p><pre class="language-python" data-language="python"><code class="language-python">user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"王宝强"</span><span class="token punctuation">,</span><span class="token string">"陈羽凡"</span><span class="token punctuation">,</span><span class="token string">"Alex"</span><span class="token punctuation">,</span><span class="token string">"贾乃亮"</span><span class="token punctuation">,</span><span class="token string">"Alex"</span><span class="token punctuation">]</span><span class="token comment">#               0       1      2      3       4</span>user_list<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span> <span class="token comment">#  ["王宝强","Alex","贾乃亮","Alex"]</span>user_list<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 默认删除最后一个元素</span><span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span> <span class="token comment"># ["王宝强","Alex","贾乃亮"]</span>item <span class="token operator">=</span> user_list<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token comment"># "Alex"</span><span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span> <span class="token comment"># ["王宝强","贾乃亮"]</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 案例：排队买火车票</span><span class="token comment"># ["alex","李杰","eric","武沛齐","老妖","肝胆"]</span>user_queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"北京~上海火车票，购买请输入姓名排队(Q退出)："</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">"Q"</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    user_queue<span class="token punctuation">.</span>append<span class="token punctuation">(</span>name<span class="token punctuation">)</span>ticket_count <span class="token operator">=</span> <span class="token number">3</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>ticket_count<span class="token punctuation">)</span><span class="token punctuation">:</span>    username <span class="token operator">=</span> user_queue<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    message <span class="token operator">=</span> <span class="token string">"恭喜&#123;&#125;,购买火车票成功。"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token comment"># user_queue = ["武沛齐","老妖","肝胆"]</span>faild_user <span class="token operator">=</span> <span class="token string">"、"</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>user_queue<span class="token punctuation">)</span> <span class="token comment"># "武沛齐、老妖、肝胆"</span>faild_message <span class="token operator">=</span> <span class="token string">"非常抱歉，票已售完，以下几位用户请选择其他出行方式，名单：&#123;&#125;。"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>faild_user<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>faild_message<span class="token punctuation">)</span></code></pre></li><li><p><code>list.clear()</code>清空原列表</p><pre class="language-python" data-language="python"><code class="language-python">user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"王宝强"</span><span class="token punctuation">,</span><span class="token string">"陈羽凡"</span><span class="token punctuation">,</span><span class="token string">"Alex"</span><span class="token punctuation">,</span><span class="token string">"贾乃亮"</span><span class="token punctuation">,</span><span class="token string">"Alex"</span><span class="token punctuation">]</span>user_list<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span> <span class="token comment"># []</span></code></pre></li><li><p><code>list.index()</code>根据值<font color="#dd0000">获取索引（从左到右找到第一个）【慎用，找不到报错】</font></p><pre class="language-python" data-language="python"><code class="language-python">user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"王宝强"</span><span class="token punctuation">,</span><span class="token string">"陈羽凡"</span><span class="token punctuation">,</span><span class="token string">"Alex"</span><span class="token punctuation">,</span><span class="token string">"贾乃亮"</span><span class="token punctuation">,</span><span class="token string">"Alex"</span><span class="token punctuation">]</span><span class="token comment">#               0       1      2       3      4</span><span class="token comment"># 解决index()不存在报错问题</span><span class="token keyword">if</span> <span class="token string">"Alex"</span> <span class="token keyword">in</span> user_list<span class="token punctuation">:</span>index <span class="token operator">=</span> user_list<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">"Alex"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token comment"># 2</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"不存在"</span><span class="token punctuation">)</span></code></pre></li><li><p><code>list.sort()</code>列表元素排序</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 数字排序</span>num_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>num_list<span class="token punctuation">)</span>num_list<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 让num_list从小到大排序</span><span class="token keyword">print</span><span class="token punctuation">(</span>num_list<span class="token punctuation">)</span>num_list<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>  <span class="token comment"># 让num_list从大到小排序</span><span class="token keyword">print</span><span class="token punctuation">(</span>num_list<span class="token punctuation">)</span><span class="token comment"># 字符串排序</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"王宝强"</span><span class="token punctuation">,</span> <span class="token string">"Ab陈羽凡"</span><span class="token punctuation">,</span> <span class="token string">"Alex"</span><span class="token punctuation">,</span> <span class="token string">"贾乃亮"</span><span class="token punctuation">,</span> <span class="token string">"贾乃"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">]</span><span class="token comment">#       [29579, 23453,24378]</span><span class="token comment">#       [65, 98, 38472, 32701, 20961]</span><span class="token comment">#       [65, 108, 101, 120]</span><span class="token comment">#       [49]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'王'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 29579  十进制表示</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'王'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 0x738b  十六进制表示  对应十六进制表达查找见下方网站</span><span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span>user_list<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span></code></pre><p><font color="#dd0000">注意：</font></p><ul><li><a href="https://unicode-table.com/en/blocks/">unicode编码网站</a></li><li>字符串排序原理，会将字符串转化为unicode的编码，再按字符顺序进行排序</li><li>获取字符的unicode编码，ord()方法</li><li><font color="#dd0000">排序时内部元素无法进行比较时，程序会报错（尽量数据类型统一）。</font></li></ul></li><li><p><code>list.reverse</code>反转原列表</p><pre class="language-python" data-language="python"><code class="language-python">user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"王宝强"</span><span class="token punctuation">,</span><span class="token string">"陈羽凡"</span><span class="token punctuation">,</span><span class="token string">"Alex"</span><span class="token punctuation">,</span><span class="token string">"贾乃亮"</span><span class="token punctuation">,</span><span class="token string">"Alex"</span><span class="token punctuation">]</span>user_list<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span></code></pre></li></ol><h3 id="1-3-公共功能-1"><a href="#1-3-公共功能-1" class="headerlink" title="1.3 公共功能"></a>1.3 公共功能</h3><ol><li><p>相加，两个列表相加获取生成一个新的列表。</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"赵四"</span><span class="token punctuation">,</span><span class="token string">"刘能"</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">[</span><span class="token string">"宋晓峰"</span><span class="token punctuation">,</span><span class="token string">"范德彪"</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># ["赵四","刘能","宋晓峰","范德彪"]</span></code></pre></li><li><p>相乘，列表*整型 将列表中的元素再创建N份并生成一个新的列表。</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"赵四"</span><span class="token punctuation">,</span><span class="token string">"刘能"</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># ["赵四","刘能","赵四","刘能"]</span></code></pre></li><li><p>运算符in包含<br>由于列表内部是由多个元素组成，可以通过in来判断元素是否在列表中。</p><pre class="language-python" data-language="python"><code class="language-python">user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"狗子"</span><span class="token punctuation">,</span><span class="token string">"二蛋"</span><span class="token punctuation">,</span><span class="token string">"沙雕"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span> <span class="token keyword">if</span> <span class="token string">"alex"</span> <span class="token keyword">in</span> user_list<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"在，把他删除"</span><span class="token punctuation">)</span>    user_list<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">"alex"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"不在"</span><span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"狗子"</span><span class="token punctuation">,</span><span class="token string">"二蛋"</span><span class="token punctuation">,</span><span class="token string">"沙雕"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span> <span class="token keyword">if</span> <span class="token string">"alex"</span> <span class="token keyword">in</span> user_list<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"在，把他删除"</span><span class="token punctuation">)</span>    user_list<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">"alex"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"不在"</span><span class="token punctuation">)</span>text <span class="token operator">=</span> <span class="token string">"打倒小日本"</span>data <span class="token operator">=</span> <span class="token string">"日"</span> <span class="token keyword">in</span> text</code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 案例</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"狗子"</span><span class="token punctuation">,</span><span class="token string">"二蛋"</span><span class="token punctuation">,</span><span class="token string">"沙雕"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">]</span> <span class="token keyword">if</span> <span class="token string">"alex"</span> <span class="token keyword">in</span> user_list<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"在，把他删除"</span><span class="token punctuation">)</span>    user_list<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">"alex"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"不在"</span><span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 案例</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"王宝强"</span><span class="token punctuation">,</span><span class="token string">"陈羽凡"</span><span class="token punctuation">,</span><span class="token string">"Alex"</span><span class="token punctuation">,</span><span class="token string">"贾乃亮"</span><span class="token punctuation">,</span><span class="token string">"Alex"</span><span class="token punctuation">]</span><span class="token keyword">if</span> <span class="token string">"Alex"</span> <span class="token keyword">in</span> user_list<span class="token punctuation">:</span>index <span class="token operator">=</span> user_list<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">"Alex"</span><span class="token punctuation">)</span>user_list<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>index<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 案例：敏感词替换</span>text <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入文本内容："</span><span class="token punctuation">)</span> <span class="token comment"># 按时打发第三方科技爱普生豆腐啊；了深刻的房价破阿偶打飞机</span>forbidden_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"草"</span><span class="token punctuation">,</span><span class="token string">"欧美"</span><span class="token punctuation">,</span><span class="token string">"日韩"</span><span class="token punctuation">]</span><span class="token keyword">for</span> item <span class="token keyword">in</span> forbidden_list<span class="token punctuation">:</span>    text <span class="token operator">=</span> text<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>item<span class="token punctuation">,</span><span class="token string">"**"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span></code></pre><p>注意：<font color="#dd0000"><strong>列表检查元素是否存在时，是采用逐一比较的方式，效率会比较低。</strong></font></p></li><li><p>获取长度</p><pre class="language-python" data-language="python"><code class="language-python">user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span><span class="token string">"刘华强"</span><span class="token punctuation">,</span><span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">len</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span> <span class="token punctuation">)</span></code></pre></li><li><p>索引，一个元素的操作</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 读</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span><span class="token string">"刘华强"</span><span class="token punctuation">,</span><span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span> user_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> user_list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> user_list<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token comment"># 报错</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 改</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span><span class="token string">"刘华强"</span><span class="token punctuation">,</span><span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">]</span>user_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"武沛齐"</span><span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span> <span class="token comment"># ["武沛齐","刘华强",'尼古拉斯赵四']</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 删</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span><span class="token string">"刘华强"</span><span class="token punctuation">,</span><span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">]</span><span class="token keyword">del</span> user_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>user_list<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">"刘华强"</span><span class="token punctuation">)</span>ele <span class="token operator">=</span> user_list<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></code></pre><p>注意：超出索引范围会报错。<br>提示：<font color="#dd0000"><strong>由于字符串是不可变类型，所以他只有索引读的功能，而列表可以进行 读、改、删</strong></font></p></li><li><p>切片，多个元素的操作（很少用）</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 读</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span><span class="token string">"刘华强"</span><span class="token punctuation">,</span><span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span> user_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token comment"># ["范德彪","刘华强"]</span><span class="token keyword">print</span><span class="token punctuation">(</span> user_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> user_list<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 改</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span> <span class="token string">"刘华强"</span><span class="token punctuation">,</span> <span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">]</span>user_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span> <span class="token comment"># 输出 [11, 22, 33, 44, '尼古拉斯赵四']</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span> <span class="token string">"刘华强"</span><span class="token punctuation">,</span> <span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">]</span>user_list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span> <span class="token comment"># 输出 ['范德彪', '刘华强', 11, 22, 33, 44]</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span> <span class="token string">"刘华强"</span><span class="token punctuation">,</span> <span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">]</span>user_list<span class="token punctuation">[</span><span class="token number">10000</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span> <span class="token comment"># 输出 ['范德彪', '刘华强', '尼古拉斯赵四', 11, 22, 33, 44]</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span> <span class="token string">"刘华强"</span><span class="token punctuation">,</span> <span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">]</span>user_list<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">10000</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span> <span class="token comment"># 输出 [11, 22, 33, 44, '刘华强', '尼古拉斯赵四']</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 删</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span> <span class="token string">"刘华强"</span><span class="token punctuation">,</span> <span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">]</span><span class="token keyword">del</span> user_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span> <span class="token comment"># 输出 ['范德彪']</span></code></pre></li><li><p>步长</p><pre class="language-python" data-language="python"><code class="language-python">user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span><span class="token string">"刘华强"</span><span class="token punctuation">,</span><span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">,</span><span class="token string">"宋小宝"</span><span class="token punctuation">,</span><span class="token string">"刘能"</span><span class="token punctuation">]</span><span class="token comment">#              0        1        2          3       4</span><span class="token keyword">print</span><span class="token punctuation">(</span> user_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> user_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> user_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> user_list<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 案例：实现列表的翻转</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span><span class="token string">"刘华强"</span><span class="token punctuation">,</span><span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">,</span><span class="token string">"宋小宝"</span><span class="token punctuation">,</span><span class="token string">"刘能"</span><span class="token punctuation">]</span>new_data <span class="token operator">=</span> user_list<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>new_data<span class="token punctuation">)</span>data_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span><span class="token string">"刘华强"</span><span class="token punctuation">,</span><span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">,</span><span class="token string">"宋小宝"</span><span class="token punctuation">,</span><span class="token string">"刘能"</span><span class="token punctuation">]</span>data_list<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data_list<span class="token punctuation">)</span><span class="token comment"># 给你一个字符串请实现字符串的翻转？</span>name <span class="token operator">=</span> <span class="token string">"武沛齐"</span>name<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span></code></pre></li><li><p>for循环</p><pre class="language-python" data-language="python"><code class="language-python">user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span><span class="token string">"刘华强"</span><span class="token punctuation">,</span><span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">,</span><span class="token string">"宋小宝"</span><span class="token punctuation">,</span><span class="token string">"刘能"</span><span class="token punctuation">]</span><span class="token keyword">for</span> item <span class="token keyword">in</span> user_list<span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span><span class="token string">"刘华强"</span><span class="token punctuation">,</span><span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">,</span><span class="token string">"宋小宝"</span><span class="token punctuation">,</span><span class="token string">"刘能"</span><span class="token punctuation">]</span><span class="token keyword">for</span> index <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    item <span class="token operator">=</span> user_index<span class="token punctuation">[</span>index<span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span></code></pre></li></ol><h4 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a><font color="#dd0000"><strong>面试题</strong></font></h4><p>切记，循环的过程中对数据进行删除会踩坑。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 错误方式， 有坑，结果不是你想要的。</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"刘的话"</span><span class="token punctuation">,</span> <span class="token string">"范德彪"</span><span class="token punctuation">,</span> <span class="token string">"刘华强"</span><span class="token punctuation">,</span> <span class="token string">'刘尼古拉斯赵四'</span><span class="token punctuation">,</span> <span class="token string">"宋小宝"</span><span class="token punctuation">,</span> <span class="token string">"刘能"</span><span class="token punctuation">]</span><span class="token keyword">for</span> item <span class="token keyword">in</span> user_list<span class="token punctuation">:</span>    <span class="token keyword">if</span> item<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"刘"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        user_list<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>item<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 正确方式，倒着删除</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"刘的话"</span><span class="token punctuation">,</span> <span class="token string">"范德彪"</span><span class="token punctuation">,</span> <span class="token string">"刘华强"</span><span class="token punctuation">,</span> <span class="token string">'刘尼古拉斯赵四'</span><span class="token punctuation">,</span> <span class="token string">"宋小宝"</span><span class="token punctuation">,</span> <span class="token string">"刘能"</span><span class="token punctuation">]</span><span class="token keyword">for</span> index <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    item <span class="token operator">=</span> user_list<span class="token punctuation">[</span>index<span class="token punctuation">]</span>    <span class="token keyword">if</span> item<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"刘"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        user_list<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>item<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span><span class="token comment"># 实现原理：倒着取无论删不删后面的数据，都不会改变前面索引的顺序</span><span class="token comment"># ["刘的话", "范德彪", "刘华强", '刘尼古拉斯赵四', "宋小宝", "刘能"]</span><span class="token comment"># 5 "刘能" ["刘的话", "范德彪", "刘华强", '刘尼古拉斯赵四', "宋小宝"]</span><span class="token comment"># 4 "宋小宝" ["刘的话", "范德彪", "刘华强", '刘尼古拉斯赵四', "宋小宝"]</span><span class="token comment"># 3 '刘尼古拉斯赵四' ["刘的话", "范德彪", "刘华强", "宋小宝"]</span><span class="token comment"># 2 "刘华强" ["刘的话", "范德彪","宋小宝"]</span><span class="token comment"># 1 "范德彪" ["刘的话", "范德彪","宋小宝"]</span><span class="token comment"># 0 "刘的话" ["范德彪","宋小宝"]</span></code></pre><h3 id="1-4-转换-1"><a href="#1-4-转换-1" class="headerlink" title="1.4 转换"></a>1.4 转换</h3><ul><li><p>int、bool无法转换成列表</p></li><li><p>str</p><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"武沛齐"</span>data <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>  <span class="token comment"># ["武","沛","齐"]</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></code></pre></li><li><p>超前</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">)</span> <span class="token comment"># 元组</span>vv1 <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span>     <span class="token comment"># 列表 [11,22,33,44]</span>v2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"eric"</span><span class="token punctuation">,</span><span class="token string">"dsb"</span><span class="token punctuation">&#125;</span> <span class="token comment"># 集合</span>vv2 <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span> <span class="token comment"># 列表 ["alex","eric","dsb"]</span></code></pre></li></ul><h3 id="1-5-其他-1"><a href="#1-5-其他-1" class="headerlink" title="1.5. 其他"></a>1.5. 其他</h3><h4 id="1-5-1-嵌套"><a href="#1-5-1-嵌套" class="headerlink" title="1.5.1 嵌套"></a>1.5.1 嵌套</h4><p>​列表属于容器，内部可以存放各种数据，所以他也支持列表的嵌套，对于嵌套的值，可以根据之前学习的索引知识点来进行学习，例如：</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string">"谢广坤"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"海燕"</span><span class="token punctuation">,</span><span class="token string">"赵本山"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">"宋小宝"</span> <span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span> data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token comment"># "谢广坤"</span><span class="token keyword">print</span><span class="token punctuation">(</span> data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token comment"># ["海燕","赵本山"]</span><span class="token keyword">print</span><span class="token punctuation">(</span> data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token comment"># "坤"</span><span class="token keyword">print</span><span class="token punctuation">(</span> data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token comment"># "赵本山"</span>data<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">666</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># [ "谢广坤",["海燕","赵本山"],True,[11,22,33,44],"宋小宝",666]</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"谢大脚"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># [ "谢广坤",["海燕","赵本山","谢大脚"],True,[11,22,33,44],"宋小宝",666 ]</span><span class="token keyword">del</span> data<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># [ "谢广坤",["海燕","赵本山","谢大脚"],True,[11,22,33,44],666 ]</span>data<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"alex"</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># [ "谢广坤",["海燕","赵本山","谢大脚"],True,[11,"alex",33,44],666 ]</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">999</span><span class="token punctuation">,</span><span class="token number">666</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># [ "谢广坤",[999,666,"谢大脚"],True,[11,"alex",33,44],666 ]</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 创建用户列表</span><span class="token comment">#    用户列表应该长： [ ["alex","123"],["eric","666"] ]</span><span class="token comment"># user_list = [["alex","123"],["eric","666"],]</span><span class="token comment"># user_list.append(["alex","123"])</span><span class="token comment"># user_list.append(["eric","666"])</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    user <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名(Q退出)："</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> user <span class="token operator">==</span> <span class="token string">"Q"</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    pwd <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入密码："</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> <span class="token punctuation">[</span>user<span class="token punctuation">,</span>pwd<span class="token punctuation">]</span>    user_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span></code></pre><h3 id="1-6-列表阶段作业"><a href="#1-6-列表阶段作业" class="headerlink" title="1.6 列表阶段作业"></a>1.6 列表阶段作业</h3><ol><li><p>写代码，有如下列表，按照要求实现每一个功能。</p><pre class="language-python" data-language="python"><code class="language-python">li <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">,</span> <span class="token string">"WuSir"</span><span class="token punctuation">,</span> <span class="token string">"ritian"</span><span class="token punctuation">,</span> <span class="token string">"barry"</span><span class="token punctuation">,</span> <span class="token string">"武沛齐"</span><span class="token punctuation">]</span></code></pre><ul><li><p>计算列表的长度并输出</p><pre class="language-python" data-language="python"><code class="language-python">  list_len <span class="token operator">=</span> <span class="token number">0</span>  <span class="token keyword">for</span> item <span class="token keyword">in</span> li<span class="token punctuation">:</span>      list_len <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>list_len<span class="token punctuation">)</span><span class="token operator">-</span> 列表中追加元素<span class="token string">"seven"</span><span class="token punctuation">,</span>并输出添加后的列表  ```python  li<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'seven'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span>  <span class="token comment"># li = ["alex", "WuSir", "ritian", "barry", "武沛齐", 'seven']</span></code></pre></li><li><p>请在列表的第1个索引位置插入元素”Tony”,并输出添加后的列表</p><pre class="language-python" data-language="python"><code class="language-python">li<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"Tony"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span>  <span class="token comment"># ['alex', 'Tony', 'WuSir', 'ritian', 'barry', '武沛齐']</span></code></pre></li><li><p>请修改列表第2个索引位置的元素为”Kelly”,并输出修改后的列表</p><pre class="language-python" data-language="python"><code class="language-python">li<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"Kelly"</span><span class="token keyword">print</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span>  <span class="token comment"># ['alex', 'WuSir', 'Kelly', 'barry', '武沛齐']</span></code></pre></li><li><p>请将列表的第3个位置的值改成 “妖怪”，并输出修改后的列表</p><pre class="language-python" data-language="python"><code class="language-python">li<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"妖怪"</span><span class="token keyword">print</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span>  <span class="token comment"># ['alex', 'WuSir', '妖怪', 'barry', '武沛齐']</span></code></pre></li><li><p>请将列表 <code>data=[1,&quot;a&quot;,3,4,&quot;heart&quot;]</code> 的每一个元素追加到列表 <code>li</code> 中，并输出添加后的列表</p><pre class="language-python" data-language="python"><code class="language-python">data<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">"heart"</span><span class="token punctuation">]</span>li<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span>  <span class="token comment"># ['alex', 'WuSir', 'ritian', 'barry', '武沛齐', 1, 'a', 3, 4, 'heart']</span></code></pre></li><li><p>请将字符串 <code>s = &quot;qwert&quot;</code>的每一个元素到列表 <code>li</code> 中。</p><pre class="language-python" data-language="python"><code class="language-python">li <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">,</span> <span class="token string">"WuSir"</span><span class="token punctuation">,</span> <span class="token string">"ritian"</span><span class="token punctuation">,</span> <span class="token string">"barry"</span><span class="token punctuation">,</span> <span class="token string">"武沛齐"</span><span class="token punctuation">]</span>li<span class="token punctuation">.</span>extend<span class="token punctuation">(</span><span class="token string">"qwert"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span>  <span class="token comment"># ['alex', 'WuSir', 'ritian', 'barry', '武沛齐', 'q', 'w', 'e', 'r', 't']</span></code></pre></li><li><p>请删除列表中的元素”barry”,并输出添加后的列表</p><pre class="language-python" data-language="python"><code class="language-python">li <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">,</span> <span class="token string">"WuSir"</span><span class="token punctuation">,</span> <span class="token string">"ritian"</span><span class="token punctuation">,</span> <span class="token string">"barry"</span><span class="token punctuation">,</span> <span class="token string">"武沛齐"</span><span class="token punctuation">]</span>li<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">"barry"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span>  <span class="token comment"># ['alex', 'WuSir', 'ritian', '武沛齐']</span></code></pre></li><li><p>请删除列表中的第2个元素，并输出删除元素后的列表</p><pre class="language-python" data-language="python"><code class="language-python">li <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">,</span> <span class="token string">"WuSir"</span><span class="token punctuation">,</span> <span class="token string">"ritian"</span><span class="token punctuation">,</span> <span class="token string">"barry"</span><span class="token punctuation">,</span> <span class="token string">"武沛齐"</span><span class="token punctuation">]</span>li<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span>  <span class="token comment"># ['alex', 'ritian', 'barry', '武沛齐']</span></code></pre></li><li><p>请删除列表中的第2至第4个元素，并输出删除元素后的列表</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">del</span> li<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span>  <span class="token comment"># ['alex', '武沛齐']</span></code></pre></li></ul></li><li><p>写代码，有如下列表，利用切片实现每一个功能</p><pre class="language-python" data-language="python"><code class="language-python">li <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span><span class="token string">"c"</span><span class="token punctuation">]</span></code></pre><ul><li><p>通过对li列表的切片形成新的列表 [1,3,2]</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>li<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre></li><li><p>通过对li列表的切片形成新的列表 [“a”,4,”b”] </p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>li<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre></li><li><p>通过对li列表的切片形成新的列表  [1,2,4,5]</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>li<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre></li><li><p>通过对li列表的切片形成新的列表 [3,”a”,”b”]</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>li<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre></li><li><p>通过对li列表的切片形成新的列表 [3,”a”,”b”,”c”]</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>li<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre></li><li><p>通过对li列表的切片形成新的列表  [“c”]</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>li<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre></li><li><p>通过对li列表的切片形成新的列表 [“b”,”a”,3]</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>li<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre></li></ul></li><li><p>写代码，有如下列表，按照要求实现每一个功能。</p><pre class="language-python" data-language="python"><code class="language-python">lis <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"k"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"qwe"</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"k1"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"tt"</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"ab"</span><span class="token punctuation">,</span> <span class="token string">"adv"</span><span class="token punctuation">]</span></code></pre><ul><li><p>将列表lis中的第2个索引位置的值变成大写，并打印列表。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 错误(字符串无法更改，需要对upper()后的值进行保存再更改)</span>lis<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">lis<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> lis<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span></code></pre></li><li><p>将列表中的数字3变成字符串”100”</p><pre class="language-python" data-language="python"><code class="language-python">lis<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'100'</span>lis<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'100'</span><span class="token keyword">print</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span></code></pre></li><li><p>将列表中的字符串”tt”变成数字 101</p><pre class="language-python" data-language="python"><code class="language-python">lis<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">101</span><span class="token keyword">print</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span></code></pre></li><li><p>在 “qwe”前面插入字符串：”火车头”</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token punctuation">(</span>lis<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'火车头'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>lis<span class="token punctuation">)</span></code></pre></li></ul></li><li><p>请用代码实现循环输出元素和值：users &#x3D; [“武沛齐”,”景女神”,”肖大侠”] ，如：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token number">0</span> 武沛齐<span class="token number">1</span> 景女神<span class="token number">2</span> 肖大侠</code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'&#123;&#125; &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> users<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></li><li><p>请用代码实现循环输出元素和值：users &#x3D; [“武沛齐”,”景女神”,”肖大侠”] ，如：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token number">1</span> 武沛齐<span class="token number">2</span> 景女神<span class="token number">3</span> 肖大侠</code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>users<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'&#123;&#125; &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> users<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></li><li><p>写代码实现以下功能</p><ul><li><p>如有变量 goods &#x3D; [‘汽车’,’飞机’,’火箭’] 提示用户可供选择的商品：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token number">0</span><span class="token punctuation">,</span>汽车<span class="token number">1</span><span class="token punctuation">,</span>飞机<span class="token number">2</span><span class="token punctuation">,</span>火箭</code></pre></li><li><p>用户输入索引后，将指定商品的内容拼接打印，如：用户输入0，则打印 您选择的商品是汽车。</p><pre class="language-python" data-language="python"><code class="language-python">index <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>goods<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'&#123;&#125; &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> goods<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    index<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>user_input <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please choice a goods: '</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> user_input <span class="token keyword">in</span> index<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'您所选择的交通工具是&#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>goods<span class="token punctuation">[</span>user_input<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'input wrong'</span><span class="token punctuation">)</span></code></pre></li></ul></li><li><p>利用for循环和range 找出 0 ~ 50 以内能被3整除的数，并追加到一个列表。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 我的版本</span>num_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">51</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> num <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        num_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>num_list<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 老师版本（去掉0）</span>num_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">51</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> num <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">continue</span>    <span class="token keyword">if</span> num <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        num_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>num_list<span class="token punctuation">)</span></code></pre></li><li><p>利用for循环和range 找出 0 ~ 50 以内能被3整除的数，并插入到列表的第0个索引位置，最终结果如下：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token punctuation">[</span><span class="token number">48</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">42.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">num_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">51</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> num <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        num_list<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> num<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>num_list<span class="token punctuation">)</span></code></pre></li><li><p>查找列表li中的元素，移除每个元素的空格，并找出以”a”开头，并添加到一个新列表中,最后循环打印这个新列表。</p><pre class="language-python" data-language="python"><code class="language-python">li <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"alexC"</span><span class="token punctuation">,</span> <span class="token string">"AbC "</span><span class="token punctuation">,</span> <span class="token string">"egon"</span><span class="token punctuation">,</span> <span class="token string">" riTiAn"</span><span class="token punctuation">,</span> <span class="token string">"WuSir"</span><span class="token punctuation">,</span> <span class="token string">"  aqc"</span><span class="token punctuation">]</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">a_str <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> item <span class="token keyword">in</span> li<span class="token punctuation">:</span>    item <span class="token operator">=</span> item<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># item = item.lower()  # 大小写不敏感</span>    <span class="token keyword">if</span> item<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        a_str<span class="token punctuation">.</span>append<span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a_str<span class="token punctuation">)</span></code></pre></li><li><p>将以下车牌中所有 <code>京 </code>的车牌搞到一个列表中，并输出京牌车辆的数量。</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"京1231"</span><span class="token punctuation">,</span> <span class="token string">"冀8899"</span><span class="token punctuation">,</span> <span class="token string">"京166631"</span><span class="token punctuation">,</span> <span class="token string">"晋989"</span><span class="token punctuation">]</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"京1231"</span><span class="token punctuation">,</span> <span class="token string">"冀8899"</span><span class="token punctuation">,</span> <span class="token string">"京166631"</span><span class="token punctuation">,</span> <span class="token string">"晋989"</span><span class="token punctuation">]</span>choice_num <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> car_num <span class="token keyword">in</span> data<span class="token punctuation">:</span>    <span class="token keyword">if</span> car_num<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'京'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        choice_num<span class="token punctuation">.</span>append<span class="token punctuation">(</span>car_num<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>choice_num<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>choice_num<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></li></ol><h2 id="2-元组-tuple"><a href="#2-元组-tuple" class="headerlink" title="2.元组(tuple)"></a>2.元组(tuple)</h2><p>​列表（list），是一个<strong>有序</strong>且<strong>可变</strong>的容器，在里面可以存放<strong>多个不同类型</strong>的元素。</p><p>​元组（tuple），是一个<strong>有序</strong>且<strong>不可变</strong>的容器，在里面可以存放<strong>多个不同类型</strong>的元素。<font color="#dd0000"><strong>如何体现不可变呢？记住一句话：《”我儿子永远不能换成是别人，但我儿子可以长大”》</strong></font></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 元组是不可变的，但元组的元素中嵌套有可变的数据类型时，元组中该元素可以改变</span>v1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token number">123</span><span class="token punctuation">,</span><span class="token string">"Alex"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">]</span><span class="token punctuation">)</span>data <span class="token operator">=</span> v1<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>data<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span>  <span class="token comment"># (True, 123, 'Alex', [11, 22, 33, 44, 3])</span></code></pre><h3 id="2-1-定义-1"><a href="#2-1-定义-1" class="headerlink" title="2.1 定义"></a>2.1 定义</h3><p>​<strong>建议：议在元组的最后多加一个逗v1 &#x3D; (“李杰”,”Alex”,)，用于标识他是一个元组。当元组只有一个元素时，元组的符号不会被当成运算符中的括号</strong></p><pre class="language-python" data-language="python"><code class="language-python">d1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># int 1</span>d2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span> <span class="token comment"># tuple (1,)</span></code></pre><h4 id="面试题-1"><a href="#面试题-1" class="headerlink" title="面试题"></a>面试题</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token number">1.</span> 比较值 v1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> 和 v2 <span class="token operator">=</span> <span class="token number">1</span> 和 v3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span> 有什么区别？<span class="token number">2.</span> 比较值 v1 <span class="token operator">=</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> 和 v2 <span class="token operator">=</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span> 有什么区别？              <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span></code></pre><h3 id="2-2-独有功能-1"><a href="#2-2-独有功能-1" class="headerlink" title="2.2 独有功能"></a>2.2 独有功能</h3><p>无</p><h3 id="2-3-公共功能-1"><a href="#2-3-公共功能-1" class="headerlink" title="2.3 公共功能"></a>2.3 公共功能</h3><ol><li><p>相加，两个列表相加获取生成一个新的列表。</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"赵四"</span><span class="token punctuation">,</span><span class="token string">"刘能"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token string">"宋晓峰"</span><span class="token punctuation">,</span><span class="token string">"范德彪"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># ("赵四","刘能","宋晓峰","范德彪")</span></code></pre></li><li><p>相乘，列表*整型 将列表中的元素再创建N份并生成一个新的列表。</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"赵四"</span><span class="token punctuation">,</span><span class="token string">"刘能"</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># ("赵四","刘能","赵四","刘能")</span></code></pre></li><li><p>获取长度</p><pre class="language-python" data-language="python"><code class="language-python">user_list <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span><span class="token string">"刘华强"</span><span class="token punctuation">,</span><span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">len</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span> <span class="token punctuation">)</span></code></pre></li><li><p>索引</p><pre class="language-python" data-language="python"><code class="language-python">user_list <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span><span class="token string">"刘华强"</span><span class="token punctuation">,</span><span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> user_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> user_list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> user_list<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">)</span>  <span class="token comment"># 超出范围报错</span></code></pre></li><li><p>切片</p><pre class="language-python" data-language="python"><code class="language-python">user_list <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span><span class="token string">"刘华强"</span><span class="token punctuation">,</span><span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> user_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> user_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> user_list<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">)</span></code></pre></li><li><p>步长</p><pre class="language-python" data-language="python"><code class="language-python">user_list <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span><span class="token string">"刘华强"</span><span class="token punctuation">,</span><span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">,</span><span class="token string">"宋小宝"</span><span class="token punctuation">,</span><span class="token string">"刘能"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> user_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> user_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> user_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> user_list<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 字符串 &amp; 元组。</span>user_list <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span><span class="token string">"刘华强"</span><span class="token punctuation">,</span><span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">,</span><span class="token string">"宋小宝"</span><span class="token punctuation">,</span><span class="token string">"刘能"</span><span class="token punctuation">)</span>data <span class="token operator">=</span> user_list<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token comment"># 列表</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span><span class="token string">"刘华强"</span><span class="token punctuation">,</span><span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">,</span><span class="token string">"宋小宝"</span><span class="token punctuation">,</span><span class="token string">"刘能"</span><span class="token punctuation">]</span>data <span class="token operator">=</span> user_list<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>user_list<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span></code></pre></li><li><p>for循环</p><pre class="language-python" data-language="python"><code class="language-python">user_list <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span><span class="token string">"刘华强"</span><span class="token punctuation">,</span><span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">,</span><span class="token string">"宋小宝"</span><span class="token punctuation">,</span><span class="token string">"刘能"</span><span class="token punctuation">)</span><span class="token keyword">for</span> item <span class="token keyword">in</span> user_list<span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">user_list <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span><span class="token string">"刘华强"</span><span class="token punctuation">,</span><span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">,</span><span class="token string">"宋小宝"</span><span class="token punctuation">,</span><span class="token string">"刘能"</span><span class="token punctuation">)</span><span class="token keyword">for</span> item <span class="token keyword">in</span> user_list<span class="token punctuation">:</span> <span class="token keyword">if</span> item <span class="token operator">==</span> <span class="token string">'刘华强'</span><span class="token punctuation">:</span> <span class="token keyword">continue</span> <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span></code></pre><p>目前：只有 str、list、tuple 可以被for循环。 “xxx”  [11,22,33]  (111,22,33)</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># len + range + for + 索引</span>user_list <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"范德彪"</span><span class="token punctuation">,</span><span class="token string">"刘华强"</span><span class="token punctuation">,</span><span class="token string">'尼古拉斯赵四'</span><span class="token punctuation">,</span><span class="token string">"宋小宝"</span><span class="token punctuation">,</span><span class="token string">"刘能"</span><span class="token punctuation">)</span><span class="token keyword">for</span> index <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>user_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    item <span class="token operator">=</span> user_list<span class="token punctuation">[</span>index<span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span></code></pre></li></ol><h3 id="2-4-转换-1"><a href="#2-4-转换-1" class="headerlink" title="2.4 转换"></a>2.4 转换</h3><p>其他类型转换为元组，使用<code>tuple(其他类型)</code>，目前只有字符串和列表可以转换为元组。</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span>其他<span class="token punctuation">)</span><span class="token comment"># str / list </span></code></pre><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"武沛齐"</span>data <span class="token operator">=</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 输出 ("武","沛","齐")</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"武沛齐"</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">"pythonav"</span><span class="token punctuation">]</span>data <span class="token operator">=</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 输出 ("武沛齐",18,"pythonav")</span></code></pre><h3 id="2-5-其他-1"><a href="#2-5-其他-1" class="headerlink" title="2.5 其他"></a>2.5 其他</h3><h4 id="2-5-1-嵌套"><a href="#2-5-1-嵌套" class="headerlink" title="2.5.1 嵌套"></a>2.5.1 嵌套</h4><p>由于元组和列表都可以充当<code>容器</code>，他们内部可以放很多元素，并且也支持元素内的各种嵌套。</p><pre class="language-python" data-language="python"><code class="language-python">tu <span class="token operator">=</span> <span class="token punctuation">(</span> <span class="token string">'今天姐姐不在家'</span><span class="token punctuation">,</span> <span class="token string">'姐夫和小姨子在客厅聊天'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'姐夫问小姨子税后多少钱'</span><span class="token punctuation">,</span><span class="token string">'小姨子低声说道说和姐夫还提钱'</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>tu1 <span class="token operator">=</span> tu<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>tu2 <span class="token operator">=</span> tu<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>tu3 <span class="token operator">=</span> tu<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>tu4 <span class="token operator">=</span> tu<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>tu5 <span class="token operator">=</span> tu<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>tu1<span class="token punctuation">)</span> <span class="token comment"># 今天姐姐不在家</span><span class="token keyword">print</span><span class="token punctuation">(</span>tu2<span class="token punctuation">)</span> <span class="token comment"># 姐夫和小姨子在客厅聊天</span><span class="token keyword">print</span><span class="token punctuation">(</span>tu3<span class="token punctuation">)</span> <span class="token comment"># 姐夫问小姨子税后多少钱</span><span class="token keyword">print</span><span class="token punctuation">(</span>tu4<span class="token punctuation">)</span> <span class="token comment"># 小姨子低声说道说和姐夫还提钱</span></code></pre><p>练习题1：判断是否可以实现，如果可以请写代码实现。</p><pre class="language-python" data-language="python"><code class="language-python">li <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token string">"WuSir"</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token string">"ritian"</span><span class="token punctuation">,</span> <span class="token string">"barry"</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token string">"wenzhou"</span><span class="token punctuation">]</span><span class="token comment">#        0               1                 2                3                4</span><span class="token comment"># 1.请将 "WuSir" 修改成 "武沛齐"</span>li<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"武沛齐"</span>index <span class="token operator">=</span> li<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">"Wusir"</span><span class="token punctuation">)</span>li<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"武沛齐"</span><span class="token comment"># 2.请将 ("ritian", "barry",) 修改为 ['日天','日地']</span>li<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'日天'</span><span class="token punctuation">,</span><span class="token string">'日地'</span><span class="token punctuation">]</span><span class="token comment"># 3.请将 88 修改为 87</span>li<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">87</span> <span class="token comment"># (报错，)</span><span class="token comment"># 4.请将 "wenzhou" 删除，然后再在列表第0个索引位置插入 "周周"</span><span class="token comment"># li.remove("wenzhou")</span><span class="token comment"># del li[-1]</span>li<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">"周周"</span><span class="token punctuation">)</span></code></pre><p>练习题2：记住一句话：《”我儿子永远不能换成是别人，但我儿子可以长大”》</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">,</span><span class="token number">666</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"李杰"</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">999</span><span class="token punctuation">,</span><span class="token number">666</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token comment"># 1.将 “123” 替换成 9   报错</span><span class="token comment"># 2.将 [11,22,33] 换成 "武沛齐"    报错</span><span class="token comment"># 3.将 11 换成 99</span>data<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">99</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>  <span class="token comment"># ("123",666,[99,22,33], ("alex","李杰",[999,666,(5,6,7)]) )</span><span class="token comment"># 4.在列表 [11,22,33] 追加一个44</span>data<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">44</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># ("123",666,[11,22,33,44], ("alex","李杰",[999,666,(5,6,7)]) )</span></code></pre><p>练习题3：动态的创建用户并添加到用户列表中。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 创建用户 5个</span><span class="token comment"># user_list = [] # 用户信息</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">(</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"132"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">,</span><span class="token string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">"eric"</span><span class="token punctuation">,</span><span class="token string">"123"</span><span class="token punctuation">)</span> <span class="token punctuation">]</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    user <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名："</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> user <span class="token operator">==</span> <span class="token string">"Q"</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    pwd <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入密码："</span><span class="token punctuation">)</span>    item <span class="token operator">=</span> <span class="token punctuation">(</span>user<span class="token punctuation">,</span>pwd<span class="token punctuation">,</span><span class="token punctuation">)</span>    user_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>item<span class="token punctuation">)</span>    <span class="token comment"># 实现：用户登录案例</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"登录程序"</span><span class="token punctuation">)</span>username <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名："</span><span class="token punctuation">)</span>password <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入密码："</span><span class="token punctuation">)</span>is_success <span class="token operator">=</span> <span class="token boolean">False</span><span class="token keyword">for</span> item <span class="token keyword">in</span> user_list<span class="token punctuation">:</span>    <span class="token comment"># item = ("alex","132")   ("admin","123")    ("eric","123")</span>    <span class="token keyword">if</span> username <span class="token operator">==</span> item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">and</span> password <span class="token operator">==</span> item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        is_success <span class="token operator">=</span> <span class="token boolean">True</span>        <span class="token keyword">break</span><span class="token keyword">if</span> is_success<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"登录成功"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"登录失败"</span><span class="token punctuation">)</span></code></pre><h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><ol><li>概述<ul><li>列表，以后写程序会用的非常多，要多写多练。</li><li>元组，以后写程序用的不是很多，主要以了解其特殊和用法为主。</li></ul></li><li>列表和元组的区别。</li><li>可变类型和不可变类型。</li><li>列表独有功能 &amp; 公共功能（不用特地去记，多做题目去用，以后每天都会有相关的练习题）。</li><li>列表和元组等数据的嵌套</li><li>元组中 (1) 和 (1,) 的区别。</li><li>元组的元素不能被替换，但元组的元素如果是可变类型，可变类型内部是可以修改的。</li></ol><h2 id="作业-1"><a href="#作业-1" class="headerlink" title="作业"></a>作业</h2><ol><li><p>以下哪些数据类型转换为布尔值为False</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token number">1</span> <span class="token string">""</span>  <span class="token comment"># F</span><span class="token operator">-</span><span class="token number">19</span><span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token comment"># F</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># F</span></code></pre></li><li><p>运算符操作</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">or</span> <span class="token string">"alex"</span>  <span class="token comment"># 'alex'</span>v2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">)</span>  <span class="token comment"># (1, 2,)</span></code></pre></li><li><p>比较：<code>a = [1,2,3]</code>和 <code>b = [(1),(2),(3) ]</code> 以及 <code>c = [(1,),(2,),(3,) ]</code> 的区别？</p></li><li><p>将字符串<code>text = &quot;wupeiqi|alex|eric&quot;</code>根据 <code>|</code> 分割为列表，然后列表转换为元组类型。</p></li><li><p>根据如下规则创建一副扑克牌（排除大小王）。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 花色列表</span>color_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"红桃"</span><span class="token punctuation">,</span><span class="token string">"黑桃"</span><span class="token punctuation">,</span><span class="token string">"方片"</span><span class="token punctuation">,</span><span class="token string">"梅花"</span><span class="token punctuation">]</span><span class="token comment"># 牌值</span>num_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    num_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>num<span class="token punctuation">)</span>    result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment"># 请根据以上的花色和牌值创建一副扑克牌（排除大小王）</span><span class="token comment"># 最终result的结果格式为： [ ("红桃",1), ("红桃",2) ... ]</span></code></pre></li></ol><h1 id="七、数据类型（下）"><a href="#七、数据类型（下）" class="headerlink" title="七、数据类型（下）"></a>七、数据类型（下）</h1><p>常见的数据类型：</p><ul><li><span style="color:gray">int，整数类型（整形）</span></li><li><span style="color:gray">bool，布尔类型</span></li><li><span style="color:gray">str，字符串类型</span></li><li><span style="color:gray">list，列表类型</span></li><li><span style="color:gray">tuple，元组类型</span></li><li><strong>dict，字典类型</strong></li><li><strong>set，集合类型</strong></li><li><strong>float，浮点类型（浮点型）</strong></li></ul><p>目标：掌握字典、集合、浮点类型相关知识。</p><p>课程概要：</p><ul><li>set集合，一个不允许重复重复 &amp; 可变类型（元素可哈希）。</li><li>dict字典，一个容器且元素必须是键值对。</li><li>float类型，我们生活中常见的小数。</li></ul><h2 id="1-集合（set）"><a href="#1-集合（set）" class="headerlink" title="1.集合（set）"></a>1.集合（set）</h2><p>集合是一个 <strong>无序 、可变、不允许数据重复</strong>的容器。</p><h3 id="1-1-定义-2"><a href="#1-1-定义-2" class="headerlink" title="1.1 定义"></a>1.1 定义</h3><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token string">"alex"</span> <span class="token punctuation">&#125;</span></code></pre><ul><li><p>无序，无法通过索引取值。</p></li><li><p>可变，可以添加和删除元素。</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">&#125;</span>v1<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">55</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span> <span class="token comment"># &#123;11,22,33,44,55&#125;</span></code></pre></li><li><p>不允许数据重复。</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">&#125;</span>v1<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span> <span class="token comment"># &#123;11,22,33,44&#125;</span></code></pre></li></ul><p>一般什么时候用集合呢？</p><blockquote><p>​就是想要维护一大堆不重复的数据时，就可以用它。比如：做爬虫去网上找图片的链接，为了避免链接重复，可以选择用集合去存储链接地址。</p></blockquote><p><font color="#dd0000"><strong>注意：定义空集合时，只能使用<code>v = set()</code>，不能使用 <code>v=&#123;&#125;</code>（这样是定义一个空字典）。</strong></font></p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>v11 <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span>v2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span>v22 <span class="token operator">=</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span><span class="token punctuation">)</span>v3 <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>v4 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token comment"># 空字典</span>v44 <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h3 id="1-2-独有功能-2"><a href="#1-2-独有功能-2" class="headerlink" title="1.2 独有功能"></a>1.2 独有功能</h3><ol><li><p><code>set.add() </code> 添加元素</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>data<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"周杰伦"</span><span class="token punctuation">)</span>data<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token string">"林俊杰"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></code></pre></li><li><p><code>set.discard()</code>  删除元素</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"刘嘉玲"</span><span class="token punctuation">,</span> <span class="token string">'关之琳'</span><span class="token punctuation">,</span> <span class="token string">"王祖贤"</span><span class="token punctuation">,</span><span class="token string">"张曼⽟"</span><span class="token punctuation">,</span> <span class="token string">"李若彤"</span><span class="token punctuation">&#125;</span>data<span class="token punctuation">.</span>discard<span class="token punctuation">(</span><span class="token string">"关之琳"</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></code></pre></li><li><p><code>set.intersection()</code> 交集</p><pre class="language-python" data-language="python"><code class="language-python">s1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"刘能"</span><span class="token punctuation">,</span> <span class="token string">"赵四"</span><span class="token punctuation">,</span> <span class="token string">"⽪⻓⼭"</span><span class="token punctuation">&#125;</span>s2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"刘科⻓"</span><span class="token punctuation">,</span> <span class="token string">"冯乡⻓"</span><span class="token punctuation">,</span> <span class="token string">"⽪⻓⼭"</span><span class="token punctuation">&#125;</span>s4 <span class="token operator">=</span> s1<span class="token punctuation">.</span>intersection<span class="token punctuation">(</span>s2<span class="token punctuation">)</span>  <span class="token comment"># 方式一. 取两个集合的交集 </span><span class="token keyword">print</span><span class="token punctuation">(</span>s4<span class="token punctuation">)</span> <span class="token comment"># &#123;"⽪⻓⼭"&#125;</span>s3 <span class="token operator">=</span> s1 <span class="token operator">&amp;</span> s2     <span class="token comment"># 方式二. 取两个集合的交集</span><span class="token keyword">print</span><span class="token punctuation">(</span>s3<span class="token punctuation">)</span></code></pre></li><li><p><code>set.union </code> 并集</p><pre class="language-python" data-language="python"><code class="language-python">s1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"刘能"</span><span class="token punctuation">,</span> <span class="token string">"赵四"</span><span class="token punctuation">,</span> <span class="token string">"⽪⻓⼭"</span><span class="token punctuation">&#125;</span>s2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"刘科⻓"</span><span class="token punctuation">,</span> <span class="token string">"冯乡⻓"</span><span class="token punctuation">,</span> <span class="token string">"⽪⻓⼭"</span><span class="token punctuation">&#125;</span>s4 <span class="token operator">=</span> s1<span class="token punctuation">.</span>union<span class="token punctuation">(</span>s2<span class="token punctuation">)</span> <span class="token comment"># 方式一. 取两个集合的并集  &#123;"刘能", "赵四", "⽪⻓⼭","刘科⻓", "冯乡⻓", &#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span>s4<span class="token punctuation">)</span>s3 <span class="token operator">=</span> s1 <span class="token operator">|</span> s2   <span class="token comment"># 方式二. 取两个集合的并集</span><span class="token keyword">print</span><span class="token punctuation">(</span>s3<span class="token punctuation">)</span></code></pre></li><li><p><code>set.difference</code>  补集</p><pre class="language-python" data-language="python"><code class="language-python">s1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"刘能"</span><span class="token punctuation">,</span> <span class="token string">"赵四"</span><span class="token punctuation">,</span> <span class="token string">"⽪⻓⼭"</span><span class="token punctuation">&#125;</span>s2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"刘科⻓"</span><span class="token punctuation">,</span> <span class="token string">"冯乡⻓"</span><span class="token punctuation">,</span> <span class="token string">"⽪⻓⼭"</span><span class="token punctuation">&#125;</span>s4 <span class="token operator">=</span> s1<span class="token punctuation">.</span>difference<span class="token punctuation">(</span>s2<span class="token punctuation">)</span> <span class="token comment"># 方式一. 补集，s1中有且s2中没有的值 &#123;"刘能", "赵四"&#125;</span>s6 <span class="token operator">=</span> s2<span class="token punctuation">.</span>difference<span class="token punctuation">(</span>s1<span class="token punctuation">)</span>   <span class="token comment">#        补集，s2中有且s1中没有的值 &#123;"刘科⻓", "冯乡⻓"&#125;</span>s3 <span class="token operator">=</span> s1 <span class="token operator">-</span> s2      <span class="token comment"># 方式二. 补集，s1中有且s2中没有的值</span>s5 <span class="token operator">=</span> s2 <span class="token operator">-</span> s1      <span class="token comment">#        补集，s2中有且s1中没有的值</span><span class="token keyword">print</span><span class="token punctuation">(</span>s5<span class="token punctuation">,</span>s6<span class="token punctuation">)</span></code></pre></li></ol><h3 id="1-3-公共功能-2"><a href="#1-3-公共功能-2" class="headerlink" title="1.3 公共功能"></a>1.3 公共功能</h3><ol><li><p>减，计算补集</p><pre class="language-python" data-language="python"><code class="language-python">s1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"刘能"</span><span class="token punctuation">,</span> <span class="token string">"赵四"</span><span class="token punctuation">,</span> <span class="token string">"⽪⻓⼭"</span><span class="token punctuation">&#125;</span>s2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"刘科⻓"</span><span class="token punctuation">,</span> <span class="token string">"冯乡⻓"</span><span class="token punctuation">,</span> <span class="token string">"⽪⻓⼭"</span><span class="token punctuation">&#125;</span>s3 <span class="token operator">=</span> s1 <span class="token operator">-</span> s2 s4 <span class="token operator">=</span> s2 <span class="token operator">-</span> s1<span class="token keyword">print</span><span class="token punctuation">(</span>s3<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s4<span class="token punctuation">)</span></code></pre></li><li><p>&amp;，计算交集</p><pre class="language-python" data-language="python"><code class="language-python">s1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"刘能"</span><span class="token punctuation">,</span> <span class="token string">"赵四"</span><span class="token punctuation">,</span> <span class="token string">"⽪⻓⼭"</span><span class="token punctuation">&#125;</span>s2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"刘科⻓"</span><span class="token punctuation">,</span> <span class="token string">"冯乡⻓"</span><span class="token punctuation">,</span> <span class="token string">"⽪⻓⼭"</span><span class="token punctuation">&#125;</span>s3 <span class="token operator">=</span> s1 <span class="token operator">&amp;</span> s2<span class="token keyword">print</span><span class="token punctuation">(</span>s3<span class="token punctuation">)</span></code></pre></li><li><p>|，计算并集</p><pre class="language-python" data-language="python"><code class="language-python">s1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"刘能"</span><span class="token punctuation">,</span> <span class="token string">"赵四"</span><span class="token punctuation">,</span> <span class="token string">"⽪⻓⼭"</span><span class="token punctuation">&#125;</span>s2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"刘科⻓"</span><span class="token punctuation">,</span> <span class="token string">"冯乡⻓"</span><span class="token punctuation">,</span> <span class="token string">"⽪⻓⼭"</span><span class="token punctuation">&#125;</span>s3 <span class="token operator">=</span> s1 <span class="token operator">|</span> s2<span class="token keyword">print</span><span class="token punctuation">(</span>s3<span class="token punctuation">)</span></code></pre></li><li><p>长度</p><pre class="language-python" data-language="python"><code class="language-python">v <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"刘能"</span><span class="token punctuation">,</span> <span class="token string">"赵四"</span><span class="token punctuation">,</span> <span class="token string">"尼古拉斯"</span><span class="token punctuation">&#125;</span>data <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></code></pre></li><li><p>for循环</p><pre class="language-python" data-language="python"><code class="language-python">v <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"刘能"</span><span class="token punctuation">,</span> <span class="token string">"赵四"</span><span class="token punctuation">,</span> <span class="token string">"尼古拉斯"</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> item <span class="token keyword">in</span> v<span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span></code></pre></li></ol><h3 id="1-4-转换-2"><a href="#1-4-转换-2" class="headerlink" title="1.4 转换"></a>1.4 转换</h3><p>​<font color="#dd0000"><strong>int&#x2F;list&#x2F;tuple&#x2F;dict都可以转换为集合</strong></font>其他类型如果想要转换为集合类型，可以通过set进行转换，并且<font color="#dd0000"><strong>如果数据有重复自动剔除。</strong></font></p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token string">"武沛齐"</span>v2 <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span> <span class="token comment"># &#123;"武","沛","齐"&#125;</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">]</span>v2 <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span> <span class="token comment"># &#123;11,22,33,3,99&#125;</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span>v2 <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span> <span class="token comment"># &#123;11,22,3&#125;</span></code></pre><p>​提示：这其实也是<strong>去重</strong>的一个手段。</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">&#125;</span>v1 <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># [11,22,33,3,99]</span>v2 <span class="token operator">=</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># (11,22,33,3,99)</span></code></pre><h3 id="1-5-其他-2"><a href="#1-5-其他-2" class="headerlink" title="1.5 其他"></a>1.5 其他</h3><h4 id="1-5-1-集合的存储原理"><a href="#1-5-1-集合的存储原理" class="headerlink" title="1.5.1 集合的存储原理"></a>1.5.1 集合的存储原理</h4><img src="asserts/image-20201120193837492.png" alt="image-20201120193837492" style="zoom:50%;" /><h4 id="1-5-2-元素必须可哈希"><a href="#1-5-2-元素必须可哈希" class="headerlink" title="1.5.2 元素必须可哈希"></a>1.5.2 元素必须可哈希</h4><p>因存储原理，集合的元素必须是可哈希的值，即：内部通过哈希函数把值转换成一个数字。</p><img src="asserts/image-20201120190454120.png" alt="image-20201120190454120" style="zoom: 25%;" /><p>​<font color="#dd0000"><strong>目前可哈希的数据类型：int、bool、str、tuple，而list、set是不可哈希的，因此集合的元素只能是 int、bool、str、tuple 。</strong></font></p><ul><li><p>转换成功</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">]</span>v2 <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span> <span class="token comment"># &#123;11,22,33,3,99&#125;</span></code></pre></li><li><p>转换失败</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"eric"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">]</span>v2 <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span> <span class="token comment"># 报错 </span><span class="token keyword">print</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span> </code></pre></li></ul><h4 id="1-5-3-查找速度特别快"><a href="#1-5-3-查找速度特别快" class="headerlink" title="1.5.3 查找速度特别快"></a>1.5.3 查找速度特别快</h4><p>因存储原理特殊，集合的查找效率非常高（数据量大了才明显）。</p><ul><li><p>低</p><pre class="language-python" data-language="python"><code class="language-python">user_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"武沛齐"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"李璐"</span><span class="token punctuation">]</span><span class="token keyword">if</span> <span class="token string">"alex"</span> <span class="token keyword">in</span> user_list<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"在"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"不在"</span><span class="token punctuation">)</span>        user_tuple <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"武沛齐"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"李璐"</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token string">"alex"</span> <span class="token keyword">in</span> user_tuple<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"在"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"不在"</span><span class="token punctuation">)</span></code></pre></li><li><p>效率高</p><pre class="language-python" data-language="python"><code class="language-python">user_set <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"武沛齐"</span><span class="token punctuation">,</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"李璐"</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token string">"alex"</span> <span class="token keyword">in</span> user_set<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"在"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"不在"</span><span class="token punctuation">)</span></code></pre></li></ul><h4 id="1-5-4-对比和嵌套"><a href="#1-5-4-对比和嵌套" class="headerlink" title="1.5.4 对比和嵌套"></a>1.5.4 <font color="#dd0000"><strong>对比和嵌套</strong></font></h4><table><thead><tr><th>是否可变</th><th>类型</th><th>是否有序</th><th>元素要求</th><th>是否可哈希</th><th>转换</th><th>定义空</th></tr></thead><tbody><tr><td>是</td><td>list</td><td>是</td><td>无</td><td>否</td><td>list(其他)</td><td><code>v=[]或v=list()</code></td></tr><tr><td>否</td><td>tuple</td><td>是</td><td>无</td><td>是</td><td>tuple(其他)</td><td><code>v=()或v=tuple()</code></td></tr><tr><td>是</td><td>set</td><td>否</td><td>可哈希</td><td>否</td><td>set(其他)</td><td><code>v=set()</code></td></tr></tbody></table><p>​<font color="#dd0000"><strong>注意：集合中的所有元素，包括元素里的子子孙孙都必须是可哈希的</strong></font></p><pre class="language-python" data-language="python"><code class="language-python">data_list <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">"alex"</span><span class="token punctuation">,</span>    <span class="token number">11</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">"alex"</span><span class="token punctuation">,</span> <span class="token string">"eric"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"中国"</span><span class="token punctuation">,</span> <span class="token string">"北京"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"沙河"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span></code></pre><p>​注意：由于True和False本质上存储的是 1 和 0 ，而集合又不允许重复，所以在整数 0、1和False、True出现在集合中会有如下现象：</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span>  <span class="token comment"># &#123;True&#125;</span>v2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span>  <span class="token comment"># &#123;1&#125;</span>v3 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span>v3<span class="token punctuation">)</span>  <span class="token comment"># &#123;0&#125;</span>v4 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span>v4<span class="token punctuation">)</span>  <span class="token comment"># &#123;False&#125;</span></code></pre><h3 id="练习题-1"><a href="#练习题-1" class="headerlink" title="练习题"></a>练习题</h3><ol><li><p>写代码实现</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'alex'</span><span class="token punctuation">,</span><span class="token string">'武sir'</span><span class="token punctuation">,</span><span class="token string">'肖大'</span><span class="token punctuation">&#125;</span>v2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment"># 循环提示用户输入，如果输入值在v1中存在，则追加到v2中，如果v1中不存在，则添加到v1中。（如果输入N或n则停止循环）</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入姓名(N/n退出)："</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> name<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"Q"</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    <span class="token keyword">if</span> name <span class="token keyword">in</span> v1<span class="token punctuation">:</span>        v2<span class="token punctuation">.</span>append<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>        v1<span class="token punctuation">.</span>add<span class="token punctuation">(</span>name<span class="token punctuation">)</span></code></pre></li><li><p>下面那些值不能做集合的元素</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token string">""</span><span class="token number">0</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">]</span>   <span class="token comment"># 不能</span><span class="token punctuation">[</span><span class="token punctuation">]</span>           <span class="token comment"># 不能</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">&#125;</span>      <span class="token comment"># 不能</span></code></pre></li><li><p>模拟用户信息录入程序，已录入则不再创建。</p><pre class="language-python" data-language="python"><code class="language-python">user_info_set <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入姓名："</span><span class="token punctuation">)</span>    age <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入年龄："</span><span class="token punctuation">)</span>item <span class="token operator">=</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> item <span class="token keyword">in</span> user_info_set<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"该用户已录入"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    user_info_set<span class="token punctuation">.</span>add<span class="token punctuation">(</span>item<span class="token punctuation">)</span></code></pre></li><li><p>给你个列表去重。</p><pre class="language-python" data-language="python"><code class="language-python">v <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">44455</span><span class="token punctuation">]</span>data <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token comment"># &#123;11,22,44455&#125;</span>result <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># [11,22,44455]</span></code></pre></li></ol><h2 id="强插：None类型"><a href="#强插：None类型" class="headerlink" title="强插：None类型"></a>强插：None类型</h2><p>Python的数据类型中有一个特殊的值None，意味着这个值啥都不是 或 表示空。 相当于其他语言中 <code>null</code>作用一样。</p><p>在一定程度上可以帮助我们去节省内存。例如：</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token boolean">None</span>v2 <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">.</span><span class="token punctuation">.</span>v1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">]</span>v2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">111</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">]</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">v3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>v4 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>v3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">]</span>v4 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">111</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">]</span></code></pre><p>​注意：暂不要考虑Python内部的缓存和驻留机制。</p><p>​<font color="#dd0000"><strong>目前所有转换为布尔值为False的值有：</strong></font></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token number">0</span><span class="token string">""</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">or</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token boolean">None</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> <span class="token boolean">None</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span></code></pre><h2 id="2-字典（dict"><a href="#2-字典（dict" class="headerlink" title="2.字典（dict)"></a>2.字典（dict)</h2><p>​字典是 <strong>无序</strong>、<strong>键不重复</strong> 且 元素只能是<strong>键值对</strong>的<strong>可变的</strong>  <strong>容器</strong>。</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token string">"k1"</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>  <span class="token string">"k2"</span><span class="token punctuation">:</span><span class="token number">2</span> <span class="token punctuation">&#125;</span></code></pre><ul><li><p>容器</p></li><li><p>元素必须键值对</p></li><li><p>键不重复，重复则会被覆盖</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token string">"k1"</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"k1"</span><span class="token punctuation">:</span><span class="token number">2</span> <span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># &#123;"k1":2&#125;</span></code></pre></li><li><p>无序（在Python3.6+字典就是有序了，之前的字典都是无序。）</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token string">"k1"</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>  <span class="token string">"k2"</span><span class="token punctuation">:</span><span class="token number">2</span> <span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></code></pre></li></ul><h3 id="2-1-定义-2"><a href="#2-1-定义-2" class="headerlink" title="2.1 定义"></a>2.1 定义</h3><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>v2 <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span>     <span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span>     <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span>      <span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"wupeiqi"</span><span class="token punctuation">,</span>       <span class="token string">"hobby"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'篮球'</span><span class="token punctuation">,</span><span class="token string">'足球'</span><span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span></code></pre><p><font color="#dd0000"><strong>字典中对键值得要求：</strong></font></p><ul><li><font color="#dd0000"><strong>键：必须可哈希。</strong></font> 目前为止学到的可哈希的类型：<font color="#dd0000"><strong>int&#x2F;bool&#x2F;str&#x2F;tuple；</strong></font>不可哈希的类型：<font color="#dd0000"><strong>list&#x2F;set&#x2F;dict。</strong></font>（集合）</li><li><font color="#dd0000"><strong>值：任意类型。</strong></font></li></ul><pre class="language-python" data-language="python"><code class="language-python">data_dict <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"武沛齐"</span><span class="token punctuation">:</span><span class="token number">29</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">123</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">,</span>    <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"eric"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 不合法</span>v1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'周杰伦'</span><span class="token punctuation">,</span>    <span class="token string">"age"</span> <span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">&#125;</span> v2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">:</span> <span class="token string">"哈哈哈"</span><span class="token punctuation">,</span>    <span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">"alex"</span><span class="token punctuation">&#125;</span> v3 <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#123;</span><span class="token string">"k1"</span><span class="token punctuation">:</span><span class="token number">123</span><span class="token punctuation">,</span><span class="token string">"k2"</span><span class="token punctuation">:</span><span class="token number">456</span><span class="token punctuation">&#125;</span><span class="token punctuation">:</span> <span class="token string">'呵呵呵'</span><span class="token punctuation">,</span>    <span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">999</span><span class="token punctuation">&#125;</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">data_dict <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token number">1</span><span class="token punctuation">:</span> <span class="token number">29</span><span class="token punctuation">,</span>    <span class="token boolean">True</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span>data_dict<span class="token punctuation">)</span> <span class="token comment"># &#123;1: 5&#125;</span></code></pre><blockquote><p>一般在什么情况下会用到字典呢？当我们想要表示一组固定信息时，用字典可以更加的直观，例如：</p></blockquote><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 用户列表</span>user_list <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token string">"pwd"</span><span class="token punctuation">:</span><span class="token string">"123"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"eric"</span><span class="token punctuation">,</span><span class="token string">"pwd"</span><span class="token punctuation">:</span><span class="token string">"123"</span><span class="token punctuation">&#125;</span> <span class="token punctuation">]</span></code></pre><h3 id="2-2-独有功能-2"><a href="#2-2-独有功能-2" class="headerlink" title="2.2 独有功能"></a>2.2 独有功能</h3><ol><li><p><code>dict.get()</code>获取值</p><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span>     <span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span>     <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span>     <span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"武沛齐"</span><span class="token punctuation">,</span>    <span class="token string">"data"</span><span class="token punctuation">:</span><span class="token boolean">None</span><span class="token punctuation">&#125;</span>data1 <span class="token operator">=</span> info<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data1<span class="token punctuation">)</span> <span class="token comment"># 输出：武沛齐</span>data2 <span class="token operator">=</span> info<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data2<span class="token punctuation">)</span> <span class="token comment"># 输出：12</span>data <span class="token operator">=</span> info<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"email"</span><span class="token punctuation">)</span> <span class="token comment"># 键不存在，默认返回 None</span><span class="token triple-quoted-string string">"""if data == None:    print("此键不存在")else:    print(data)if data:    print(data)else:    print("键不存在")"""</span><span class="token triple-quoted-string string">"""# 字典的键中是否存在 emailif "email" in info:    data = info.get("email")    print(data)else:print("不存在")"""</span>data <span class="token operator">=</span> info<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"hobby"</span><span class="token punctuation">,</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 输出：123</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 案例：</span>user_list <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"wupeiqi"</span><span class="token punctuation">:</span> <span class="token string">"123"</span><span class="token punctuation">,</span>    <span class="token string">"alex"</span><span class="token punctuation">:</span> <span class="token string">"uk87"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span>username <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名："</span><span class="token punctuation">)</span>password <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入密码："</span><span class="token punctuation">)</span><span class="token comment"># None，用户名不存在</span><span class="token comment"># 密码，接下来比较密码</span>pwd <span class="token operator">=</span> user_list<span class="token punctuation">.</span>get<span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token keyword">if</span> pwd <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"用户名不存在"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> password <span class="token operator">==</span> pwd<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"登录成功"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"密码错误"</span><span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 案例：</span>user_list <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"wupeiqi"</span><span class="token punctuation">:</span> <span class="token string">"123"</span><span class="token punctuation">,</span>    <span class="token string">"alex"</span><span class="token punctuation">:</span> <span class="token string">"uk87"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span>username <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名："</span><span class="token punctuation">)</span>password <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入密码："</span><span class="token punctuation">)</span><span class="token comment"># None，用户名不存在</span><span class="token comment"># 密码，接下来比较密码</span>pwd <span class="token operator">=</span> user_list<span class="token punctuation">.</span>get<span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token keyword">if</span> pwd<span class="token punctuation">:</span>    <span class="token keyword">if</span> password <span class="token operator">==</span> pwd<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"登录成功"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"密码错误"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"用户名不存在"</span><span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 案例：</span>user_list <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"wupeiqi"</span><span class="token punctuation">:</span> <span class="token string">"123"</span><span class="token punctuation">,</span>    <span class="token string">"alex"</span><span class="token punctuation">:</span> <span class="token string">"uk87"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span>username <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名："</span><span class="token punctuation">)</span>password <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入密码："</span><span class="token punctuation">)</span><span class="token comment"># None，用户名不存在</span><span class="token comment"># 密码，接下来比较密码</span>pwd <span class="token operator">=</span> user_list<span class="token punctuation">.</span>get<span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token keyword">not</span> pwd<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"用户名不存在"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> password <span class="token operator">==</span> pwd<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"登录成功"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"密码错误"</span><span class="token punctuation">)</span>        <span class="token comment"># 写代码的准则：简单的逻辑处理放在前面；复杂的逻辑放在后面。</span></code></pre></li><li><p><code>dict.keys()</code>所有的键</p><pre class="language-python" data-language="python"><code class="language-python">xxxxxxxxxx info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"wupeiqi"</span><span class="token punctuation">,</span><span class="token string">"email"</span><span class="token punctuation">:</span><span class="token string">"xx@live.com"</span><span class="token punctuation">&#125;</span>data <span class="token operator">=</span> info<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 输出：dict_keys(['age', 'status', 'name', 'email'])    py2 -> ['age', 'status', 'name', 'email']result = list(data)print(result) # ['age', 'status', 'name', 'email']</span></code></pre><p>​注意：在Python2中 字典.keys()直接获取到的是列表，而Python3中返回的是<code>高仿列表</code>，这个高仿的列表可以被循环显示。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 循环</span>info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"wupeiqi"</span><span class="token punctuation">,</span><span class="token string">"email"</span><span class="token punctuation">:</span><span class="token string">"xx@live.com"</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> ele <span class="token keyword">in</span> info<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 是否存在</span>info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"wupeiqi"</span><span class="token punctuation">,</span><span class="token string">"email"</span><span class="token punctuation">:</span><span class="token string">"xx@live.com"</span><span class="token punctuation">&#125;</span><span class="token comment"># info.keys() # dict_keys(['age', 'status', 'name', 'email'])</span><span class="token keyword">if</span> <span class="token string">"age"</span> <span class="token keyword">in</span> info<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"age是字典的键"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"age不是"</span><span class="token punctuation">)</span></code></pre></li><li><p><code>dict.values()</code>所有的值</p><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"wupeiqi"</span><span class="token punctuation">,</span><span class="token string">"email"</span><span class="token punctuation">:</span><span class="token string">"xx@live.com"</span><span class="token punctuation">&#125;</span>data <span class="token operator">=</span> info<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 输出：dict_values([12, True, 'wupeiqi', 'xx@live.com'])</span></code></pre><p>注意：在Python2中 字典.values()直接获取到的是列表，而Python3中返回的是高仿列表，这个高仿的列表可以被循环显示。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 循环</span>info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"wupeiqi"</span><span class="token punctuation">,</span><span class="token string">"email"</span><span class="token punctuation">:</span><span class="token string">"xx@live.com"</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> val <span class="token keyword">in</span> info<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> </code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 是否存在</span>info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"wupeiqi"</span><span class="token punctuation">,</span><span class="token string">"email"</span><span class="token punctuation">:</span><span class="token string">"xx@live.com"</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token number">12</span> <span class="token keyword">in</span> info<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"12是字典的值"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"12不是"</span><span class="token punctuation">)</span></code></pre></li><li><p><code>dict.items()</code>所有的键值</p><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"wupeiqi"</span><span class="token punctuation">,</span><span class="token string">"email"</span><span class="token punctuation">:</span><span class="token string">"xx@live.com"</span><span class="token punctuation">&#125;</span>data <span class="token operator">=</span> info<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 输出 dict_items([ ('age', 12),  ('status', True),  ('name', 'wupeiqi'),  ('email', 'xx@live.com')  ])</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> item <span class="token keyword">in</span> info<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># item是一个元组 (键，值)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> key<span class="token punctuation">,</span>value <span class="token keyword">in</span> info<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span> <span class="token comment"># key代表键，value代表值，将兼职从元组中直接拆分出来了。</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"wupeiqi"</span><span class="token punctuation">,</span><span class="token string">"email"</span><span class="token punctuation">:</span><span class="token string">"xx@live.com"</span><span class="token punctuation">&#125;</span>data <span class="token operator">=</span> info<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">'age'</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token keyword">in</span> data<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"在"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"不在"</span><span class="token punctuation">)</span></code></pre></li><li><p><code>dict.setdefault()=</code>设置值</p><pre class="language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"武沛齐"</span><span class="token punctuation">,</span>    <span class="token string">"email"</span><span class="token punctuation">:</span> <span class="token string">'xxx@live.com'</span><span class="token punctuation">&#125;</span>data<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>  <span class="token comment"># &#123;'name': '武沛齐', 'email': 'xxx@live.com', 'age': 18&#125;</span>data<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span> <span class="token string">"alex"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>  <span class="token comment"># &#123;'name': '武沛齐', 'email': 'xxx@live.com', 'age': 18&#125;</span></code></pre></li><li><p><code>dict.update()</code>更新字典键值对</p><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">&#125;</span>info<span class="token punctuation">.</span>update<span class="token punctuation">(</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"武沛齐"</span><span class="token punctuation">&#125;</span> <span class="token punctuation">)</span>   <span class="token comment"># info中没有的键直接添加；有的键则更新值</span><span class="token keyword">print</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token comment"># 输出：&#123;"age":14, "status":True,"name":"武沛齐"&#125;</span></code></pre></li><li><p><code>dict.pop()</code>移除指定键值对</p><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"武沛齐"</span><span class="token punctuation">&#125;</span>data <span class="token operator">=</span> info<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token comment"># &#123;"status":True,"name":"武沛齐"&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 12</span></code></pre></li><li><p><code>dict.popitem()</code>按照顺序移除（后进先出）</p><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"武沛齐"</span><span class="token punctuation">&#125;</span>data <span class="token operator">=</span> info<span class="token punctuation">.</span>popitem<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># ("name","武沛齐" )</span><span class="token keyword">print</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token comment"># &#123;"age":12, "status":True&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># ("name","武沛齐")</span></code></pre><ul><li>py3.6后，popitem移除最后的值。</li><li>py3.6之前，popitem随机删除。</li></ul></li></ol><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 练习题</span><span class="token triple-quoted-string string">""" 结合下面的两个变量 header 和 stock_dict实现注意输出股票信息，格式如下：SH601778，股票名称:中国晶科、当前价:6.29、涨跌额:+1.92。    SH688566，股票名称:吉贝尔、当前价:...               。..."""</span>header <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'股票名称'</span><span class="token punctuation">,</span> <span class="token string">'当前价'</span><span class="token punctuation">,</span> <span class="token string">'涨跌额'</span><span class="token punctuation">]</span>stock_dict <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'SH601778'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'中国晶科'</span><span class="token punctuation">,</span> <span class="token string">'6.29'</span><span class="token punctuation">,</span> <span class="token string">'+1.92'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>     <span class="token string">'SH688566'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'吉贝尔'</span><span class="token punctuation">,</span> <span class="token string">'52.66'</span><span class="token punctuation">,</span> <span class="token string">'+6.96'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>     <span class="token string">'SH688268'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'华特气体'</span><span class="token punctuation">,</span> <span class="token string">'88.80'</span><span class="token punctuation">,</span> <span class="token string">'+11.72'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>     <span class="token string">'SH600734'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'实达集团'</span><span class="token punctuation">,</span> <span class="token string">'2.60'</span><span class="token punctuation">,</span> <span class="token string">'+0.24'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> stock <span class="token keyword">in</span> stock_dict<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    msg <span class="token operator">=</span> <span class="token string">'&#123;&#125;,'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>stock<span class="token punctuation">)</span>  <span class="token comment"># 'SH601778，'...</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>header<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token builtin">len</span><span class="token punctuation">(</span>header<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>            msg <span class="token operator">+=</span> <span class="token string">'&#123;&#125;:&#123;&#125;。'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>header<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> stock_dict<span class="token punctuation">[</span>stock<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 'SH601778,股票名称:中国晶科、当前价:6.29、涨跌额:+1.92。'...</span>            <span class="token keyword">continue</span>        msg <span class="token operator">+=</span> <span class="token string">'&#123;&#125;:&#123;&#125;、'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>header<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> stock_dict<span class="token punctuation">[</span>stock<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 'SH688566,股票名称:吉贝尔、当前价:52.66、涨跌额:+6.96、'...</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span></code></pre><h3 id="2-3-公共功能-2"><a href="#2-3-公共功能-2" class="headerlink" title="2.3 公共功能"></a>2.3 公共功能</h3><ol><li><p>求<code>并集</code>（Python3.9新加入）</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"k1"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"k2"</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span>v2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"k2"</span><span class="token punctuation">:</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token string">"k3"</span><span class="token punctuation">:</span> <span class="token number">33</span><span class="token punctuation">&#125;</span>v3 <span class="token operator">=</span> v1 <span class="token operator">|</span> v2<span class="token keyword">print</span><span class="token punctuation">(</span>v3<span class="token punctuation">)</span> <span class="token comment"># &#123;'k1': 1, 'k2': 22, 'k3': 33&#125;</span></code></pre></li><li><p>长度</p><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"武沛齐"</span><span class="token punctuation">&#125;</span>data <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 输出：3</span></code></pre></li><li><p>是否包含</p><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span>  <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"武沛齐"</span> <span class="token punctuation">&#125;</span>v1 <span class="token operator">=</span> <span class="token string">"age"</span> <span class="token keyword">in</span> info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"武沛齐"</span><span class="token punctuation">&#125;</span>v1 <span class="token operator">=</span> <span class="token string">"武佩奇"</span> <span class="token keyword">in</span> info<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span></code></pre></li></ol><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"武沛齐"</span><span class="token punctuation">&#125;</span><span class="token comment"># 输出info.items()获取到的 dict_items([ ('age', 12),  ('status', True),  ('name', 'wupeiqi'),  ('email', 'xx@live.com')  ])</span>v1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token keyword">in</span> info<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span></code></pre><ol start="4"><li><p>索引（键）<br>字典不同于元组和列表，字典的索引是<code>键</code>，而列表和元组则是 <code>0、1、2等数值</code> 。</p><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span>  <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"武沛齐"</span><span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span> info<span class="token punctuation">[</span><span class="token string">"age"</span><span class="token punctuation">]</span> <span class="token punctuation">)</span>      <span class="token comment"># 输出：12</span><span class="token keyword">print</span><span class="token punctuation">(</span> info<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token comment"># 输出：武沛齐</span><span class="token keyword">print</span><span class="token punctuation">(</span> info<span class="token punctuation">[</span><span class="token string">"status"</span><span class="token punctuation">]</span> <span class="token punctuation">)</span>    <span class="token comment"># 输出：True</span><span class="token keyword">print</span><span class="token punctuation">(</span> info<span class="token punctuation">[</span><span class="token string">"xxxx"</span><span class="token punctuation">]</span> <span class="token punctuation">)</span>   <span class="token comment"># 报错，通过键为索引去获取之后时，键不存在会报错（以后项目开发时建议使用get方法根据键去获取值）</span>value <span class="token operator">=</span> info<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"xxxxx"</span><span class="token punctuation">)</span> <span class="token comment"># None</span><span class="token keyword">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span></code></pre></li><li><p>根据键 修改值 和 添加值 和 删除键值对<br>上述示例通过键可以找到字典中的值，通过键也可以对字典进行添加和更新操作</p><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"武沛齐"</span><span class="token punctuation">&#125;</span>info<span class="token punctuation">[</span><span class="token string">"gender"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"男"</span><span class="token keyword">print</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token comment"># 输出： &#123;"age":12, "status":True,"name":"武沛齐","gender":"男"&#125;</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"武沛齐"</span><span class="token punctuation">&#125;</span>info<span class="token punctuation">[</span><span class="token string">"age"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"18"</span> <span class="token keyword">print</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token comment"># 输出： &#123;"age":"18", "status":True,"name":"武沛齐"&#125;</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"武沛齐"</span><span class="token punctuation">&#125;</span><span class="token keyword">del</span> info<span class="token punctuation">[</span><span class="token string">"age"</span><span class="token punctuation">]</span>  <span class="token comment"># 删除info字典中键为age的那个键值对（键不存在则报错）</span><span class="token keyword">print</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token comment"># 输出： &#123;"status":True,"name":"武沛齐"&#125;</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"武沛齐"</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token string">"agea"</span> <span class="token keyword">in</span> info<span class="token punctuation">:</span>    <span class="token comment"># del info["age"]</span>    data <span class="token operator">=</span> info<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"键不存在"</span><span class="token punctuation">)</span></code></pre></li><li><p>for循环<br>由于字典也属于是容器，内部可以包含多个键值对，可以通过循环对其中的：键、值、键值进行循环；</p><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"武沛齐"</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> item <span class="token keyword">in</span> info<span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>  <span class="token comment"># 所有键</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"武沛齐"</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> item <span class="token keyword">in</span> info<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"武沛齐"</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> item <span class="token keyword">in</span> info<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"武沛齐"</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> key<span class="token punctuation">,</span>value <span class="token keyword">in</span> info<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span></code></pre></li></ol><h3 id="2-4-转换-2"><a href="#2-4-转换-2" class="headerlink" title="2.4 转换"></a>2.4 转换</h3><p>想要转换为字典.</p><pre class="language-python" data-language="python"><code class="language-python">v <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span> <span class="token punctuation">[</span> <span class="token punctuation">(</span><span class="token string">"k1"</span><span class="token punctuation">,</span> <span class="token string">"v1"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"k2"</span><span class="token punctuation">,</span> <span class="token string">"v2"</span><span class="token punctuation">]</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token comment"># &#123; "k1":"v1", "k2":"v2" &#125;</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">"status"</span><span class="token punctuation">:</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"武沛齐"</span> <span class="token punctuation">&#125;</span>v1 <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span>        <span class="token comment"># ["age","status","name"]</span>v2 <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># ["age","status","name"]</span>v3 <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># [12,True,"武沛齐"]</span>v4 <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># [ ("age",12), ("status",True), ("name","武沛齐") ]</span></code></pre><h3 id="1-5-其他-3"><a href="#1-5-其他-3" class="headerlink" title="1.5 其他"></a>1.5 其他</h3><h4 id="1-5-1-存储原理"><a href="#1-5-1-存储原理" class="headerlink" title="1.5.1 存储原理"></a>1.5.1 存储原理</h4><p><img src="/asserts/image-20201121131221807.png" alt="image-20201121131221807"></p><h4 id="1-5-2-速度快"><a href="#1-5-2-速度快" class="headerlink" title="1.5.2 速度快"></a>1.5.2 速度快</h4><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"alex"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">"肝胆"</span><span class="token punctuation">,</span><span class="token string">"铁锤"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"老男孩"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">"二蛋"</span><span class="token punctuation">,</span><span class="token string">"缺货"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> <span class="token string">"alex"</span> <span class="token keyword">in</span> info<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"在"</span>）</code></pre><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"alex"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">"肝胆"</span><span class="token punctuation">,</span><span class="token string">"铁锤"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"老男孩"</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">"二蛋"</span><span class="token punctuation">,</span><span class="token string">"缺货"</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>v1 <span class="token operator">=</span> info<span class="token punctuation">[</span><span class="token string">"alex"</span><span class="token punctuation">]</span>v2 <span class="token operator">=</span> info<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"alex"</span><span class="token punctuation">)</span></code></pre><h4 id="1-5-3-嵌套"><a href="#1-5-3-嵌套" class="headerlink" title="1.5.3 嵌套"></a>1.5.3 嵌套</h4><p>我们已学了很多数据类型，在涉及多种数据类型之间的嵌套时，需注意一下几点：</p><ul><li><p><font color="#dd0000"><strong>字典的键必须可哈希，且它的子子孙孙都必须是可哈希的。（list&#x2F;set&#x2F;dict不可哈希）。</strong></font></p><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token number">123</span><span class="token punctuation">&#125;</span><span class="token comment"># 错误</span>info <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token string">"alex"</span><span class="token punctuation">&#125;</span></code></pre></li><li><p>字典的值可以是任意类型。</p><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"k1"</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token string">"k2"</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span><span class="token string">"xx"</span><span class="token punctuation">:</span><span class="token string">"x1"</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre></li><li><p>字典的键和集合的元素在遇到  布尔值 和 1、0 时，需注意重复的情况。</p></li><li><p>元组的元素不可以被替换。</p></li></ul><pre class="language-python" data-language="python"><code class="language-python">dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'汪峰'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">48</span><span class="token punctuation">,</span><span class="token string">'wife'</span><span class="token punctuation">:</span><span class="token punctuation">[</span> <span class="token punctuation">&#123;</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'国际章'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">38</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'李杰'</span><span class="token punctuation">,</span><span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">48</span><span class="token punctuation">&#125;</span> <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'children'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'第一个娃'</span><span class="token punctuation">,</span><span class="token string">'第二个娃'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token triple-quoted-string string">"""1. 获取汪峰的妻子名字d1 = dic['wife'][0]['name']print(d1)2. 获取汪峰的孩子们d2 = dic['children']print(d2)3. 获取汪峰的第一个孩子d3 = dic['children'][0]print(d3)4. 汪峰的媳妇姓名变更为 章子怡dic['wife'][0]['name] = "章子怡"print(dic)5. 汪峰再娶一任妻子dic['wife'].append( &#123;"name":"铁锤","age":19&#125; )print(dic)6. 给汪峰添加一个爱好：吹牛逼dic['hobby'] = "吹牛逼"print(dic)7. 删除汪峰的年龄del dic['age']或dic.pop('age')print(dic)"""</span></code></pre><h2 id="3-浮点型（float）"><a href="#3-浮点型（float）" class="headerlink" title="3.浮点型（float）"></a>3.浮点型（float）</h2><p>浮点型，一般在开发中用于表示小数。</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token number">3.14</span>v2 <span class="token operator">=</span> <span class="token number">9.89</span></code></pre><p>关于浮点型的其他知识点如下：</p><ul><li><p>在类型转换时需要，在浮点型转换为整型时，会将小数部分去掉。</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token number">3.14</span> data <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 3</span></code></pre></li><li><p>想要保留小数点后N位</p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token number">3.1415926</span>result <span class="token operator">=</span> <span class="token builtin">round</span><span class="token punctuation">(</span>v1<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment"># 3.142</span></code></pre></li><li><p>浮点型的坑（所有语言中）</p><img src="asserts/image-20201121190846593.png" alt="image-20201121190846593" style="zoom: 33%;" /><p>底层原理视频：<a href="https://www.bilibili.com/video/BV1354y1B7o1/">https://www.bilibili.com/video/BV1354y1B7o1/</a></p><p>在项目中如果遇到精确的小数计算应该怎么办？</p></li></ul><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> decimalv1 <span class="token operator">=</span> decimal<span class="token punctuation">.</span>Decimal<span class="token punctuation">(</span><span class="token string">"0.1"</span><span class="token punctuation">)</span>v2 <span class="token operator">=</span> decimal<span class="token punctuation">.</span>Decimal<span class="token punctuation">(</span><span class="token string">"0.2"</span><span class="token punctuation">)</span>v3 <span class="token operator">=</span> v1 <span class="token operator">+</span> v2<span class="token keyword">print</span><span class="token punctuation">(</span>v3<span class="token punctuation">)</span> <span class="token comment"># 0.3</span></code></pre><h2 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h2><ol><li><p>集合，是 无序、不重复、元素必须可哈希、可变的一个容器（子孙元素都必须是可哈希）。</p></li><li><p>集合的查找速度比较快（底层是基于哈希进行存储）</p></li><li><p>集合可以具有 交并差 的功能。</p></li><li><p>字典是 无序、键不重复 且 元素只能是键值对的可变的一个容器（键子孙元素都必须是可哈希）。</p></li><li><p>py3.6+之后字典就变为有序了。</p></li><li><p>py3.9 新增了一个 <code>&#123;&#125; | &#123;&#125; </code>运算。</p></li><li><p>字典的常见功能。</p></li><li><p>在python2和python3中，字典的 keys() 、values()、items() 三个功能获取的数据类型不一样。</p></li><li><p>None是代表内存中的一个空值。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token number">0</span><span class="token string">""</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">or</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token boolean">None</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token keyword">or</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></li><li><p>浮点型用于表示小数，但是由于其内部存储原理可能会引发数据存储不够精准。</p></li></ol><h2 id="作业-2"><a href="#作业-2" class="headerlink" title="作业"></a>作业</h2><ol><li><p>根据需求写代码</p><pre class="language-python" data-language="python"><code class="language-python">dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'k1'</span><span class="token punctuation">:</span> <span class="token string">"v1"</span><span class="token punctuation">,</span> <span class="token string">"k2"</span><span class="token punctuation">:</span> <span class="token string">"v2"</span><span class="token punctuation">,</span> <span class="token string">"k3"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token comment"># 请在字典中添加一个键值对，"k4": "v4"，输出添加后的字典</span><span class="token comment"># 请在修改字典中 "k1" 对应的值为 "alex"，输出修改后的字典</span><span class="token comment"># 请在k3对应的值中追加一个元素 44，输出修改后的字典</span><span class="token comment"># 请在k3对应的值的第 1 个位置插入个元素 18，输出修改后的字典</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># dic.setdefault('k4', 'v4')</span>dic<span class="token punctuation">[</span><span class="token string">'k4'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'v4'</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span><span class="token comment"># dic.update(&#123;'k1': 'alex'&#125;)</span>dic<span class="token punctuation">[</span><span class="token string">'k1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'alex'</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span>dic<span class="token punctuation">[</span><span class="token string">'k3'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">44</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span>dic<span class="token punctuation">[</span><span class="token string">'k3'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">)</span></code></pre></li><li><p>根据需求写代码</p><pre class="language-python" data-language="python"><code class="language-python">dic1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token string">'name'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'alex'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'job'</span><span class="token punctuation">:</span><span class="token string">'teacher'</span><span class="token punctuation">,</span> <span class="token string">'oldboy'</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span><span class="token string">'alex'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">'python1'</span><span class="token punctuation">,</span><span class="token string">'python2'</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment"># 1，将name对应的列表追加⼀个元素’wusir’。</span><span class="token comment"># 2，将name对应的列表中的alex全变成大写。</span><span class="token comment"># 3，oldboy对应的字典加⼀个键值对’⽼男孩’:’linux’。</span><span class="token comment"># 4，将oldboy对应的字典中的alex对应的列表中的python2删除</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">dic1<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'wusir'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic1<span class="token punctuation">)</span>dic1<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> dic1<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic1<span class="token punctuation">)</span>dic1<span class="token punctuation">[</span><span class="token string">'oldboy'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'老男孩'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'linux'</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic1<span class="token punctuation">)</span>dic1<span class="token punctuation">[</span><span class="token string">'oldboy'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'alex'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">'python2'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>dic1<span class="token punctuation">)</span></code></pre></li><li><p>循环提示用户输入，并将输入内容添加到字典中（如果输入N或n则停止循环）</p><pre class="language-python" data-language="python"><code class="language-python">例如：用户输入 x1<span class="token operator">|</span>wupeiqi <span class="token punctuation">,</span>则需要再字典中添加键值对 <span class="token punctuation">&#123;</span><span class="token string">'x1'</span><span class="token punctuation">:</span><span class="token string">"wupeiqi"</span><span class="token punctuation">&#125;</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">result <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment"># 'x1':"wupeiqi",</span>    <span class="token comment"># ...</span><span class="token punctuation">&#125;</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    user_input <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input a text like "x1|wupeiqi",input (Q/q) to quit: '</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> user_input<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'Q'</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    info_list <span class="token operator">=</span> user_input<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span>  <span class="token comment"># [x1, wupeiqi]</span>    result<span class="token punctuation">[</span>info_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> info_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span></code></pre></li><li><p>判断以下值那个能做字典的key ？那个能做集合的元素？</p><ul><li>1  # key,value</li><li>-1  # key,value</li><li>“”  # key,value</li><li>None  # key,value</li><li>[1,2]  # value</li><li>(1,)  # key,value</li><li>{11,22,33,4}  # value</li><li>{‘name’:’wupeiq’,’age’:18}  # value</li></ul></li><li><p>将字典的键和值分别追加到 key_list 和 value_list 两个列表中，如：</p><pre class="language-python" data-language="python"><code class="language-python">key_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>value_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'k1'</span><span class="token punctuation">:</span><span class="token string">'v1'</span><span class="token punctuation">,</span><span class="token string">'k2'</span><span class="token punctuation">:</span><span class="token string">'v2'</span><span class="token punctuation">,</span><span class="token string">'k3'</span><span class="token punctuation">:</span><span class="token string">'v3'</span><span class="token punctuation">&#125;</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> key <span class="token keyword">in</span> info<span class="token punctuation">:</span>    key_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>key<span class="token punctuation">)</span>    value_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>info<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>key_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>value_list<span class="token punctuation">)</span></code></pre></li><li><p>字典dic &#x3D; {‘k1’: “v1”, “k2”: “v2”, “k3”: [11,22,33]}</p><pre class="language-python" data-language="python"><code class="language-python">a<span class="token punctuation">.</span> 请循环输出所有的keyb<span class="token punctuation">.</span> 请循环输出所有的valuec<span class="token punctuation">.</span> 请循环输出所有的key和value</code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> k <span class="token keyword">in</span> dic<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token keyword">for</span> k <span class="token keyword">in</span> dic<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>dic<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">for</span> k <span class="token keyword">in</span> dic<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> dic<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre></li><li><p>请循环打印k2对应的值中的每个元素。</p><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'k1'</span><span class="token punctuation">:</span><span class="token string">'v1'</span><span class="token punctuation">,</span>    <span class="token string">'k2'</span><span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">'alex'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'wupeiqi'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'oldboy'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> item <span class="token keyword">in</span> info<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'k2'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span></code></pre></li><li><p>有字符串”k: 1|k1:2|k2:3  |k3 :4” 处理成字典 {‘k’:1,’k1’:2….} </p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 自己版本</span>msg <span class="token operator">=</span> <span class="token string">"k: 1|k1:2|k2:3  |k3 :4"</span>result <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>msg_list <span class="token operator">=</span> msg<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span>  <span class="token comment"># ['k: 1', 'k1:2', 'k2:3  ', 'k3 :4']</span><span class="token keyword">for</span> item <span class="token keyword">in</span> msg_list<span class="token punctuation">:</span>    data <span class="token operator">=</span> item<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span>  <span class="token comment"># ['k', '1']...</span>    result<span class="token punctuation">[</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &#123;'k':1&#125;...</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 老师版本</span>msg <span class="token operator">=</span> <span class="token string">"k: 1|k1:2|k2:3  |k3 :4"</span>result <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>msg_list <span class="token operator">=</span> msg<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span>  <span class="token comment"># ['k: 1', 'k1:2', 'k2:3  ', 'k3 :4']</span><span class="token keyword">for</span> item <span class="token keyword">in</span> msg_list<span class="token punctuation">:</span>    v1<span class="token punctuation">,</span> v2 <span class="token operator">=</span> item<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span>  <span class="token comment"># ['k', '1']...</span>    result<span class="token punctuation">[</span>v1<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>v2<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># &#123;'k':1&#125;...</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span></code></pre></li><li><p>写代码</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">"""有如下值 li= [11,22,33,44,55,66,77,88,99,90] ,将所有大于 66 的值保存至字典的第一个key对应的列表中，将小于 66 的值保存至第二个key对应的列表中。   result = &#123;'k1':[],'k2':[]&#125;"""</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">li <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">66</span><span class="token punctuation">,</span> <span class="token number">77</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">]</span>result <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'k1'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'k2'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> num <span class="token keyword">in</span> li<span class="token punctuation">:</span>    <span class="token keyword">if</span> num <span class="token operator">></span> <span class="token number">66</span><span class="token punctuation">:</span>        result<span class="token punctuation">[</span><span class="token string">'k1'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>num<span class="token punctuation">)</span>    <span class="token keyword">elif</span> num <span class="token operator">==</span> <span class="token number">66</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        result<span class="token punctuation">[</span><span class="token string">'k2'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span></code></pre></li><li><p>输出商品列表，用户输入序号，显示用户选中的商品</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">"""商品列表：  goods = [&#123;"name": "电脑", "price": 1999&#125;,&#123;"name": "鼠标", "price": 10&#125;,&#123;"name": "游艇", "price": 20&#125;,&#123;"name": "美女", "price": 998&#125;]要求:1：页面显示 序号 + 商品名称 + 商品价格，如：      1 电脑 1999       2 鼠标 10  ...2：用户输入选择的商品序号，然后打印商品名称及商品价格3：如果用户输入的商品序号有误，则提示输入有误，并重新输入。4：用户输入Q或者q，退出程序。"""</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 自己版本</span>goods <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"电脑"</span><span class="token punctuation">,</span> <span class="token string">"price"</span><span class="token punctuation">:</span> <span class="token number">1999</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"鼠标"</span><span class="token punctuation">,</span> <span class="token string">"price"</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"游艇"</span><span class="token punctuation">,</span> <span class="token string">"price"</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"美女"</span><span class="token punctuation">,</span> <span class="token string">"price"</span><span class="token punctuation">:</span> <span class="token number">998</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token keyword">for</span> index <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>goods<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    v <span class="token operator">=</span> goods<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># dict_values(['电脑', 1999])</span>    list_v <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> list_v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> list_v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    user_input <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input a number,(Q/q) to quit: '</span><span class="token punctuation">)</span>  <span class="token comment"># 1</span>    <span class="token keyword">if</span> user_input<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'Q'</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> user_input<span class="token punctuation">.</span>isdecimal<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'input type error'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        target_index <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>user_input<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>        <span class="token keyword">if</span> target_index <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>goods<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'out of range'</span><span class="token punctuation">)</span>                    <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>goods<span class="token punctuation">[</span>target_index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> goods<span class="token punctuation">[</span>target_index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'price'</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 老师版本</span>goods <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"电脑"</span><span class="token punctuation">,</span> <span class="token string">"price"</span><span class="token punctuation">:</span> <span class="token number">1999</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"鼠标"</span><span class="token punctuation">,</span> <span class="token string">"price"</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"游艇"</span><span class="token punctuation">,</span> <span class="token string">"price"</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"美女"</span><span class="token punctuation">,</span> <span class="token string">"price"</span><span class="token punctuation">:</span> <span class="token number">998</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token keyword">for</span> index <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>goods<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> goods<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> goods<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'price'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    user_input <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input a number,(Q/q) to quit: '</span><span class="token punctuation">)</span>  <span class="token comment"># 1</span>    <span class="token comment"># 输入Q\q用户退出</span>    <span class="token keyword">if</span> user_input<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">'Q'</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    <span class="token comment"># 输入非数字退出</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> user_input<span class="token punctuation">.</span>isdecimal<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'input type error'</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>    <span class="token comment"># 超出范围退出</span>    <span class="token keyword">if</span> <span class="token builtin">int</span><span class="token punctuation">(</span>user_input<span class="token punctuation">)</span> <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>goods<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'out of range'</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>    target_index <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>user_input<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>goods<span class="token punctuation">[</span>target_index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> goods<span class="token punctuation">[</span>target_index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'price'</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre></li></ol><h1 id="八-、总结和考试"><a href="#八-、总结和考试" class="headerlink" title="八 、总结和考试"></a>八 、总结和考试</h1><p>​课程目标：对第一模块 “Python基础” 阶段的知识点进行总结和考试，让学员更好的掌握此模块的相关知识。</p><p>课程概要：</p><ul><li>代码规范</li><li>知识补充</li><li>阶段总结（思维导图）</li><li>考试题</li></ul><h2 id="1-代码规范"><a href="#1-代码规范" class="headerlink" title="1. 代码规范"></a>1. 代码规范</h2><p>​程序员写代码是有规范的，不只是实现功能而已。</p><h3 id="1-1-名称"><a href="#1-1-名称" class="headerlink" title="1.1 名称"></a>1.1 名称</h3><p>在Python开发过程中会创建文件夹&#x2F;文件&#x2F;变量等，这些在命名有一些潜规则（编写代码时也要注意pep8规范）。</p><ul><li><p>文件夹，小写 &amp; 小写下划线连接，例如：<code>commands</code>、<code>data_utils</code>等。</p></li><li><p>文件，小写 &amp; 小写下划线连接，例如：<code>page.py</code>、<code>db_convert.py</code>等。</p></li><li><p>变量</p><ul><li>全局变量，大写 &amp; 大写下划线连接，例如：<code>NAME = &quot;武沛齐&quot;</code> 、<code>BASE_NAME = 18</code></li><li>局部变量，小写 &amp; 小写下划线连接，例如：<code>data = [11,22,33]</code>、<code>user_parent_id = 9</code>等。</li></ul></li></ul><h3 id="1-2-注释"><a href="#1-2-注释" class="headerlink" title="1.2 注释"></a>1.2 注释</h3><p>作为程序员，写代码注释是非常基础且有用的技能，方便以后对代码进行维护和理解。</p><ul><li><p>文件夹<br><img src="/asserts/image-20201122135126441.png" alt="image-20201122135126441"></p></li><li><p>文件注释</p><pre class="language-python" data-language="python"><code class="language-python">除此<span class="token triple-quoted-string string">"""这个文件主要为项目提供工具和转换的功能，初次之外还有日志....例如：........."""</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre></li><li><p>代码注释</p><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"alex"</span><span class="token comment"># 在名称后面添加一个大烧饼</span>data <span class="token operator">=</span> name <span class="token operator">+</span> <span class="token string">"dsb"</span> <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"alex"</span><span class="token triple-quoted-string string">"""在名称后面添加一个大烧饼，内部的实现机制：1. xxx    2. xxx    3. xx"""</span>data <span class="token operator">=</span> name <span class="token operator">+</span> <span class="token string">"dsb"</span> <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></code></pre></li></ul><h3 id="1-3-todo"><a href="#1-3-todo" class="headerlink" title="1.3 todo"></a>1.3 todo</h3><p>基于注释可以实现todo注释的效果，例如：</p><img src="asserts/image-20201122112314543.png" alt="image-20201122112314543" style="zoom: 33%;float:left;" /><h3 id="1-4-条件嵌套"><a href="#1-4-条件嵌套" class="headerlink" title="1.4 条件嵌套"></a>1.4 条件嵌套</h3><p>以后写条件语句一定要想办法减少嵌套的层级（最好不要超过3层）。</p><img src="asserts/image-20201122112505721.png" alt="image-20201122112505721" style="zoom: 33%;float:left;" /><h3 id="1-5-简单逻辑先处理"><a href="#1-5-简单逻辑先处理" class="headerlink" title="1.5 简单逻辑先处理"></a>1.5 简单逻辑先处理</h3><p>示例1：</p><pre class="language-python" data-language="python"><code class="language-python">goods <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"电脑"</span><span class="token punctuation">,</span> <span class="token string">"price"</span><span class="token punctuation">:</span> <span class="token number">1999</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"鼠标"</span><span class="token punctuation">,</span> <span class="token string">"price"</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"游艇"</span><span class="token punctuation">,</span> <span class="token string">"price"</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"美女"</span><span class="token punctuation">,</span> <span class="token string">"price"</span><span class="token punctuation">:</span> <span class="token number">998</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token keyword">for</span> index <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>goods<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    item <span class="token operator">=</span> goods<span class="token punctuation">[</span>index<span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> item<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> item<span class="token punctuation">[</span><span class="token string">'price'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    num <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入要选择的商品序号(Q/q)："</span><span class="token punctuation">)</span>  <span class="token comment"># "1"</span>    <span class="token keyword">if</span> num<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"Q"</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    <span class="token keyword">if</span> num<span class="token punctuation">.</span>isdecimal<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token number">0</span> <span class="token operator">&lt;</span> num <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">:</span>            target_index <span class="token operator">=</span> num <span class="token operator">-</span> <span class="token number">1</span>            choice_item <span class="token operator">=</span> goods<span class="token punctuation">[</span>target_index<span class="token punctuation">]</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>choice_item<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> choice_item<span class="token punctuation">[</span><span class="token string">'price'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"序号范围选择错误"</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"用户输入的序号格式错误"</span><span class="token punctuation">)</span></code></pre><p>示例2：</p><pre class="language-python" data-language="python"><code class="language-python">goods <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"电脑"</span><span class="token punctuation">,</span> <span class="token string">"price"</span><span class="token punctuation">:</span> <span class="token number">1999</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"鼠标"</span><span class="token punctuation">,</span> <span class="token string">"price"</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"游艇"</span><span class="token punctuation">,</span> <span class="token string">"price"</span><span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"美女"</span><span class="token punctuation">,</span> <span class="token string">"price"</span><span class="token punctuation">:</span> <span class="token number">998</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token keyword">for</span> index <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>goods<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    item <span class="token operator">=</span> goods<span class="token punctuation">[</span>index<span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> item<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> item<span class="token punctuation">[</span><span class="token string">'price'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    num <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入要选择的商品序号(Q/q)："</span><span class="token punctuation">)</span>  <span class="token comment"># "1"</span>    <span class="token keyword">if</span> num<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">"Q"</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> num<span class="token punctuation">.</span>isdecimal<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"用输入的格式错误"</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>    num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>    <span class="token keyword">if</span> num <span class="token operator">></span> <span class="token number">4</span> <span class="token keyword">or</span> num <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"范围选择错误"</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>    target_index <span class="token operator">=</span> num <span class="token operator">-</span> <span class="token number">1</span>    choice_item <span class="token operator">=</span> goods<span class="token punctuation">[</span>target_index<span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>choice_item<span class="token punctuation">[</span><span class="token string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> choice_item<span class="token punctuation">[</span><span class="token string">'price'</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><h3 id="1-6-循环"><a href="#1-6-循环" class="headerlink" title="1.6 循环"></a>1.6 循环</h3><p>尽量少循环多干事，提高代码效率。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 效率更高，只循环了一次字典info</span>key_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>value_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'k1'</span><span class="token punctuation">:</span> <span class="token string">'v1'</span><span class="token punctuation">,</span> <span class="token string">'k2'</span><span class="token punctuation">:</span> <span class="token string">'v2'</span><span class="token punctuation">,</span> <span class="token string">'k3'</span><span class="token punctuation">:</span> <span class="token string">'v3'</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> info<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    key_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>key<span class="token punctuation">)</span>    value_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>value<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">info <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'k1'</span><span class="token punctuation">:</span> <span class="token string">'v1'</span><span class="token punctuation">,</span> <span class="token string">'k2'</span><span class="token punctuation">:</span> <span class="token string">'v2'</span><span class="token punctuation">,</span> <span class="token string">'k3'</span><span class="token punctuation">:</span> <span class="token string">'v3'</span><span class="token punctuation">&#125;</span>key_list <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>value_list <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h3 id="1-7-变量和值"><a href="#1-7-变量和值" class="headerlink" title="1.7 变量和值"></a>1.7 变量和值</h3><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 推荐</span>name <span class="token operator">=</span> <span class="token string">"武沛齐"</span>age <span class="token operator">=</span> <span class="token number">19</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 不推荐</span>name<span class="token operator">=</span><span class="token string">"武沛齐"</span>age<span class="token operator">=</span> <span class="token number">18</span></code></pre><p>可以基于Pycharm的格式化工具来实现自动处理。</p><p>python代码规范：PEP8规范。</p><h2 id="2-知识补充"><a href="#2-知识补充" class="headerlink" title="2.知识补充"></a>2.知识补充</h2><h3 id="2-1-pass"><a href="#2-1-pass" class="headerlink" title="2.1 pass"></a>2.1 pass</h3><p>​一般Python的代码块是基于 <code>:</code> 和<code>缩进</code>来实现，Python中规定代码块中必须要有代码才算完整，在没有代码的情况下为了<font color="#dd0000"><strong>保证语法的完整性</strong></font>可以用pass代替，例如：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 其他编程语言</span><span class="token keyword">if</span> 提交<span class="token punctuation">&#123;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> 条件 <span class="token punctuation">:</span>    <span class="token keyword">pass</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>xxx<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span></code></pre><h3 id="2-2-is-比较"><a href="#2-2-is-比较" class="headerlink" title="2.2 is 比较"></a>2.2 is 比较</h3><p><code>is</code> 和 <code>==</code>的区别是什么？</p><ul><li><code>==</code>，用于比较两个值是否相等。</li><li>is，用于表示内存地址是否一致。</li></ul><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 示例1</span>v1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>v2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span> v1 <span class="token operator">==</span> v2 <span class="token punctuation">)</span>  <span class="token comment"># True，两个值相当</span><span class="token keyword">print</span><span class="token punctuation">(</span> v1 <span class="token keyword">is</span> v2 <span class="token punctuation">)</span>  <span class="token comment"># False，不属于同一块内存。</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 示例2</span>v1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>v2 <span class="token operator">=</span> v1<span class="token keyword">print</span><span class="token punctuation">(</span> v1 <span class="token operator">==</span> v2 <span class="token punctuation">)</span>  <span class="token comment"># True，两个值相当</span><span class="token keyword">print</span><span class="token punctuation">(</span> v1 <span class="token keyword">is</span> v2 <span class="token punctuation">)</span>  <span class="token comment"># True，属于同一块内存。</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 示例3</span>v1 <span class="token operator">=</span> <span class="token boolean">None</span>v2 <span class="token operator">=</span> <span class="token boolean">None</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1 <span class="token operator">==</span> v2<span class="token punctuation">)</span>  <span class="token comment"># True，两个值相当</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1 <span class="token keyword">is</span> v2<span class="token punctuation">)</span>  <span class="token comment"># True，属于同一块内存。</span></code></pre><h3 id="2-3-位运算"><a href="#2-3-位运算" class="headerlink" title="2.3 位运算"></a>2.3 位运算</h3><p>计算机底层本质上都是二进制，我们平时在计算机中做的很多操作底层都会转换为二进制的操作，位运算就是对二进制的操作。</p><ul><li><p><code>&amp;</code>，与（都为1）</p><pre class="language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token number">60</span>            <span class="token comment"># 60 = 0011 1100 </span>b <span class="token operator">=</span> <span class="token number">13</span>            <span class="token comment"># 13 = 0000 1101 </span>c <span class="token operator">=</span> a <span class="token operator">&amp;</span> b         <span class="token comment"># 12 = 0000 1100</span></code></pre></li><li><p><code>|</code>，或（只要有一个为1）</p><pre class="language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token number">60</span>            <span class="token comment"># 60 = 0011 1100 </span>b <span class="token operator">=</span> <span class="token number">13</span>            <span class="token comment"># 13 = 0000 1101 </span>c <span class="token operator">=</span> a <span class="token operator">|</span> b         <span class="token comment"># 61 = 0011 1101 </span></code></pre></li><li><p><code>^</code>，异或（值不同）</p><pre class="language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token number">60</span>            <span class="token comment"># 60 = 0011 1100 </span>b <span class="token operator">=</span> <span class="token number">13</span>            <span class="token comment"># 13 = 0000 1101 </span>c <span class="token operator">=</span> a <span class="token operator">^</span> b         <span class="token comment"># 49 = 0011 0001 </span></code></pre></li><li><p><code>~</code>，取反</p><pre class="language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token number">60</span>            <span class="token comment">#  60 = 0011 1100 </span>c <span class="token operator">=</span> <span class="token operator">~</span>a<span class="token punctuation">;</span>           <span class="token comment"># -61 = 1100 0011</span></code></pre></li><li><p><code>&lt;&lt;</code>，左移动</p><pre class="language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token number">60</span>            <span class="token comment">#  60 = 0011 1100</span>c <span class="token operator">=</span> a <span class="token operator">&lt;&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span>       <span class="token comment"># 240 = 1111 0000</span></code></pre></li><li><p><code>&gt;&gt;</code>，右移动</p><pre class="language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token number">60</span>            <span class="token comment"># 60 = 0011 1101 </span>c <span class="token operator">=</span> a <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">;</span>       <span class="token comment"># 15 = 0000 1111</span></code></pre></li></ul><p>平时在开发中，二进制的位运算几乎很好少使用，在计算机底层 或 网络协议底层用的会比较多，例如：</p><ul><li><p>计算  2**n</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token number">2</span><span class="token operator">**</span><span class="token number">0</span>    <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">0</span>   <span class="token number">1</span>     <span class="token number">1</span><span class="token number">2</span><span class="token operator">**</span><span class="token number">1</span>    <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span>   <span class="token number">10</span>    <span class="token number">2</span><span class="token number">2</span><span class="token operator">**</span><span class="token number">2</span>    <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2</span>   <span class="token number">100</span>   <span class="token number">4</span><span class="token number">2</span><span class="token operator">**</span><span class="token number">3</span>    <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">3</span>   <span class="token number">1000</span>  <span class="token number">8</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre></li></ul><h4 id="面试题：计算一个数的一半"><a href="#面试题：计算一个数的一半" class="headerlink" title="面试题：计算一个数的一半"></a><font color="#dd0000"><strong>面试题：计算一个数的一半</strong></font></h4><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token number">10</span> <span class="token operator">>></span> <span class="token number">1</span> <span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span> <span class="token comment"># 值为5</span>v2 <span class="token operator">=</span> <span class="token number">20</span> <span class="token operator">>></span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span> <span class="token comment"># 值为 10</span></code></pre><ul><li><p>网络传输数据，文件太大还未传完（websocket源码为例）。</p><pre class="language-python" data-language="python"><code class="language-python">     第<span class="token number">1</span>个字节         第<span class="token number">2</span>个字节         <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span> <span class="token number">0</span> <span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">9</span> <span class="token number">0</span> <span class="token number">1</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">|</span>F<span class="token operator">|</span>R<span class="token operator">|</span>R<span class="token operator">|</span>R<span class="token operator">|</span> opcode<span class="token operator">|</span>M<span class="token operator">|</span> Payload <span class="token builtin">len</span> <span class="token operator">|</span>    Extended payload length    <span class="token operator">|</span><span class="token operator">|</span>I<span class="token operator">|</span>S<span class="token operator">|</span>S<span class="token operator">|</span>S<span class="token operator">|</span>  <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>  <span class="token operator">|</span>A<span class="token operator">|</span>     <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>     <span class="token operator">|</span>             <span class="token punctuation">(</span><span class="token number">16</span><span class="token operator">/</span><span class="token number">64</span><span class="token punctuation">)</span>           <span class="token operator">|</span><span class="token operator">|</span>N<span class="token operator">|</span>V<span class="token operator">|</span>V<span class="token operator">|</span>V<span class="token operator">|</span>       <span class="token operator">|</span>S<span class="token operator">|</span>             <span class="token operator">|</span>   <span class="token punctuation">(</span><span class="token keyword">if</span> payload <span class="token builtin">len</span><span class="token operator">==</span><span class="token number">126</span><span class="token operator">/</span><span class="token number">127</span><span class="token punctuation">)</span>   <span class="token operator">|</span><span class="token operator">|</span> <span class="token operator">|</span><span class="token number">1</span><span class="token operator">|</span><span class="token number">2</span><span class="token operator">|</span><span class="token number">3</span><span class="token operator">|</span>       <span class="token operator">|</span>K<span class="token operator">|</span>             <span class="token operator">|</span>                               <span class="token operator">|</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span> <span class="token operator">-</span> <span class="token operator">-</span> <span class="token operator">-</span> <span class="token operator">-</span> <span class="token operator">-</span> <span class="token operator">-</span> <span class="token operator">-</span> <span class="token operator">-</span> <span class="token operator">-</span> <span class="token operator">-</span> <span class="token operator">-</span> <span class="token operator">-</span> <span class="token operator">-</span> <span class="token operator">-</span> <span class="token operator">-</span> <span class="token operator">+</span>FIN位置是<span class="token number">0</span>，表示这是一部分数据，后续还有数据。FIN位置是<span class="token number">1</span>，表示这是最后数据，已发送完毕。</code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 例如：接收到的第一个字节的值为245（11110101），让v的二进制和 1000 0000 做 &amp; 与运算。</span>v <span class="token operator">=</span> <span class="token number">245</span>   <span class="token comment"># 245 11110101</span>          <span class="token comment"># 128 10000000</span>                <span class="token number">10000000</span>    data <span class="token operator">=</span> v <span class="token operator">&amp;</span> <span class="token number">128</span><span class="token keyword">if</span> data <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"还有数据"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"已完毕"</span><span class="token punctuation">)</span></code></pre></li></ul><h2 id="3-阶段总结"><a href="#3-阶段总结" class="headerlink" title="3.阶段总结"></a>3.阶段总结</h2><p>可使用思维导图（ xmind 软件），对阶段知识点的内容进行梳理，将知识梗概和重点写出来，也便于以后的回顾和复习。</p><p><img src="/asserts/image-20201122122813525.png" alt="image-20201122122813525"></p><h2 id="4-考试题"><a href="#4-考试题" class="headerlink" title="4.考试题"></a>4.考试题</h2><p>考试题的目的是让大家对自己近期知识点学习练习 以及 自测，请大家务必【独立】完成（切勿翻看笔记 &amp; 切勿网上搜索 ）。</p><ul><li><p>第一步：自己独立完成（闭卷）</p></li><li><p>第二步：做完之后，翻看自己笔记去修改和更正。</p></li><li><p>第三步：觉自己做的没问题了，最后再去看考试题的参考答案和讲解。</p></li></ul><p>详情见附件《第一阶段考试题.md》文件。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模块1--day1</title>
      <link href="/2022/05/20/Python%E6%A8%A1%E5%9D%97%E4%B8%80day1/"/>
      <url>/2022/05/20/Python%E6%A8%A1%E5%9D%97%E4%B8%80day1/</url>
      
        <content type="html"><![CDATA[<h4 id="此文章为路飞学院PYTHON课程模块一笔记"><a href="#此文章为路飞学院PYTHON课程模块一笔记" class="headerlink" title="此文章为路飞学院PYTHON课程模块一笔记"></a>此文章为路飞学院PYTHON课程<font color="#dd0000">模块一笔记</font></h4><span id="more"></span><h1 id="一、开篇"><a href="#一、开篇" class="headerlink" title="一、开篇"></a>一、开篇</h1><h2 id="（一）授课模式"><a href="#（一）授课模式" class="headerlink" title="（一）授课模式"></a>（一）授课模式</h2><div align=center><img src="https://img-blog.csdnimg.cn/5524d8bea9b140b7ab911ca5c024a9b5.png" width = 80%></div><h2 id="（二）学习方法"><a href="#（二）学习方法" class="headerlink" title="（二）学习方法"></a>（二）学习方法</h2><h4 id="严格训练、反复练习、疲劳战"><a href="#严格训练、反复练习、疲劳战" class="headerlink" title="严格训练、反复练习、疲劳战"></a>严格训练、反复练习、疲劳战</h4><p>&amp;emsp;&amp;emsp;学生完成</p><h4 id="激发积极性、快乐学习、梦想飞扬"><a href="#激发积极性、快乐学习、梦想飞扬" class="headerlink" title="激发积极性、快乐学习、梦想飞扬"></a>激发积极性、快乐学习、梦想飞扬</h4><p>&amp;emsp;&amp;emsp;老师激发学生兴趣</p><h4 id="学习方法"><a href="#学习方法" class="headerlink" title="学习方法"></a>学习方法</h4><ul><li><p>随堂笔记</p></li><li><p><font color="#dd0000"> 对比完成</font>课堂练习和作业</p></li><li><p>阶段总结&amp;思维导图</p></li><li><p>错题本</p></li><li><p>单词本</p></li></ul><h2 id="（三）笔记"><a href="#（三）笔记" class="headerlink" title="（三）笔记"></a>（三）笔记</h2><h3 id="1、下载Typora"><a href="#1、下载Typora" class="headerlink" title="1、下载Typora"></a>1、下载Typora</h3><p><img src="/asserts/image-20201011095314682.png" alt="image-20201011095314682"></p><h3 id="2、切换至大纲视图"><a href="#2、切换至大纲视图" class="headerlink" title="2、切换至大纲视图"></a>2、切换至大纲视图</h3><p><img src="/asserts/image-20220520192803560.png" alt="image-20220520192803560"></p><p><img src="/asserts/image-20220520192813266.png" alt="image-20220520192813266"></p><h3 id="3、Markdown语法"><a href="#3、Markdown语法" class="headerlink" title="3、Markdown语法"></a>3、Markdown语法</h3><h4 id="标题"><a href="#标题" class="headerlink" title="标题(#)"></a>标题(#)</h4><ul><li><p><code># 一级标题</code></p></li><li><p><code>## 二级标题</code></p></li><li><p><code>### 三级标题</code></p></li><li><p><code>共六级标题</code></p></li></ul><h4 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表(- )"></a>无序列表(- )</h4><ul><li><p><code>- 内容</code></p></li><li><p><code>- 内容</code></p></li><li><p><code>- 内容</code></p></li></ul><h4 id="有序列表-1"><a href="#有序列表-1" class="headerlink" title="有序列表(1. )"></a>有序列表(1. )</h4><ul><li><code>1. 内容</code></li><li><code>2. 内容</code></li><li>​    <code>- 内容</code></li><li>​    <code>- 内容</code> </li><li><code>3. 内容</code></li></ul><h3 id="引用-gt"><a href="#引用-gt" class="headerlink" title="引用(&gt; )"></a>引用(&gt; )</h3><blockquote><p><code> &gt; 计算机一门xx学科</code></p></blockquote><h3 id="插入代码"><a href="#插入代码" class="headerlink" title="插入代码"></a>插入代码</h3><pre class="language-python" data-language="python"><code class="language-python">```Python内容```</code></pre><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a><font color="#dd0000">图片</font></h3><pre><code>    想要在文档中显示图片时，可以通过 `![](图片路径)`来展示，但这种编写方式比较麻烦，因为需要自己录入图片的路径，所以一般不会这么写入图片，而是选择直接 复制图片 或 截图 直接粘贴到文档中，Typora可以自动帮助我们生成图片格式。</code></pre><p>​为了将文档中的管理文档中的图片，防止因为删除导致图片在文档中丢失，所以一般会在Typora中设置成将文档中的图片都复制到制定目录。</p><p>​在Typora中找到设置页面，并按照图片先进行如下设置：</p><img src="asserts/image-20220520194108838.png" alt="image-20220520194108838" style="zoom:80%;" /><p>​那些接下来就可以直接将图片粘贴到文档中且Typora自动将图片保存至文档根目录的 assets 文件夹中。</p><img src="asserts/image-20220520194208916.png" alt="image-20220520194208916" style="zoom: 80%;" /><h1 id="二、计算机基础和环境搭建"><a href="#二、计算机基础和环境搭建" class="headerlink" title="二、计算机基础和环境搭建"></a>二、计算机基础和环境搭建</h1><p>​课程目标：了解计算机基础知识并完成Python的环境搭建</p><h2 id="（一）计算机基础"><a href="#（一）计算机基础" class="headerlink" title="（一）计算机基础"></a>（一）计算机基础</h2><h4 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h4><ul><li><p>计算机的组成</p><pre class="language-none"><code class="language-none">计算机是由多个硬件组合而成，常见的硬件有：CPU、硬盘、内存、网卡、显示器、机箱、电源......</code></pre></li></ul><p>​<strong>注意事项：机械的将零件组合在一起，他们之间无法进行协作</strong></p><ul><li><p>操作系统</p><p>用于协调计算机的各个硬件，让硬件之间进行协调操作，已完成某个目标。</p><pre class="language-none"><code class="language-none">常见的操作系统分类- windows， 优点：生态牛逼、工具多；缺点：略慢、收费。[个人]- xp- win7- win10- ...- linux， 优点：资源占用少、免费（很多公式的服务器用linux）；缺点：工具少、告别游戏（不支持linux系统）[企业的服务器]- centos- ubantu- redhat- ...- mac， 优点：生态还行、工具差不多都有、用户体验和交互；缺点：不能玩游戏、</code></pre></li><li><p>软件（应用程序）</p><pre class="language-none"><code class="language-none">在安装完操作系统之后，我们会在自己的电脑上安装一些常用的电脑软件，例如：QQ，杀毒，微信...问题来了：这些软件是由谁开发的？是由各大公司的程序员开发的。以后的你肯定是写&#96;软件&#96;，可以把软件理解成为一大堆的代码（一篇文章）。</code></pre></li></ul><p><img src="/asserts/image-20220520201008629.png" alt="image-20220520201008629"></p><h4 id="编程语言"><a href="#编程语言" class="headerlink" title="编程语言"></a>编程语言</h4><p>​作文，是由小学生使用 汉语&#x2F;英语&#x2F;法语&#x2F;日语… 写出来一大堆的文字的集合。<font color="#dd0000">软件，是由程序员使用编程语言开发出来的一大堆代码的集合</font>。全球的编程语言有2500+多种，常见的编程语言：Java、C#、Python、PHP、C…</p><p>​本质上学习编程语言就是学习他的语法，根据语法再去编写相应的软件中的功能。</p><ul><li><p>Python语言中输出的语法规则</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我是Alex的二大爷"</span><span class="token punctuation">)</span></code></pre></li><li><p>Golang语言中的输出的语法规则</p><pre class="language-go" data-language="go"><code class="language-go">fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"我是Alex二大爷"</span><span class="token punctuation">)</span></code></pre></li></ul><h4 id="编译器-x2F-解释器"><a href="#编译器-x2F-解释器" class="headerlink" title="编译器&#x2F;解释器"></a>编译器&#x2F;解释器</h4><p>​编译器&#x2F;解释器，就是一个<code>翻译官</code>，将代码翻译成计算机能够识别的命令。</p><pre class="language-none"><code class="language-none">A使用Python开发了一个软件 1000              B使用Golang开发了一个软件 2000       Python解释器                        Golang编译器                    操    作    系    统               CPU    硬盘    网卡    内存    电源 .....</code></pre><p><img src="/asserts/image-20220520201406497.png" alt="image-20220520201406497"></p><p>​<font color="#dd0000"><strong>为什么有的叫解释器？有的叫编译器？</strong></font></p><ul><li><font color="#dd0000">解释器，实时翻译。</font>拿到1000行代码之后，解释一句交给操作系统一句(Python、PHP、JavaScript、Ruby…一般称为<font color="#dd0000">解释型语言</font>)。</li><li><font color="#dd0000">编译器，全文翻译。</font>拿到1000行代码之后会将他编译成一个临时文件（计算机能够识别命令），再把文件交给操作系统去读取(C、C++、Go、Java…一般称为<font color="#dd0000">编译型语言</font>)。</li></ul><h2 id="（二）学习编程的本质"><a href="#（二）学习编程的本质" class="headerlink" title="（二）学习编程的本质"></a>（二）学习编程的本质</h2><ul><li>选择一门编程语言，在自己的电脑上安装此编程语言相关的编译器&#x2F;解释器。</li><li>学习编程语言的语法规则，根据语法规则 + 业务背景 设计并开发你的软件（代码集合）。</li><li>使用 编译器&#x2F;解释器 去运行自己写的代码。</li></ul><h2 id="（三）Python介绍"><a href="#（三）Python介绍" class="headerlink" title="（三）Python介绍"></a>（三）Python介绍</h2><h4 id="语言的分类"><a href="#语言的分类" class="headerlink" title="语言的分类"></a>语言的分类</h4><ul><li><p><code>翻译</code>的维度</p><ul><li>解释型语言，Python、Ruby….</li><li>编译型语言，C、C++、Golang</li></ul></li><li><p><code>高低</code>的维度</p><ul><li><p>低级编程语言，写出来的代码直接可以被计算机识别。</p><pre class="language-none"><code class="language-none">机器语言，101 001 00001 00010 001000100010001，机器码，交给计算机去执行。汇编语言，MOV INC ... ，指令，交给计算机去执行。</code></pre></li><li><p>高级编程语言，写出来的代码无法直接被计算机识别，但可以通过某中方式将其转换为计算机可以识别的语言。</p><ul><li>&#96;&#96;&#96;<br>C、C++、Java、Python、Ruby…，这类编程语言在编写代码时几乎是写英语作文。<br>交由相关编译器或解释器翻译成机器码，然后再交给计算机去执行。</li></ul><p><strong>注意：现在基本上都使用高级编程语言。</strong></p></li></ul></li></ul><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><blockquote><p>Python的创始人为吉多·范罗苏姆（Guido van Rossum）。1989年的圣诞节期间，Guido开始写Python语言的编译器。Python这个名字，来自Guido所挚爱的电视剧Monty Python’s Flying Circus。他希望这个新的叫做Python的语言，能符合他的理想：创造一种C和shell之间，功能全面，易学易用，可拓展的语言。</p></blockquote><p>全球众多编程语言，为何Python可以脱颖而出成为业界炙手可热的编程语言？目前位居TIOBE排行榜第三名并且一直呈上升趋势。</p><p><img src="/asserts/image-20220520203519432.png" alt="image-20220520203519432"></p><p><img src="/asserts/image-20220520203526151.png" alt="image-20220520203526151"></p><p><strong>Python如此火爆的原因如下：</strong></p><ul><li><font color="#dd0000">语法简洁 &amp; 适合小白学习，</font>相比较于其他编程语言Python的学习成本非常低，甚至可以让其他行业的人快速掌握编程技能，通过编程提供工作效率，例如：Excel自动化办公、文件和文件夹的处理等。</li><li><font color="#dd0000">类库强大，</font>Python自诞生之初就任其自然生长，经过多年的发展，造就其在很多领域都是积累了很多方便的类库，自然也成为了运维自动化、数据分析、机器学习首选编程语言。</li><li><font color="#dd0000">开发效率极高，</font>结合Python语法精炼和类库齐全的特点，所以在使用Python进行开发时可以用更少的代码完成更多的功能，大大提升开发效率。例如：Python10行代码实现的功能，用其他语言可能需要100+行才能完成。</li></ul><h4 id="Python的解释器种类（了解）"><a href="#Python的解释器种类（了解）" class="headerlink" title="Python的解释器种类（了解）"></a>Python的解释器种类（了解）</h4><p>​由于Python太火了，所有就有很多的公司都开发了Python解释器（用来翻译python代码成为计算机能够识别的命令）。</p><ul><li><p>CPython【主流】，底层是由C语言开发出来的Python解释器。</p></li><li><p>Jython，是由Java语言开发出来的Python解释器，方便与让Python和Java代码做集成。</p></li><li><p>IronPython，是基于C#语言开发出来的Python解释器，方便与让Python和C#代码做集成。</p></li><li><p>RubyPython，…</p></li><li><p>PyPy，是对CPython的优化，他的执行效率提高了。引入编译器的功能，本质上将Python代码进行编译，再去执行编译后的代码。</p></li><li><p>…</p><p><strong>注意：常说的Python解释器默认指的就是CPython解释器。</strong></p></li></ul><p>​CPython的解释器主要有两大版本：</p><ul><li><p>2.x，目前最新的Python2.7.18。（2020后不再维护）</p><pre class="language-none"><code class="language-none">Being the last of the 2.x series, 2.7 received bugfix support until 2020. Support officially stopped January 1 2020, and 2.7.18 code freeze occurred on January 1 2020, but the final release occurred after that date.</code></pre></li><li><p>3.x，目前最新的3.9.0版本（授课）</p></li></ul><h2 id="（四）Python环境搭建"><a href="#（四）Python环境搭建" class="headerlink" title="（四）Python环境搭建"></a>（四）Python环境搭建</h2><ul><li>Python解释器，将程序员编写的python代码翻译成计算机能够识别的指令。<ul><li>主流CPython</li><li>3.9.0版本</li></ul></li><li>学习编程本质上的3件事<ul><li>安装 CPython 3.9.0版本解释器</li><li>学习Python语法并写代码</li><li>解释器去运行代码</li></ul></li></ul><h4 id="安装Python解释器（mac）"><a href="#安装Python解释器（mac）" class="headerlink" title="安装Python解释器（mac）"></a>安装Python解释器（mac）</h4><ul><li><p>去Python官网下载Python解释器（3.9.0版本）</p><pre class="language-none"><code class="language-none">https:&#x2F;&#x2F;www.python.org&#x2F;</code></pre></li><li><p>安装</p><pre class="language-none"><code class="language-none">默认Python解释器安装目录： &#x2F;Library&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.9有bin目录下有一个 python3.9 文件，他就是Python解释器的启动文件。解释器路径：&#x2F;Library&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.9&#x2F;bin&#x2F;python3.9 </code></pre></li><li><p>写一个简单的Python代码并且让解释器去运行。</p><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名:"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"欢迎使用NB系统："</span><span class="token punctuation">,</span>name<span class="token punctuation">)</span></code></pre><p>将文件保存在：文稿&#x2F;hello.py【&#x2F;Users&#x2F;wupeiqi&#x2F;Documents&#x2F;hello.py】</p><p>接下来要让解释器去运行代码文件：</p><pre class="language-none"><code class="language-none">- 打开终端- 在终端输入：解释器 代码文件  &#x2F;Library&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.9&#x2F;bin&#x2F;python3.9 &#x2F;Users&#x2F;wupeiqi&#x2F;Documents&#x2F;hello.py</code></pre></li><li><p>【补充】系统环境变量</p><pre class="language-none"><code class="language-none">- 假设你有30个Python文件要运行   &#x2F;Library&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.9&#x2F;bin&#x2F;python3.9 &#x2F;Users&#x2F;wupeiqi&#x2F;Documents&#x2F;hello1.py   ...   &#x2F;Library&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.9&#x2F;bin&#x2F;python3.9 &#x2F;Users&#x2F;wupeiqi&#x2F;Documents&#x2F;hello30.py- Python解释器的路径每次不用再写这么长。    - 将  &#x2F;Library&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.9&#x2F;bin 添加到系统的环境变量中。    - 以后再使用Python解释器去运行python代码时，就可以这样（Python会自动将环境变量中的安装目录和Python可执行文件进行拼接）：     python3.9 &#x2F;Users&#x2F;wupeiqi&#x2F;Documents&#x2F;hello1.py     ...     python3.9 &#x2F;Users&#x2F;wupeiqi&#x2F;Documents&#x2F;hello2.py- 如何将 &#x2F;Library&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.9&#x2F;bin 添加到系统的环境变量中 ？- 默认你不用添加，默认Python解释器在安装的过程中已经帮你添加了。- 自己手动想添加： - 打开用户目录的下的  .bash_profile 文件（.zprofile） - 在文件中写如下内容</code></pre><pre class="language-none"><code class="language-none"># Setting PATH for Python 3.9# The original version is saved in .zprofile.pysavePATH&#x3D;&quot;&#x2F;Library&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.9&#x2F;bin:$&#123;PATH&#125;&quot;export PATH</code></pre></li></ul><h4 id="安装Python解释器（win）"><a href="#安装Python解释器（win）" class="headerlink" title="安装Python解释器（win）"></a>安装Python解释器（win）</h4><ul><li><p>Python官网下载Python解释器</p><pre class="language-none"><code class="language-none">https:&#x2F;&#x2F;www.python.org&#x2F;downloads&#x2F;release&#x2F;python-390&#x2F;</code></pre></li><li><p>在自己电脑上进行安装</p><pre class="language-none"><code class="language-none">python解释器安装目录：C:\Python39python解释器的路径：C:\Python39\python.exe</code></pre></li><li><p>编写一个Python代码并交给Python解释器去运行</p><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"欢迎使用NB系统"</span><span class="token punctuation">,</span>name<span class="token punctuation">)</span></code></pre><p>并将文件保存在：Y:\hello.py</p><p>怎么让解释器去运行写好的代码文件呢？</p><pre class="language-none"><code class="language-none">- 打开终端- 在终端输入：解释器路径 代码路径</code></pre></li><li><p>优化配置（让以后操作Python解释器去运行代码时候更加方便）</p><pre class="language-none"><code class="language-none">- 写了30个Python代码，想要使用解释器去运行。    C:\Python39\python.exe Y:\hello1.py    C:\Python39\python.exe Y:\hello2.py    ...    C:\Python39\python.exe Y:\hello10.py- 然你以后可以方便的去运行代码，不用再写Python解释器所在的路径。       只要你将 C:\Python39 路径添加到系统的环境变量中。以后你在终端就可以（Python会自动将环境变量中的安装目录和Python可执行文件进行拼接）：        python.exe Y:\hello1.py        - 如何将 C:\Python39 添加到环境变量呢？【默认在解释器安装的时已自动添加到环境变量了】此电脑\右键属性\高级系统保护\高级\环境变量\用户变量\PATH\新建\加入python解释器路径重新打开终端</code></pre></li></ul><h4 id="安装Pycharm编辑器（mac"><a href="#安装Pycharm编辑器（mac" class="headerlink" title="安装Pycharm编辑器（mac)"></a>安装Pycharm编辑器（mac)</h4><ol><li><p>帮助我们快速编写代码，用Pycharm可以大大的提高咱们写代码的效率。 +  用解释器去运行代码。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"asdfasdf"</span><span class="token punctuation">)</span></code></pre></li></ol><ul><li>下载Pycharm</li></ul><pre class="language-none"><code class="language-none">https:&#x2F;&#x2F;www.jetbrains.com&#x2F;pycharm&#x2F;</code></pre><ul><li><p>安装</p></li><li><p>快速使用，写代码+运行代码</p></li><li><p>破解Pycharm（专业版）</p></li></ul><h4 id="安装Pycharm编辑器（win"><a href="#安装Pycharm编辑器（win" class="headerlink" title="安装Pycharm编辑器（win)"></a>安装Pycharm编辑器（win)</h4><ul><li><p>下载Pycharm</p><pre class="language-none"><code class="language-none">https:&#x2F;&#x2F;www.jetbrains.com&#x2F;pycharm&#x2F;download&#x2F;other.html</code></pre></li><li><p>安装</p></li><li><p>快速使用：编写代码 + 运行代码</p></li><li><p>破解Pycharm（专业版）</p></li></ul><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ol><li>了解硬件 &amp; 操作系统 &amp; 软件（应用系统）之间的关系。</li><li>了解常见的操作系统都有哪些。</li><li>了解编译器和解释器的区别和作用。</li><li>编程语言进行分类</li><li>了解Python解释器的种类</li><li>了解CPython解释器的版本</li><li>学会如何安装Python解释器。</li><li>了解什么环境变量的作用。</li><li>了解Python和Pycharm的区别。</li></ol><h4 id="作业"><a href="#作业" class="headerlink" title="作业"></a>作业</h4><ol><li><p>简述硬件 &amp; 操作系统 &amp; 软件（应用系统）之间的关系。</p><pre class="language-none"><code class="language-none">- 硬件是组成计算机的物理物理基础- 操作系统将硬件集成起来，通过将用户指令转化为计算机能够识别的命令，使各硬件之间交互起来- 软件是一堆代码，需要在操作系统上运行</code></pre></li><li><p>列举常见的操作系统都有哪些。</p><pre class="language-none"><code class="language-none">- windos 操作系统- linux 操作系统- mac 操作系统</code></pre></li><li><p>简述编译器和解释器的区别和作用。</p><pre class="language-none"><code class="language-none">解释器：实时翻译，读一行运行一行编译器：全文翻译，读完所有代码，将其翻译成一个临时文件，将零时文件交给操作系统</code></pre></li><li><p>编程语言进行分类</p><pre class="language-none"><code class="language-none">- 按翻译类型- 解释型：Python、Ruby- 翻译型：C、C++- 按高低级- 高级语言：C、C++、Java、Python、Ruby- 低级语言：机器语言和汇编语言</code></pre></li><li><p>Python解释器的种类有哪些？</p><pre class="language-none"><code class="language-none">- CPython：底层由C语言开发出来的解释器- PYPY：Cpython的优化版本，将Python进行编译后在执行，提高了运行效率- Jpthon：底层由Java语言开发出来的解释器，方便Python和Java的集成- IronPython：底层由C#语言开发出来的解释器，方便Python和C#的集成- RubyPython：底层由Ruby语言开发出来的解释器，方便Python和Ruby的集成...</code></pre></li><li><p>CPython解释器的版本有哪些？你现在用的是哪个版本？</p><pre class="language-none"><code class="language-none">大版本- 2.X- 3.X自己使用版本（3.9.0）</code></pre></li><li><p>系统环境变量的作用是什么？</p><pre class="language-none"><code class="language-none">1、在终端执行Python命令时，需要输入完整的Python解释器路径\python3.9 + .py文件完整路径，将Python解释器安装路径加入环境变量后，可直接输入python3.9 + .py文件完整路径2、当调用Python模块和变量时，Python解释器会自动在系统变量中进行查找，找不到就会报错</code></pre></li><li><p>Python和Pycharm的区别是什么？</p><pre class="language-none"><code class="language-none">Python是解释器，将python代码转化为计算机可以识别的命令Pycharm是IDE集成开发环境，方便开发者对于Python的使用，提高写代码和运行代码的效率</code></pre></li></ol><h1 id="三、快速上手"><a href="#三、快速上手" class="headerlink" title="三、快速上手"></a>三、快速上手</h1><p>​课程目标：学习Python最基础的语法知识，可以用代码快速实现一些简单的功能。</p><p>​课程概要：</p><ul><li>初识编码（密码本）</li><li>编程初体验</li><li>输出</li><li>初识数据类型</li><li>变量</li><li>注释</li><li>输入</li><li>条件语句</li></ul><h2 id="（一）编码（密码本）"><a href="#（一）编码（密码本）" class="headerlink" title="（一）编码（密码本）"></a>（一）编码（密码本）</h2><p><strong>计算机中所有的数据本质上都是以0和1的组合来存储</strong>。</p><p><img src="/asserts/image-20220521101214309.png" alt="image-20220521101214309"></p><p>​在计算机中会将中文内容（通过编码）转换成 01010101010… ，最终存储到硬盘上。</p><pre class="language-none"><code class="language-none">武     -&gt;      01111111 00011010 010110110沛     -&gt;      01001111 10010000 001110100齐     -&gt;      11111111 00000000 010101010</code></pre><p>​在计算机中有很多种编码。</p><pre class="language-none"><code class="language-none">每种编码都有自己的一套密码本，都维护这自己的一套规则，如：    utf-8编码：        武     -&gt;      01111111 00011010 010110110        沛     -&gt;      01001111 10010000 001110100        齐     -&gt;      11111111 00000000 010101010    gbk编码：        武     -&gt;      11111111 00000010        沛     -&gt;      01001111 01111111        齐     -&gt;      00110011 10101010所以，使用的不同的编码保存文件时，硬盘的文件中存储的0&#x2F;1也是不同的。</code></pre><p><strong>注意事项：以某个编码的形式进行保存文件，以后就要以这种编码去打开这个文件。否则就会出现乱码。</strong></p><pre class="language-none"><code class="language-none">UTF-8编码去保存武沛齐：01111111 00011010 010110110 01001111 10010000 001110100 11111111 00000000 010101010GBK编码形式去打开：乱码</code></pre><h2 id="（二）编程初体验"><a href="#（二）编程初体验" class="headerlink" title="（二）编程初体验"></a>（二）编程初体验</h2><ul><li><p><strong>编码必须要保持：保存和打开一致，否则会乱码。</strong></p></li><li><p>默认Python解释器是以UTF-8编码的形式打开文件。如果想要修改Python的默认解释器编码，可以这样干：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding:gbk -*-</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我是你二大爷"</span><span class="token punctuation">)</span></code></pre></li><li><p><strong>建议：所有Python代码文件的都要以UTF-8编码保存和读取。</strong></p><p><img src="/asserts/image-20220521101646801.png" alt="image-20220521101646801"></p></li></ul><h2 id="（三）输出"><a href="#（三）输出" class="headerlink" title="（三）输出"></a>（三）输出</h2><p>​将结果或内容想要呈现给用户。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"看着风景美如画"</span><span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"                                                            * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"                                                         * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"                                                      * * * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"                                                   * * * * * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"                                                * * * * * * * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"                                             * * * * * * * * * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"                                              * * * * * * * * * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"                                               * * * * * * * * * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"                                      * *       * * * * * * * * * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"                                   * * * *       * * * * * * * * * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"                                * * * * * *       * * * * * * * * * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"                             * * * * * * * *       * * * * * * * * * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"                          * * * * * * * * * *       * * * * * * * * * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"                       * * * * * * * * * * * *       * * * * * * * * * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"                        * * * * * * * * * * * *       * * * * * * * * * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"                         * * * * * * * * * * * *       * * * * * * * * * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"                * *       * * * * * * * * * * * *       * * * * * * * * * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"             * * * *       * * * * * * * * * * * *       * * * * * * * * * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"          * * * * * *       * * * * * * * * * * * *       * * * * * * * * * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"       * * * * * * * *       * * * * * * * * * * * *       * * * * * * * * * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"    * * * * * * * * * *       * * * * * * * * * * * *       * * * * * * * * * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">" * * * * * * * * * * * *       * * * * * * * * * * * *       * * * * * * * * * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"  * * * * * * * * * * * *       * * * * * * * * * * * *       * * * * * * * * * * * *  "</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"   * * * * * * * * * * * *       * * * * * * * * * * * *       * * * * * * * * * * * *  "</span><span class="token punctuation">)</span></code></pre><h4 id="关于输出："><a href="#关于输出：" class="headerlink" title="关于输出："></a>关于输出：</h4><ul><li><p>默认print在尾部会加换行符</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"看着风景美如画"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"本想吟诗增天下"</span><span class="token punctuation">)</span>输出：看着风景美如画本想吟诗增天下</code></pre></li><li><p>想要不换行，则可以这样干</p><pre class="language-none"><code class="language-none">print(&quot;看着风景美如画&quot;,end&#x3D;&quot;&quot;)print(&quot;本想吟诗增天下&quot;,end&#x3D;&quot;&quot;)输出：看着风景美如画本想吟诗增天下</code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"看着风景美如画"</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"本想吟诗增天下"</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">"."</span><span class="token punctuation">)</span>输出：看着风景美如画<span class="token punctuation">,</span>本想吟诗增天下<span class="token punctuation">.</span></code></pre></li></ul><h4 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h4><ol><li><p>使用print输出自己的姓名</p></li><li><p>使用print输出<br>春眠不觉晓，<br>出处闻啼鸟，<br>夜来风雨声，<br>花落知多少。</p></li><li><p>使用print输出<br>春眠不觉晓，出处闻啼鸟，夜来风雨声，花落知多少。</p></li></ol><h2 id="（四）初识数据类型"><a href="#（四）初识数据类型" class="headerlink" title="（四）初识数据类型"></a>（四）初识数据类型</h2><p>​刚上学时，老师教我们 数字 、拼音、汉字、真假判断 等，然后我们根据学到的内容写作文，老师来检查并打分。</p><p>​现在学编程，我教大家 int、str、bool 等，然后大家根据这些内容来写代码，写完代码交给Python解释器去运行。</p><h4 id="整型-int"><a href="#整型-int" class="headerlink" title="整型(int)"></a>整型(int)</h4><p>​整型（整数），其实就是以前数学课上讲的整数（不包含小数），在写代码时用于表示整数相关的东西，例如：年龄、存款、尺寸、手机号等。一般我们提到的：5、18、22、99、… 等整数 在Python中都称为是整型，且支持 <strong>加&#x2F;减&#x2F;乘&#x2F;除&#x2F;取余&#x2F;指数 等操作。</strong></p><h4 id="字符串（str）"><a href="#字符串（str）" class="headerlink" title="字符串（str）"></a>字符串（str）</h4><p>​字符串，其实就是我们生活中的文本信息。例如：姓名、地址、自我介绍等。<br>​字符串有一个特点，他必须由引号引起来，如：</p><h5 id="单行字符串"><a href="#单行字符串" class="headerlink" title="单行字符串"></a>单行字符串</h5><pre class="language-none"><code class="language-none">print(&quot;我是Alex&quot;)print(&#39;我是Alex&#39;)print(&#39;我是&quot;alex&#39;)print(&quot;中国北京昌平区&quot;)</code></pre><h5 id="多行字符串"><a href="#多行字符串" class="headerlink" title="多行字符串"></a>多行字符串</h5><pre class="language-none"><code class="language-none">print(&quot;&quot;&quot;中国北京昌平区sasasasasasasas&quot;&quot;&quot;)</code></pre><h5 id="对于字符串"><a href="#对于字符串" class="headerlink" title="对于字符串"></a>对于字符串</h5><ul><li><p>加，两个字符串可以通过加号拼接起来。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token string">"alex"</span> <span class="token operator">+</span> <span class="token string">"是金角大王吧"</span> <span class="token punctuation">)</span></code></pre></li><li><p>乘，让整形和字符串进行相乘，以实现让字符串重复出现N次并拼接起来。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token string">"我想吃饺子"</span><span class="token punctuation">)</span></code></pre></li></ul><h3 id="布尔类型（bool）"><a href="#布尔类型（bool）" class="headerlink" title="布尔类型（bool）"></a>布尔类型（bool）</h3><p>​布尔类型中共有两个值：True &#x2F; False</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">></span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token boolean">False</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token boolean">True</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入你的用户名:"</span><span class="token punctuation">)</span><span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">"alex"</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"用户登录成功"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"用户登录失败"</span><span class="token punctuation">)</span></code></pre><h5 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h5><pre class="language-python" data-language="python"><code class="language-python"><span class="token number">1</span> <span class="token operator">></span> <span class="token number">2</span> <span class="token number">1</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token string">"alex"</span> <span class="token operator">==</span> <span class="token string">"eric"</span><span class="token number">1</span> <span class="token operator">==</span> <span class="token string">"alex"</span><span class="token number">1</span> <span class="token operator">></span> <span class="token string">"alex"</span>  是无法进行比较大小</code></pre><h4 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h4><p>三句话搞定类型转换：</p><ul><li><p>其他所有类型转换为布尔类型时，除了 空字符串、0以为其他都是True。</p></li><li><p>字符串转整形时，只有那种 “988” 格式的字符串才可以转换为整形，其他都报错。</p></li><li><p>想要转换为那种类型，就用这类型的英文包裹一下就行。</p></li></ul><pre class="language-python" data-language="python"><code class="language-python"><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span></code></pre><h4 id="练习题-1"><a href="#练习题-1" class="headerlink" title="练习题"></a>练习题</h4><ol><li>计算整型50乘以10再除以5的商并使用print输出。</li><li>判断整型8是否大于10的结果并使用print输出。</li><li>计算整型30除以2得到的余数并使用print输出。</li><li>使用字符串乘法实现 把字符串”我爱我的祖国”创建三遍并拼接起来最终使用print输出。</li><li>判断 字符串”wupeiqi”和”alex”是否相等的结果并使用print输出。</li><li>判断 整型666和整型666是否相等的结果并使用print输出。</li><li>判断 字符串”666”和整型666是否相等的结果并使用print输出。</li><li>看代码写结果（禁止运行代码）：</li></ol><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">"100"</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">3</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">"88"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">222</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">3</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">"8"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">7</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">111</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token string">"你好"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token boolean">True</span> <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token boolean">True</span> <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">)</span></code></pre><p>​注意：类型转换不是改变原来值，实际在底层是新创建了一个值。例如有整数 6 ，然后使用 str(6) 转化了一下得到 “6”,实际上这个字符串”6”是依据整数6新创建的。</p><h2 id="五-变量"><a href="#五-变量" class="headerlink" title="(五) 变量"></a>(五) 变量</h2><p>​变量，其实就是我们生活中起别名和外号，让变量名指向某个值，格式为： 【变量名 &#x3D; 值】，以后可以通过变量名来操作其对应的值。</p><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"武沛齐"</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token comment"># 武沛齐</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">age <span class="token operator">=</span> <span class="token number">18</span>name <span class="token operator">=</span> <span class="token string">"alex"</span>flag <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">></span> <span class="token number">18</span>address <span class="token operator">=</span> <span class="token string">"北京昌平"</span> <span class="token operator">+</span> <span class="token string">"沙河"</span>addr <span class="token operator">=</span> <span class="token string">"北京昌平"</span> <span class="token operator">+</span> <span class="token string">"沙河"</span> <span class="token operator">+</span> name   <span class="token comment"># "北京昌平沙河alex"</span><span class="token keyword">print</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">age <span class="token operator">=</span> <span class="token number">18</span>number <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">==</span> <span class="token number">2</span></code></pre><p><strong>注意：Python中等号的称谓： <code>age = 18</code> 给变量age赋值18</strong></p><h4 id="变量名的规范"><a href="#变量名的规范" class="headerlink" title="变量名的规范"></a>变量名的规范</h4><h5 id="三个规范（只要有一条不满足就会报错）："><a href="#三个规范（只要有一条不满足就会报错）：" class="headerlink" title="三个规范（只要有一条不满足就会报错）："></a>三个规范（只要有一条不满足就会报错）：</h5><ul><li><p>变量名只能由 字母、数字、下划线 组成。</p></li><li><p>不能以数字开头</p><pre class="language-none"><code class="language-none">9name &#x3D; &quot;alex&quot;</code></pre></li><li><p>不能用Python内置的关键字（pycharm中橙黄色字体的字）</p><pre class="language-none"><code class="language-none">def &#x3D; &quot;alex&quot;break &#x3D; 123</code></pre><p><em>[‘and’, ‘as’, ‘assert’, ‘break’, ‘class’, ‘continue’, ‘def’, ‘del’, ‘elif’, ‘else’, ‘except’, ‘exec’, ‘finally’, ‘for’, ‘from’, ‘global’, ‘if’, ‘import’, ‘in’, ‘is’, ‘lambda’, ‘not’, ‘or’, ‘pass’, ‘print’, ‘raise’, ‘return’, ‘try’, ‘while’, ‘with’, ‘yield’]</em></p></li></ul><h5 id="两个建议："><a href="#两个建议：" class="headerlink" title="两个建议："></a>两个建议：</h5><ul><li><p>下划线连接命名（小写）</p><pre class="language-none"><code class="language-none">father_name &#x3D; &quot;wupeiqi&quot;brother_age &#x3D; 19</code></pre></li><li><p>见名知意</p><pre class="language-none"><code class="language-none">age &#x3D; 18color &#x3D; &quot;red&quot;current_user_name &#x3D; &quot;吉诺比利&quot;</code></pre></li></ul><h5 id="练习题：判断变量命名是否正确"><a href="#练习题：判断变量命名是否正确" class="headerlink" title="练习题：判断变量命名是否正确"></a>练习题：判断变量命名是否正确</h5><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"吉诺比利"</span>name0 <span class="token operator">=</span> <span class="token string">"帕克"</span>name_1 <span class="token operator">=</span> <span class="token string">"邓肯"</span>_coach <span class="token operator">=</span> <span class="token string">"波波维奇"</span>_ <span class="token operator">=</span> <span class="token string">"卡哇伊"</span>1_year <span class="token operator">=</span> <span class="token string">"1990"</span> <span class="token comment"># 错误</span>year_1_ <span class="token operator">=</span> <span class="token string">"1990"</span>_1_year <span class="token operator">=</span> <span class="token string">"1990"</span>nba<span class="token operator">-</span>team <span class="token operator">=</span> <span class="token string">"马刺"</span> <span class="token comment"># 错误</span>new<span class="token operator">*</span>name <span class="token operator">=</span> <span class="token string">"伦纳德"</span> <span class="token comment"># 错误</span></code></pre><h4 id="变量内存指向关系"><a href="#变量内存指向关系" class="headerlink" title="变量内存指向关系"></a>变量内存指向关系</h4><h3 id="变量内存指向关系-1"><a href="#变量内存指向关系-1" class="headerlink" title="变量内存指向关系"></a>变量内存指向关系</h3><p>​通过学习上述变量知识让我们对变量了有了初步认识，接下来我们就要从稍稍高级一些的角度来学习变量，即：内存指向（在电脑的内存中是怎么存储的）。</p><h5 id="情景一"><a href="#情景一" class="headerlink" title="情景一"></a>情景一</h5><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"wupeiqi"</span></code></pre><p>​在计算机的内存中创建一块区域保存字符串”wupeiqi”，name变量名则指向这块区域。</p><img src="asserts/image-20201011163312491.png" alt="image-20201011163312491" style="zoom:50%;" /><h5 id="情景二"><a href="#情景二" class="headerlink" title="情景二"></a>情景二</h5><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"wupeiqi"</span>name <span class="token operator">=</span> <span class="token string">"alex"</span></code></pre><p>​在计算机的内存中创建一块区域保存字符串”wupeiqi”，name变量名则指向这块区域。然后又再内存中创建了一块域保存字符串”alex”，name变量名则指向”alex”所在的区域，不再指向”wupeiqi”所在区域（无人指向的数据会被标记为垃圾，由解释器自动化回收）</p><img src="asserts/image-20201011163344305.png" alt="image-20201011163344305" style="zoom:50%;" /><h5 id="情景三"><a href="#情景三" class="headerlink" title="情景三"></a>情景三</h5><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"wupeiqi"</span>new_name <span class="token operator">=</span> name</code></pre><p>​在计算机的内存中创建一块区域保存字符串”wupeiqi”，name变量名则指向这块区域。new_name变量名指向name变量，因为被指向的是变量名，所以自动会转指向到name变量代表的内存区域。</p><img src="asserts/image-20201011163427166.png" alt="image-20201011163427166" style="zoom:50%;" /><h5 id="情景四"><a href="#情景四" class="headerlink" title="情景四"></a>情景四</h5><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"wupeiqi"</span>new_name <span class="token operator">=</span> namename <span class="token operator">=</span> <span class="token string">"alex"</span></code></pre><p>​在计算机的内存中创建一块区域保存字符串”wupeiqi”，name变量名则指向这块区域(灰色线)， 然后new_name指向name所指向的内存区域，最后又创建了一块区域存放”alex”，让name变量指向”alex”所在区域.</p><img src="asserts/image-20201011163503412.png" alt="image-20201011163503412" style="zoom:50%;" /><h5 id="情景五"><a href="#情景五" class="headerlink" title="情景五"></a>情景五</h5><pre class="language-python" data-language="python"><code class="language-python">num <span class="token operator">=</span> <span class="token number">18</span>age <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span></code></pre><p>​在计算机的内存中创建一块区域保存整型18，name变量名则指向这块区域。通过类型转换依据整型18再在内存中创建一个字符串”18”, age变量指向保存这个字符串的内存区域。</p><img src="asserts/image-20201011163528779.png" alt="image-20201011163528779" style="zoom:50%;" /><p>至此，关于变量的内存相关的说明已讲完，由于大家都是初学者，关于变量的内存管理目前只需了解以上知识点即可，更多关于内存管理、垃圾回收、驻留机制等问题在后面的课程中会讲解。</p><h5 id="练习题-2"><a href="#练习题-2" class="headerlink" title="练习题"></a>练习题</h5><ol><li><p>看代码结果</p><pre class="language-python" data-language="python"><code class="language-python">alex_length <span class="token operator">=</span> <span class="token number">3</span>wupeiqi_length <span class="token operator">=</span> <span class="token number">18</span>total <span class="token operator">=</span> alex_length <span class="token operator">+</span> wupeiqi_length<span class="token keyword">print</span><span class="token punctuation">(</span>total<span class="token punctuation">)</span>  <span class="token comment"># 21</span></code></pre></li><li><p>按要求写代码</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 假设age为小明的年龄</span>age <span class="token operator">=</span> <span class="token number">18</span><span class="token comment"># 问：已知小李比小明大3岁，计算小李年龄赋值给ming_age变量并输出。</span>ming_age <span class="token operator">=</span> age <span class="token operator">+</span> <span class="token number">3</span><span class="token keyword">print</span><span class="token punctuation">(</span>ming_age<span class="token punctuation">)</span><span class="token comment"># 问：已知大刘比小明和小李年龄的和还要大5岁，计算大刘的年龄赋值给liu_age变量并输入。</span>liu_age <span class="token operator">=</span> age <span class="token operator">+</span> ming_age <span class="token operator">+</span> <span class="token number">5</span><span class="token keyword">print</span><span class="token punctuation">(</span>liu_age<span class="token punctuation">)</span></code></pre></li><li><p>看代码写结果</p><pre class="language-python" data-language="python"><code class="language-python">nickname <span class="token operator">=</span> <span class="token string">"一米八大高个"</span>username <span class="token operator">=</span> nicknameusername <span class="token operator">=</span> <span class="token string">"弟弟"</span><span class="token keyword">print</span><span class="token punctuation">(</span>nickname<span class="token punctuation">)</span>  <span class="token comment"># "一米八大高个"</span><span class="token keyword">print</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span>  <span class="token comment"># "弟弟"</span></code></pre></li><li><p>看代码写结果</p><pre class="language-python" data-language="python"><code class="language-python">nickname <span class="token operator">=</span> <span class="token string">"一米八大高个"</span>username <span class="token operator">=</span> nicknamenickname <span class="token operator">=</span> <span class="token string">"弟弟"</span><span class="token keyword">print</span><span class="token punctuation">(</span>nickname<span class="token punctuation">)</span>  <span class="token comment"># "弟弟"</span><span class="token keyword">print</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span>  <span class="token comment"># "一米八大高个"</span></code></pre></li><li><p>看代码写结果</p><pre class="language-python" data-language="python"><code class="language-python">nickname <span class="token operator">=</span> <span class="token string">"一米八大高个"</span>username <span class="token operator">=</span> <span class="token string">""</span>text <span class="token operator">=</span> username <span class="token operator">+</span> nickname<span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>  <span class="token comment"># "一米八大高个"</span></code></pre></li><li><p>看代码写结果</p><pre class="language-python" data-language="python"><code class="language-python">nickname <span class="token operator">=</span> <span class="token string">"一米八大高个"</span>username <span class="token operator">=</span> nicknamenickname <span class="token operator">=</span> <span class="token string">"弟弟"</span>text <span class="token operator">=</span> username <span class="token operator">+</span> nickname<span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>  <span class="token comment"># "一米八大高个弟弟"</span></code></pre></li><li><p>看代码写结果</p><pre class="language-python" data-language="python"><code class="language-python">string_number <span class="token operator">=</span> <span class="token string">"20"</span>num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>string_number<span class="token punctuation">)</span>data <span class="token operator">=</span> string_number <span class="token operator">*</span> <span class="token number">3</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># "202020"</span>value <span class="token operator">=</span> num <span class="token operator">*</span> <span class="token number">3</span><span class="token keyword">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment"># 60</span></code></pre></li></ol><h2 id="（六）注释"><a href="#（六）注释" class="headerlink" title="（六）注释"></a>（六）注释</h2><p>​写代码时候，如果想要对某写内容进行注释处理，即：解释器忽略不会按照代码去运行。</p><ul><li><p>单行注释</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 声明一个name变量</span>name <span class="token operator">=</span> <span class="token string">"alex"</span>age <span class="token operator">=</span> <span class="token number">19</span> <span class="token comment"># 这表示当前用户的年龄</span>注意：快捷点 command <span class="token operator">+</span> ?  、   control <span class="token operator">+</span> ?</code></pre></li><li><p>多行注释</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 声明一个name变量</span><span class="token comment"># 声明一个name变量</span><span class="token comment"># 声明一个name变量</span>name <span class="token operator">=</span> <span class="token string">"alex"</span><span class="token triple-quoted-string string">"""多行注释内容多行注释内容多行注释内容"""</span>age <span class="token operator">=</span> <span class="token number">19</span></code></pre></li></ul><h2 id="（七）-输入"><a href="#（七）-输入" class="headerlink" title="（七） 输入"></a>（七） 输入</h2><p>​输入，可以实现程序和用户之间的交互。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 1. 右边 input("请输入用户名：") 是让用户输入内容。</span><span class="token comment"># 2. 将用户输入的内容赋值给name变量。</span>name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名："</span><span class="token punctuation">)</span><span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">"alex"</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"登录成功"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"登录失败"</span><span class="token punctuation">)</span></code></pre><p><strong>特别注意：用户输入的任何内容本质上都是<font color="#dd0000">字符串</font>。</strong></p><h5 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h5><ol><li><p>提示输入姓名，然后给姓名后面拼接一个“烧饼”，提示输入姓名，然后给姓名后面拼接一个“烧饼”，最终打印结果。</p><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名："</span><span class="token punctuation">)</span>text <span class="token operator">=</span> name <span class="token operator">+</span> <span class="token string">"烧饼"</span><span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span></code></pre></li><li><p>提示输入 姓名&#x2F;位置&#x2F;行为，然后做拼接并打印：xx 在 xx 做 xx 。</p><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名："</span><span class="token punctuation">)</span>address <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入位置："</span><span class="token punctuation">)</span>action <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入行为："</span><span class="token punctuation">)</span>text <span class="token operator">=</span> name <span class="token operator">+</span> <span class="token string">"在"</span> <span class="token operator">+</span> address <span class="token operator">+</span> action<span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span></code></pre></li><li><p>提示输入两个数字，计算两个数的和。</p><pre class="language-python" data-language="python"><code class="language-python">number1 <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入一个数字："</span><span class="token punctuation">)</span> <span class="token comment"># "1"</span>number2 <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入一个数字："</span><span class="token punctuation">)</span> <span class="token comment"># "2"</span>value <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>number1<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">int</span><span class="token punctuation">(</span>number2<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span></code></pre></li></ol><h2 id="（八）条件语句"><a href="#（八）条件语句" class="headerlink" title="（八）条件语句"></a>（八）条件语句</h2><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> 条件 <span class="token punctuation">:</span>    条件成立之后的代码<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    条件成立之后的代码<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    条件成立之后的代码<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">else</span><span class="token punctuation">:</span>    条件不成立之后执行的代码<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    条件不成立之后执行的代码<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    条件不成立之后执行的代码<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名:"</span><span class="token punctuation">)</span><span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">"alex"</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"sb"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"db"</span><span class="token punctuation">)</span></code></pre><p><strong>提醒：统一缩进问题<font color="#dd0000">（都是使用四个空格 &#x3D; tab）</font>。</strong></p><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名:"</span><span class="token punctuation">)</span><span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">"alex"</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"sb"</span><span class="token punctuation">)</span>   <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"sb"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"db"</span><span class="token punctuation">)</span></code></pre><h4 id="基本条件语句"><a href="#基本条件语句" class="headerlink" title="基本条件语句"></a>基本条件语句</h4><ul><li><p>示例1</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"开始"</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token boolean">True</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"456"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"结束"</span><span class="token punctuation">)</span><span class="token comment"># 输出结果</span>开始<span class="token number">123</span>结束</code></pre></li><li><p>示例2</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"开始"</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token number">5</span><span class="token operator">==</span><span class="token number">5</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"456"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"结束"</span><span class="token punctuation">)</span></code></pre></li><li><p>示例3</p><pre class="language-python" data-language="python"><code class="language-python">num <span class="token operator">=</span> <span class="token number">19</span><span class="token keyword">if</span> num <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"num变量对应值大于10"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"num变量对应值不大于10"</span><span class="token punctuation">)</span></code></pre></li><li><p>示例4</p><pre class="language-python" data-language="python"><code class="language-python">username <span class="token operator">=</span> <span class="token string">"wupeiqi"</span>password <span class="token operator">=</span> <span class="token string">"666"</span><span class="token keyword">if</span> username <span class="token operator">==</span> <span class="token string">"wupeiqi"</span> <span class="token keyword">and</span> password <span class="token operator">==</span> <span class="token string">"666"</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"恭喜你，登录成功"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"登录失败"</span><span class="token punctuation">)</span></code></pre></li><li><p>示例5</p><pre class="language-python" data-language="python"><code class="language-python">username <span class="token operator">=</span> <span class="token string">"wupeiqi"</span><span class="token keyword">if</span> username <span class="token operator">==</span> <span class="token string">"wupeiqi"</span> <span class="token keyword">or</span> username <span class="token operator">==</span> <span class="token string">"alex"</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"VIP大会员用户"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"普通用户"</span><span class="token punctuation">)</span></code></pre></li><li><p>示例6</p><pre class="language-python" data-language="python"><code class="language-python">number <span class="token operator">=</span> <span class="token number">19</span><span class="token keyword">if</span> number<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"number是奇数"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"number是偶数"</span><span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">number <span class="token operator">=</span> <span class="token number">19</span>data <span class="token operator">=</span> number<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token keyword">if</span> data<span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"number是奇数"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"number是偶数"</span><span class="token punctuation">)</span></code></pre></li><li><p>示例7</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> 条件<span class="token punctuation">:</span>  成立</code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"开始"</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token number">5</span> <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"5等于5"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"结束"</span><span class="token punctuation">)</span></code></pre></li></ul><h5 id="练习题-3"><a href="#练习题-3" class="headerlink" title="练习题"></a>练习题</h5><ol><li><p>提示用户输入用户名和密码，用户名等于”wupeiqi”且密码等于”uuu”就输出登录成功；否则输出登录失败。</p><pre class="language-python" data-language="python"><code class="language-python">user_name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input your username: '</span><span class="token punctuation">)</span>user_pwd <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input your password: '</span><span class="token punctuation">)</span><span class="token keyword">if</span> user_name <span class="token operator">==</span> <span class="token string">'wupeiqi'</span> <span class="token keyword">and</span> user_pwd <span class="token operator">==</span> <span class="token string">'uuu'</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'login successful'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'login failed'</span><span class="token punctuation">)</span></code></pre></li><li><p>猜数字，提示用户输入一个数字，判断数字如果大于10，就输出猜错了；否则输出猜对了。</p><pre class="language-python" data-language="python"><code class="language-python">guess_number <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please guess a number: '</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> guess_number <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'you are wrong'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'you are right'</span><span class="token punctuation">)</span></code></pre></li><li><p>提示用户输入一个数字，判断是否为偶数，是偶数则输出 偶偶偶数，否则输出 奇奇奇数。</p><pre class="language-python" data-language="python"><code class="language-python">input_number <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input a number: '</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token punctuation">(</span>input_number <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'your input is an even number'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'your input is an odd number'</span><span class="token punctuation">)</span></code></pre></li></ol><h4 id="多条件判断"><a href="#多条件判断" class="headerlink" title="多条件判断"></a>多条件判断</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> 条件A<span class="token punctuation">:</span>  A成立，执行此缩进中的所有代码  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">elif</span> 条件B<span class="token punctuation">:</span>  B成立，执行此缩进中的所有代码  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">elif</span> 条件C<span class="token punctuation">:</span>  C成立，执行此缩进中的所有代码  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">else</span><span class="token punctuation">:</span>  上述ABC都不成立。</code></pre><pre class="language-python" data-language="python"><code class="language-python">score <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入分数"</span><span class="token punctuation">)</span>data <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span><span class="token keyword">if</span> data <span class="token operator">></span> <span class="token number">90</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"优"</span><span class="token punctuation">)</span><span class="token keyword">elif</span> data <span class="token operator">></span> <span class="token number">80</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"良"</span><span class="token punctuation">)</span><span class="token keyword">elif</span> data <span class="token operator">></span> <span class="token number">70</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"中"</span><span class="token punctuation">)</span><span class="token keyword">elif</span> data <span class="token operator">></span> <span class="token number">60</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"差"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"不及格"</span><span class="token punctuation">)</span></code></pre><h4 id="条件嵌套"><a href="#条件嵌套" class="headerlink" title="条件嵌套"></a>条件嵌套</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> 条件A<span class="token punctuation">:</span>    <span class="token keyword">if</span> 条件A1<span class="token punctuation">:</span>        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token keyword">else</span>：       <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token keyword">elif</span> 条件B<span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre><h5 id="模拟10086客服"><a href="#模拟10086客服" class="headerlink" title="模拟10086客服"></a>模拟10086客服</h5><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"欢迎致电10086，我们提供了如下服务： 1.话费相关；2.业务办理；3.人工服务"</span><span class="token punctuation">)</span>choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请选择服务序号"</span><span class="token punctuation">)</span><span class="token keyword">if</span> choice <span class="token operator">==</span> <span class="token string">"1"</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"话费相关业务"</span><span class="token punctuation">)</span>    cost <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"查询话费请按1;交话费请按2"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> cost <span class="token operator">==</span> <span class="token string">"1"</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"查询话费余额为100"</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> cost <span class="token operator">==</span> <span class="token string">"2"</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"交互费"</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"输入错误"</span><span class="token punctuation">)</span><span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">"2"</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"业务办理"</span><span class="token punctuation">)</span><span class="token keyword">elif</span> choice <span class="token operator">==</span> <span class="token string">"3"</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"人工服务"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"序号输入错误"</span><span class="token punctuation">)</span></code></pre><h2 id="今日作业"><a href="#今日作业" class="headerlink" title="今日作业"></a>今日作业</h2><ol><li><p>谈谈你了解的编码以及为什么会出现乱码的现象？</p><pre class="language-none"><code class="language-none">- 编码    编码就是一个密码本，存储这文字和计算机能够识别的二级制(0101)之间的映射关系- 乱码    文件保存时所使用的编码和打开文件所用的编码不一致，就会导致乱码文件中的内容出现丢失时也会产生乱码</code></pre></li><li><p>Python解释器默认编码是什么？如何修改？</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">-</span> pycharm默认编码utf<span class="token operator">-</span><span class="token number">8</span><span class="token operator">-</span> 如何设置见图</code></pre><p><img src="/asserts/image-20220521163345655.png" alt="image-20220521163345655"></p></li><li><p>用print打印出下面内容：</p><pre class="language-none"><code class="language-none">⽂能提笔安天下,武能上⻢定乾坤.⼼存谋略何⼈胜,古今英雄唯是君。</code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'⽂能提笔安天下,'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'武能上⻢定乾坤.'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'⼼存谋略何⼈胜,'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'古今英雄唯是君。'</span><span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">text <span class="token operator">=</span> <span class="token triple-quoted-string string">'''⽂能提笔安天下,武能上⻢定乾坤.⼼存谋略何⼈胜,古今英雄唯是君。'''</span><span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span></code></pre></li><li><p>变量名的命名规范和建议？</p><pre class="language-none"><code class="language-none">- 命名规范1. 只能由字母、数字和下划线组成2. 不能以数字开头3. 不能使用解释器保留关键字- 建议1. 使用小写字母并用下划线连接 例如：user_name2. 变量名能表征其涵义 例如：age &#x3D; int(18) 好于 a &#x3D; int(18)</code></pre></li><li><p>如下哪个变量名是正确的？</p><pre class="language-pythonn" data-language="pythonn"><code class="language-pythonn">name &#x3D; &#39;武沛齐&#39;  # 正确_ &#x3D; &#39;alex&#39;  # 正确_9 &#x3D; &quot;老男孩&quot;  # 正确9name &#x3D; &quot;宝浪&quot;oldboy(edu &#x3D; 666</code></pre></li><li><p>设定一个理想数字比如：66，让用户输入数字，如果比66大，则显示猜测的结果大了；如果比66小，则显示猜测的结果小了;只有等于66，显示猜测结果正确。</p><pre class="language-python" data-language="python"><code class="language-python">right_number <span class="token operator">=</span> <span class="token number">66</span>guess_number <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input a number: '</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> guess_number <span class="token operator">></span> right_number<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'too large'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> guess_number <span class="token operator">&lt;</span> right_number<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'too small'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'you are correct'</span><span class="token punctuation">)</span></code></pre></li><li><p>提示⽤户输入 “爸爸” ，判断⽤户输入的对不对。如果对, 提示真聪明, 如果不对, 提示你是傻逼么。</p><pre class="language-python" data-language="python"><code class="language-python">user_input <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input "爸爸": '</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> user_input <span class="token operator">==</span> <span class="token string">'爸爸'</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'you are correct'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'you are wrong'</span><span class="token punctuation">)</span></code></pre></li><li><p>写程序，成绩有ABCDE5个等级，与分数的对应关系如下.要求用户输入0-100的数字后，你能正确打印他的对应成绩等级.</p><pre class="language-python" data-language="python"><code class="language-python">A    <span class="token number">90</span><span class="token operator">-</span><span class="token number">100</span>B    <span class="token number">80</span><span class="token operator">-</span><span class="token number">89</span>C    <span class="token number">60</span><span class="token operator">-</span><span class="token number">79</span>D    <span class="token number">40</span><span class="token operator">-</span><span class="token number">59</span>E    <span class="token number">0</span><span class="token operator">-</span><span class="token number">39</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">score <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input your score: '</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token number">90</span> <span class="token operator">&lt;=</span> score <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> <span class="token number">80</span> <span class="token operator">&lt;=</span> score <span class="token operator">&lt;</span> <span class="token number">90</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'B'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> <span class="token number">60</span> <span class="token operator">&lt;=</span> score <span class="token operator">&lt;</span> <span class="token number">80</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'C'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> <span class="token number">40</span> <span class="token operator">&lt;=</span> score <span class="token operator">&lt;</span> <span class="token number">60</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'D'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> <span class="token number">0</span> <span class="token operator">&lt;=</span> score <span class="token operator">&lt;</span> <span class="token number">40</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'E'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'out of range'</span><span class="token punctuation">)</span></code></pre></li></ol><h1 id="四、python基础"><a href="#四、python基础" class="headerlink" title="四、python基础"></a>四、python基础</h1><p>课程目标：掌握Python基础中的必备语法知识。</p><p>课程概要：</p><ul><li>循环语句</li><li>字符串格式化</li><li>运算符（面试题）</li></ul><h2 id="1-循环语句"><a href="#1-循环语句" class="headerlink" title="1. 循环语句"></a>1. 循环语句</h2><ul><li><p>while循环</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">while</span> 条件<span class="token punctuation">:</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre></li><li><p>for循环（后期）</p></li></ul><h3 id="1-1-循环语句基本使用"><a href="#1-1-循环语句基本使用" class="headerlink" title="1.1 循环语句基本使用"></a>1.1 循环语句基本使用</h3><p>示例1：死循环</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"开始"</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Alex是个小都比"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"结束"</span><span class="token punctuation">)</span><span class="token comment"># 输出：</span>开始Alex是个小都比Alex是个小都比Alex是个小都比Alex是个小都比<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre><p>示例2：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"开始"</span><span class="token punctuation">)</span>flag <span class="token operator">=</span> <span class="token boolean">True</span><span class="token keyword">while</span> flag<span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"滚滚黄河，滔滔长江。"</span><span class="token punctuation">)</span>flag <span class="token operator">=</span> <span class="token boolean">False</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"结束"</span><span class="token punctuation">)</span><span class="token comment"># 输出：</span>开始滚滚黄河，滔滔长江。结束</code></pre><p>示例3：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"开始"</span><span class="token punctuation">)</span>num <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">while</span> num <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"给我生命，给我力量。"</span><span class="token punctuation">)</span>num <span class="token operator">=</span> num <span class="token operator">+</span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"结束"</span><span class="token punctuation">)</span><span class="token comment"># 输出：</span>开始给我生命，给我力量。给我生命，给我力量。给我生命，给我力量。给我生命，给我力量。结束</code></pre><h4 id="练习题：重复3次输出我爱我的祖国。"><a href="#练习题：重复3次输出我爱我的祖国。" class="headerlink" title="练习题：重复3次输出我爱我的祖国。"></a>练习题：重复3次输出我爱我的祖国。</h4><pre class="language-python" data-language="python"><code class="language-python">num <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> num <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"我爱我的祖国"</span><span class="token punctuation">)</span>num <span class="token operator">=</span> num <span class="token operator">+</span> <span class="token number">1</span><span class="token comment"># 输出：</span>我爱我的祖国我爱我的祖国我爱我的祖国</code></pre><h3 id="1-2-综合小案例"><a href="#1-2-综合小案例" class="headerlink" title="1.2 综合小案例"></a>1.2 综合小案例</h3><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 请实现一个用户登录系统，如果密码错误则反复提示让用户重新输入，直到输入正确才停止。</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"开始运行路飞系统"</span><span class="token punctuation">)</span>flag <span class="token operator">=</span> <span class="token boolean">True</span><span class="token keyword">while</span> flag<span class="token punctuation">:</span>    user <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名："</span><span class="token punctuation">)</span>    pwd <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入密码："</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> user <span class="token operator">==</span> <span class="token string">"wupeiqi"</span> <span class="token keyword">and</span> pwd <span class="token operator">==</span> <span class="token string">"luffy"</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"登录成功"</span><span class="token punctuation">)</span>        flag <span class="token operator">=</span> <span class="token boolean">False</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"用户名或密码错误"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"系统结束"</span><span class="token punctuation">)</span></code></pre><h4 id="练习题-补充代码实现猜数字"><a href="#练习题-补充代码实现猜数字" class="headerlink" title="练习题-补充代码实现猜数字"></a>练习题-补充代码实现猜数字</h4><ol><li><p>设定一个理想数字比如：66，一直提示让用户输入数字，如果比66大，则显示猜测的结果大了；如果比66小，则显示猜测的结果小了;只有输入等于66，显示猜测结果正确，然后退出循环。</p><pre class="language-python" data-language="python"><code class="language-python">right_number <span class="token operator">=</span> <span class="token number">66</span>flag <span class="token operator">=</span> <span class="token boolean">True</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'guess number program start'</span><span class="token punctuation">)</span><span class="token keyword">while</span> flag<span class="token punctuation">:</span>    guess_num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please guess a number: '</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> guess_num <span class="token operator">==</span> right_number<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'congratulations on your guess'</span><span class="token punctuation">)</span>        flag <span class="token operator">=</span> <span class="token boolean">False</span>    <span class="token keyword">elif</span> guess_num <span class="token operator">></span> right_number<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'your guess is too large'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'your guess is too small'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'exit the program'</span><span class="token punctuation">)</span></code></pre></li><li><p>使用循环输出1~100所有整数。</p><pre class="language-python" data-language="python"><code class="language-python">num <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> num <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">:</span>    num <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span></code></pre></li><li><p>使用循环输出 1 2 3 4 5 6   8 9 10，即：10以内除7以外的整数。</p><pre class="language-python" data-language="python"><code class="language-python">num <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> num <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">:</span>    num <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">if</span> num <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">:</span>  <span class="token comment"># 当num = 7时再对num+1后，再进行打印</span>        num <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">num <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> num <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">:</span>    num <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">if</span> num <span class="token operator">!=</span> <span class="token number">7</span><span class="token punctuation">:</span>          <span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span></code></pre></li><li><p>输出 1~100 内的所有奇数。</p><pre class="language-python" data-language="python"><code class="language-python">num <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> num <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">:</span>    num <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">if</span> num <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span></code></pre></li><li><p>输出 1~100 内的所有偶数。</p><pre class="language-python" data-language="python"><code class="language-python">num <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> num <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">:</span>    num <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">if</span> num <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span></code></pre></li><li><p>求 1~100 的所有整数的和。</p><pre class="language-python" data-language="python"><code class="language-python">num <span class="token operator">=</span> <span class="token number">0</span>sum_num <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> num <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">:</span>    num <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token builtin">sum</span> <span class="token operator">+=</span> num<span class="token keyword">print</span><span class="token punctuation">(</span>sum_num<span class="token punctuation">)</span></code></pre></li><li><p>输出10 ~ 1 所有整数。</p><pre class="language-python" data-language="python"><code class="language-python">num <span class="token operator">=</span> <span class="token number">10</span><span class="token keyword">while</span> num <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>    num <span class="token operator">-=</span> <span class="token number">1</span></code></pre></li><li><p>求1-100内1-2+3…的和</p><pre class="language-python" data-language="python"><code class="language-python">num <span class="token operator">=</span> <span class="token number">1</span>sum_num <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> num <span class="token operator">&lt;</span> <span class="token number">101</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> num <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        sum_num <span class="token operator">+=</span> num    <span class="token keyword">else</span><span class="token punctuation">:</span>        sum_num <span class="token operator">-=</span> num    num <span class="token operator">+=</span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span>sum_num<span class="token punctuation">)</span></code></pre></li></ol><h3 id="1-3-break"><a href="#1-3-break" class="headerlink" title="1.3 break"></a>1.3 break</h3><p>​break，用于在while循环中帮你<font color="#dd0000">终止循环。</font>通过示例来更深入理解break的应用。</p><p>示例1：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"开始"</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"红旗飘飘，军号响。"</span><span class="token punctuation">)</span><span class="token keyword">break</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"剑已出鞘，雷鸣电闪。"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"从来都是狭路相逢勇者胜。"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"结束"</span><span class="token punctuation">)</span></code></pre><p>示例2：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"开始运行系统"</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>user <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入用户名："</span><span class="token punctuation">)</span>pwd <span class="token operator">=</span>  <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入密码："</span><span class="token punctuation">)</span><span class="token keyword">if</span> user <span class="token operator">==</span> <span class="token string">'wupeiqi'</span> <span class="token keyword">and</span> pwd <span class="token operator">=</span> <span class="token string">"oldboy"</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"登录成功"</span><span class="token punctuation">)</span><span class="token keyword">break</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"用户名或密码错误，请重新登录"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"系统结束"</span><span class="token punctuation">)</span><span class="token comment"># 输出</span>开始运行系统<span class="token operator">>></span><span class="token operator">></span> 用户名<span class="token operator">>></span><span class="token operator">></span> 密码正确，登录成功系统结束不正确，一直循环输出</code></pre><p>​<strong>所以，以后写代码时候，想要<font color="#dd0000">结束循环可以通过两种方式实现了，即：条件判断 和 break关键字，两种在使用时无好坏之分，只要能实现功能就行。</font></strong></p><h3 id="1-4-continue"><a href="#1-4-continue" class="headerlink" title="1.4 continue"></a>1.4 continue</h3><p>​continue，在循环中用于 <font color="#dd0000">结束本次循环，开始下一次循环。</font></p><p>示例1：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"开始"</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"红旗飘飘，军号响。"</span><span class="token punctuation">)</span><span class="token keyword">continue</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"剑已出鞘，雷鸣电闪。"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"从来都是狭路相逢勇者胜。"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"结束"</span><span class="token punctuation">)</span><span class="token comment"># 输出</span>开始红旗飘飘，军号响。红旗飘飘，军号响。红旗飘飘，军号响。红旗飘飘，军号响。<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre><p>示例2：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"开始"</span><span class="token punctuation">)</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token number">101</span><span class="token punctuation">:</span><span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">:</span>i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token keyword">continue</span><span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"结束"</span><span class="token punctuation">)</span><span class="token comment"># 输出</span>开始<span class="token number">1</span><span class="token number">2</span><span class="token number">3</span><span class="token number">4</span><span class="token number">5</span><span class="token number">6</span><span class="token number">8</span><span class="token number">9</span><span class="token number">10</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token number">100</span>结束</code></pre><p>​写在最后，对于break和continue都是放在循环语句中用于控制循环过程的，一旦遇到break就停止所有循环，一旦遇到continue就停止本次循环，开始下次循环。</p><p>​当然，通过如果没有了break和continue，我们用while条件的判断以及其他协助也能完成很多功能，有了break和continue可以在一定程度上简化我们的代码逻辑。</p><h3 id="1-5-while-else-while结束后打印提示语"><a href="#1-5-while-else-while结束后打印提示语" class="headerlink" title="1.5 while else(while结束后打印提示语)"></a>1.5 while else(while结束后打印提示语)</h3><p>​当while后的条件不成立时，else中的代码就会执行。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">while</span> <span class="token boolean">False</span><span class="token punctuation">:</span>  <span class="token keyword">pass</span><span class="token keyword">else</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">num <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">while</span> num <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>  num <span class="token operator">=</span> num <span class="token operator">+</span> <span class="token number">1</span><span class="token keyword">else</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'循环结束'</span><span class="token punctuation">)</span><span class="token comment"># 输出 </span><span class="token number">1</span><span class="token number">2</span><span class="token number">3</span><span class="token number">4</span>循环结束</code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token keyword">break</span><span class="token keyword">else</span><span class="token punctuation">:</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'循环结束'</span><span class="token punctuation">)</span>  <span class="token comment"># break会终止循环，不会走到else</span><span class="token comment"># 输出</span><span class="token number">123</span></code></pre><h2 id="2-字符串格式化"><a href="#2-字符串格式化" class="headerlink" title="2.字符串格式化"></a>2.字符串格式化</h2><p>​字符串格式化，使用<font color="#dd0000">更便捷的形式实现字符串的拼接。</font></p><h3 id="2-1"><a href="#2-1" class="headerlink" title="2.1 %"></a>2.1 %</h3><h4 id="2-1-1-基本格式化操作"><a href="#2-1-1-基本格式化操作" class="headerlink" title="2.1.1 基本格式化操作"></a>2.1.1 基本格式化操作</h4><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"武沛齐"</span><span class="token comment"># %s占位符</span><span class="token comment"># text = "我叫%s，今年18岁" %"武沛齐"</span>text <span class="token operator">=</span> <span class="token string">"我叫%s，今年18岁"</span> <span class="token operator">%</span>name</code></pre><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"武沛齐"</span>age <span class="token operator">=</span> <span class="token number">18</span><span class="token comment"># text = "我叫%s，今年%s岁" %("武沛齐",18)</span>text <span class="token operator">=</span> <span class="token string">"我叫%s，今年%d岁"</span> <span class="token operator">%</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">text <span class="token operator">=</span> <span class="token string">"我叫%s，今年%d岁"</span>  <span class="token comment"># 模板</span>data1 <span class="token operator">=</span> text <span class="token operator">%</span><span class="token punctuation">(</span><span class="token string">"武沛齐"</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span>data2 <span class="token operator">=</span> text <span class="token operator">%</span><span class="token punctuation">(</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">)</span></code></pre><p><a href="https://www.cnblogs.com/wupeiqi/articles/5484747.html">各种百分号</a></p><pre class="language-python" data-language="python"><code class="language-python">message <span class="token operator">=</span> <span class="token string">"%(name)s你什么时候过来呀？%(user)s今天不在呀。"</span> <span class="token operator">%</span> <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"死鬼"</span><span class="token punctuation">,</span> <span class="token string">"user"</span><span class="token punctuation">:</span> <span class="token string">"李杰"</span><span class="token punctuation">&#125;</span><span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span></code></pre><h4 id="2-1-2-百分比"><a href="#2-1-2-百分比" class="headerlink" title="2.1.2 百分比"></a>2.1.2 百分比</h4><pre class="language-python" data-language="python"><code class="language-python">text <span class="token operator">=</span> <span class="token string">"%s，这个片我已经下载了90%%了，居然特么的断网了"</span> <span class="token operator">%</span><span class="token string">"兄弟"</span><span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token comment"># 输出：</span>兄弟，这个片我已经下载了<span class="token number">90</span><span class="token operator">%</span>了，居然特么的断网了</code></pre><p><font color="#dd0000">一旦字符串格式化中存现百分比的显示，请一定要呀加 %% 以实现输出 %。</font></p><h3 id="2-2-format（推荐）"><a href="#2-2-format（推荐）" class="headerlink" title="2.2 format（推荐）"></a>2.2 format（推荐）</h3><pre class="language-python" data-language="python"><code class="language-python">text <span class="token operator">=</span> <span class="token string">"我叫&#123;0&#125;，今年18岁"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">"武沛齐"</span><span class="token punctuation">)</span>text <span class="token operator">=</span> <span class="token string">"我叫&#123;0&#125;，今年&#123;1&#125;岁"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">"武沛齐"</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span>text <span class="token operator">=</span> <span class="token string">"我叫&#123;0&#125;，今年&#123;1&#125;岁，真实的姓名是&#123;0&#125;。"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">"武沛齐"</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">text <span class="token operator">=</span> <span class="token string">"我叫&#123;&#125;，今年18岁"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">"武沛齐"</span><span class="token punctuation">)</span>text <span class="token operator">=</span> <span class="token string">"我叫&#123;&#125;，今年&#123;&#125;岁"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">"武沛齐"</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span>text <span class="token operator">=</span> <span class="token string">"我叫&#123;&#125;，今年&#123;&#125;岁，真实的姓名是&#123;&#125;。"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">"武沛齐"</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">"武沛齐"</span><span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">text <span class="token operator">=</span> <span class="token string">"我叫&#123;n1&#125;，今年18岁"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>n1<span class="token operator">=</span><span class="token string">"武沛齐"</span><span class="token punctuation">)</span>text <span class="token operator">=</span> <span class="token string">"我叫&#123;n1&#125;，今年&#123;age&#125;岁"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>n1<span class="token operator">=</span><span class="token string">"武沛齐"</span><span class="token punctuation">,</span>age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>text <span class="token operator">=</span> <span class="token string">"我叫&#123;n1&#125;，今年&#123;age&#125;岁，真实的姓名是&#123;n1&#125;。"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>n1<span class="token operator">=</span><span class="token string">"武沛齐"</span><span class="token punctuation">,</span>age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">text <span class="token operator">=</span> <span class="token string">"我叫&#123;0&#125;，今年&#123;1&#125;岁"</span>  <span class="token comment"># 模板</span>data1 <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">"武沛齐"</span><span class="token punctuation">,</span><span class="token number">666</span><span class="token punctuation">)</span>data2 <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">"alex"</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span></code></pre><h3 id="2-3-f"><a href="#2-3-f" class="headerlink" title="2.3 f"></a>2.3 f</h3><p>​到Python3.6版本，更便捷，<font color="#dd0000">不支持Python3.6之前版本，包括Python2。</font></p><pre class="language-python" data-language="python"><code class="language-python">action <span class="token operator">=</span> <span class="token string">"跑步"</span>text <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"嫂子喜欢</span><span class="token interpolation"><span class="token punctuation">&#123;</span>action<span class="token punctuation">&#125;</span></span><span class="token string">，跑完之后满身大汗"</span></span></code></pre><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"喵喵"</span>age <span class="token operator">=</span> <span class="token number">19</span>text <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"嫂子的名字叫</span><span class="token interpolation"><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span></span><span class="token string">，今年</span><span class="token interpolation"><span class="token punctuation">&#123;</span>age<span class="token punctuation">&#125;</span></span><span class="token string">岁"</span></span><span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">text <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"嫂子的名字叫喵喵，今年</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token number">19</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">&#125;</span></span><span class="token string">岁"</span></span><span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span></code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 在Python3.8引入</span>text <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"嫂子的名字叫喵喵，今年</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token number">19</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token operator">=</span><span class="token punctuation">&#125;</span></span><span class="token string">岁"</span></span><span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token comment"># 输出</span>嫂子的名字叫喵喵，今年<span class="token number">19</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token operator">=</span><span class="token number">21</span>岁</code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 进制转换</span>v1 <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"嫂子今年</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token number">22</span><span class="token punctuation">&#125;</span></span><span class="token string">岁"</span></span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span>v2 <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"嫂子今年</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token number">22</span><span class="token punctuation">:</span><span class="token format-spec">#b</span><span class="token punctuation">&#125;</span></span><span class="token string">岁"</span></span><span class="token keyword">print</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span>v3 <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"嫂子今年</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token number">22</span><span class="token punctuation">:</span><span class="token format-spec">#o</span><span class="token punctuation">&#125;</span></span><span class="token string">岁"</span></span><span class="token keyword">print</span><span class="token punctuation">(</span>v3<span class="token punctuation">)</span>v4 <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"嫂子今年</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token number">22</span><span class="token punctuation">:</span><span class="token format-spec">#x</span><span class="token punctuation">&#125;</span></span><span class="token string">岁"</span></span><span class="token keyword">print</span><span class="token punctuation">(</span>v4<span class="token punctuation">)</span><span class="token comment"># 输出</span>嫂子今年<span class="token number">22</span>岁嫂子今年<span class="token number">0b10110</span>岁嫂子今年<span class="token number">0o26</span>岁嫂子今年<span class="token number">0x16</span>岁</code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 理解</span>name <span class="token operator">=</span> <span class="token string">"alex"</span>text <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"我是</span><span class="token interpolation"><span class="token punctuation">&#123;</span> name<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span></span><span class="token string">，我爱大铁锤"</span></span><span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token comment"># 输出：我是ALEX，我爱大铁锤</span></code></pre><h2 id="3-运算符"><a href="#3-运算符" class="headerlink" title="3. 运算符"></a>3. 运算符</h2><p>​提到运算符，我想大家首先想到的就是加、减、乘、除之类， 本节要系统的跟大家来聊一聊，我们写代码时常见的运算符可以分为5种：</p><ul><li><p>算数运算符，例如：加减乘除</p><img src="asserts/image-20201011165419956.png" alt="image-20201011165419956"  /></li><li><p>比较运算符，例如：大于、小于</p><img src="asserts/image-20201011165434014.png" alt="image-20201011165434014"  /><p>注意：<font color="#dd0000">python3中不支持 <code>&lt;&gt;</code></font></p></li><li><p>赋值运算，例如：变量赋值</p><img src="asserts/image-20201011165501909.png" alt="image-20201011165501909"  /></li><li><p>成员运算，例如：是否包含</p><img src="asserts/image-20201011165515812.png" alt="image-20201011165515812"  /></li><li><p>逻辑运算，例如：且或非</p><img src="asserts/image-20201011165530169.png" alt="image-20201011165530169"  /></li></ul><h3 id="3-1-运算符优先级"><a href="#3-1-运算符优先级" class="headerlink" title="3.1 运算符优先级"></a>3.1 <font color="#dd0000">运算符优先级</font></h3><p>​运算符的优先级有很多，常见的没几个，<font color="#dd0000">推荐你记住3个即可：</font></p><ul><li><p><font color="#dd0000">算数优先级优先级 大于 比较运算符</font></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">11</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"真"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"假"</span><span class="token punctuation">)</span></code></pre></li><li><p><font color="#dd0000">比较运算符优先级 大于 逻辑运算符</font></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">></span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"成立"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"不成立"</span><span class="token punctuation">)</span></code></pre></li><li><p><font color="#dd0000">逻辑运算符内部三个优先级 not &gt; and &gt; or</font></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">not</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">></span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"真"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"假"</span><span class="token punctuation">)</span></code></pre></li></ul><p><font color="#dd0000"><strong>上述这3个优先级从高到低总结：<code>加减乘除 &gt; 比较 &gt; not and or </code>。绝招：加括号。</strong></font></p><h3 id="3-2-面试题"><a href="#3-2-面试题" class="headerlink" title="3.2 面试题"></a>3.2 面试题</h3><h5 id="一般情况下逻辑运算符两边都为布尔值–返回布尔值"><a href="#一般情况下逻辑运算符两边都为布尔值–返回布尔值" class="headerlink" title="一般情况下逻辑运算符两边都为布尔值–返回布尔值"></a>一般情况下逻辑运算符两边都为布尔值–返回布尔值</h5><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> name <span class="token operator">==</span> <span class="token string">"alex"</span> <span class="token keyword">and</span> pwd <span class="token operator">==</span> <span class="token string">"123"</span><span class="token comment"># v1 = True and False</span><span class="token keyword">if</span> name <span class="token operator">==</span> <span class="token string">"alex"</span> <span class="token keyword">and</span> pwd <span class="token operator">==</span> <span class="token string">"123"</span><span class="token punctuation">:</span>  <span class="token keyword">pass</span></code></pre><h5 id="当逻辑运算符两边不为布尔值时–直接取值"><a href="#当逻辑运算符两边不为布尔值时–直接取值" class="headerlink" title="当逻辑运算符两边不为布尔值时–直接取值"></a><font color="#dd0000">当逻辑运算符两边不为布尔值时–直接取值</font></h5><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 当逻辑运算符两边不为布尔值时</span>v2 <span class="token operator">=</span> <span class="token string">"wupeiqi"</span> <span class="token keyword">and</span> <span class="token string">"alex"</span><span class="token comment"># 第一步：将and前后的只转换为布尔值 True and True</span><span class="token comment"># 第二步：判断本次操作取决于谁？由于前面的是True，所以本次逻辑判断取决于后面的值。</span><span class="token comment"># 所以，后面的值等于多少最终结果就是多少。 v2 = "alex"</span>v3 <span class="token operator">=</span> <span class="token string">""</span> <span class="token keyword">and</span> <span class="token string">"alex"</span><span class="token comment"># 第一步：将and前后的只转换为布尔值 False and True</span><span class="token comment"># 第二步：判断本次操作取悦于谁？由于前面的是False，所以本次逻辑判断取决于前面的值。</span><span class="token comment"># 所以，前面的只等于多少最终结果就是多少。 v2 = ""</span>v4 <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">or</span> <span class="token number">8</span> <span class="token comment"># 第一步：将and前后的只转换为布尔值 True or True</span><span class="token comment"># 第二步：判断本次操作取悦于谁？由于前面的是True，所以本次逻辑判断取决于前面的值。</span><span class="token comment"># v4 = 1</span>v5 <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">or</span> <span class="token number">8</span> <span class="token comment"># 第一步：将and前后的只转换为布尔值 False or True</span><span class="token comment"># 第二步：判断本次操作取悦于谁？由于前面的是False，所以本次逻辑判断取决于后面的值。</span><span class="token comment"># v5 = 8</span></code></pre><h3 id="练习题-4"><a href="#练习题-4" class="headerlink" title="练习题"></a>练习题</h3><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">or</span> <span class="token number">2</span>  <span class="token comment"># 1</span>v2 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> <span class="token number">3</span>  <span class="token comment"># -1</span>v3 <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">or</span> <span class="token operator">-</span><span class="token number">1</span>  <span class="token comment"># -1</span>v4 <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">or</span> <span class="token number">100</span>  <span class="token comment"># 100</span>v5 <span class="token operator">=</span> <span class="token string">""</span> <span class="token keyword">or</span> <span class="token number">10</span>  <span class="token comment"># 10</span>v6 <span class="token operator">=</span> <span class="token string">"wupeiqi"</span> <span class="token keyword">or</span> <span class="token string">""</span>  <span class="token comment"># "wupeiqi"</span>v7 <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">or</span> <span class="token string">""</span>  <span class="token comment"># ""</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">,</span>v2<span class="token punctuation">,</span>v3<span class="token punctuation">,</span>v4<span class="token punctuation">,</span>v5<span class="token punctuation">,</span>v6<span class="token punctuation">,</span>v7<span class="token punctuation">)</span><span class="token comment"># or，看第一个值，如果第一个值为真，结果就应该是第一个值，否则就结果就是第二个值。</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token number">4</span> <span class="token keyword">and</span> <span class="token number">8</span>  <span class="token comment"># 8</span>v2 <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">and</span> <span class="token number">6</span>  <span class="token comment"># 0</span>v3 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">and</span> <span class="token number">88</span>  <span class="token comment"># 88</span>v4 <span class="token operator">=</span> <span class="token string">""</span> <span class="token keyword">and</span> <span class="token number">7</span>  <span class="token comment"># ""</span>v5 <span class="token operator">=</span> <span class="token string">"武沛齐"</span> <span class="token keyword">and</span> <span class="token string">""</span>  <span class="token comment"># ""</span>v6 <span class="token operator">=</span> <span class="token string">""</span> <span class="token keyword">and</span> <span class="token number">0</span>  <span class="token comment"># ""</span>v7 <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">and</span> <span class="token string">"中国"</span>  <span class="token comment"># 0</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">,</span>v2<span class="token punctuation">,</span>v3<span class="token punctuation">,</span>v4<span class="token punctuation">,</span>v5<span class="token punctuation">,</span>v6<span class="token punctuation">,</span>v7<span class="token punctuation">)</span><span class="token comment"># and，看第一个值，如果第一个值真，结果就应该是第二个值，否则结果就是第一个值。</span></code></pre><h3 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h3><p>​如果多个and 和or的情况，<font color="#dd0000">先计算and再计算or.</font></p><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">or</span> <span class="token number">4</span> <span class="token keyword">and</span> <span class="token number">3</span> <span class="token keyword">or</span> <span class="token number">7</span> <span class="token keyword">or</span> <span class="token number">9</span> <span class="token keyword">and</span> <span class="token number">6</span>     <span class="token number">0</span> <span class="token keyword">or</span> <span class="token number">3</span> <span class="token keyword">or</span> <span class="token number">7</span> <span class="token keyword">or</span> <span class="token number">9</span> <span class="token keyword">and</span> <span class="token number">6</span>     <span class="token number">0</span> <span class="token keyword">or</span> <span class="token number">3</span> <span class="token keyword">or</span> <span class="token number">7</span> <span class="token keyword">or</span> <span class="token number">6</span>     <span class="token number">3</span> <span class="token keyword">or</span> <span class="token number">7</span> <span class="token keyword">or</span> <span class="token number">6</span>     <span class="token number">3</span> <span class="token keyword">or</span> <span class="token number">6</span>     <span class="token number">3</span>v2 <span class="token operator">=</span> <span class="token number">8</span> <span class="token keyword">or</span> <span class="token number">3</span> <span class="token keyword">and</span> <span class="token number">4</span> <span class="token keyword">or</span> <span class="token number">2</span> <span class="token keyword">and</span> <span class="token number">0</span> <span class="token keyword">or</span> <span class="token number">9</span> <span class="token keyword">and</span> <span class="token number">7</span> <span class="token number">8</span>    v3 <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">or</span> <span class="token number">2</span> <span class="token keyword">and</span> <span class="token number">3</span> <span class="token keyword">and</span> <span class="token number">4</span> <span class="token keyword">or</span> <span class="token number">6</span> <span class="token keyword">and</span> <span class="token number">0</span> <span class="token keyword">or</span> <span class="token number">3</span> <span class="token number">4</span></code></pre><p>​<font color="#dd0000">先计算not，在计算and，最后计算or.</font></p><pre class="language-python" data-language="python"><code class="language-python">v4 <span class="token operator">=</span> <span class="token keyword">not</span> <span class="token number">8</span> <span class="token keyword">or</span> <span class="token number">3</span> <span class="token keyword">and</span> <span class="token number">4</span> <span class="token keyword">or</span> <span class="token number">2</span> <span class="token number">4</span></code></pre><h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><ol><li>while循环语句</li><li>break和continue关键字的作用</li><li>三种字符串格式化的方式</li><li>基本运算符（逻辑运算符涉及的相关面试题）</li></ol><h2 id="今日作业-1"><a href="#今日作业-1" class="headerlink" title="今日作业"></a>今日作业</h2><ol><li><p>判断下列逻辑语句的True,False</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token number">1</span> <span class="token operator">></span> <span class="token number">1</span> <span class="token keyword">or</span> <span class="token number">3</span> <span class="token operator">&lt;</span> <span class="token number">4</span> <span class="token keyword">or</span> <span class="token number">4</span> <span class="token operator">></span> <span class="token number">5</span> <span class="token keyword">and</span> <span class="token number">2</span> <span class="token operator">></span> <span class="token number">1</span> <span class="token keyword">and</span> <span class="token number">9</span> <span class="token operator">></span> <span class="token number">8</span> <span class="token keyword">or</span> <span class="token number">7</span> <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token keyword">not</span> <span class="token number">2</span> <span class="token operator">></span> <span class="token number">1</span> <span class="token keyword">and</span> <span class="token number">3</span> <span class="token operator">&lt;</span> <span class="token number">4</span> <span class="token keyword">or</span> <span class="token number">4</span> <span class="token operator">></span> <span class="token number">5</span> <span class="token keyword">and</span> <span class="token number">2</span> <span class="token operator">></span> <span class="token number">1</span> <span class="token keyword">and</span> <span class="token number">9</span> <span class="token operator">></span> <span class="token number">8</span> <span class="token keyword">or</span> <span class="token number">7</span> <span class="token operator">&lt;</span> <span class="token number">6</span>TF</code></pre></li><li><p>求出下列逻辑语句的值。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token number">8</span> <span class="token keyword">or</span> <span class="token number">3</span> <span class="token keyword">and</span> <span class="token number">4</span> <span class="token keyword">or</span> <span class="token number">2</span> <span class="token keyword">and</span> <span class="token number">0</span> <span class="token keyword">or</span> <span class="token number">9</span> <span class="token keyword">and</span> <span class="token number">7</span><span class="token number">0</span> <span class="token keyword">or</span> <span class="token number">2</span> <span class="token keyword">and</span> <span class="token number">3</span> <span class="token keyword">and</span> <span class="token number">4</span> <span class="token keyword">or</span> <span class="token number">6</span> <span class="token keyword">and</span> <span class="token number">0</span> <span class="token keyword">or</span> <span class="token number">3</span><span class="token number">8</span><span class="token number">4</span></code></pre></li><li><p>下列结果是什么？</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token number">6</span> <span class="token keyword">or</span> <span class="token number">2</span> <span class="token operator">></span> <span class="token number">1</span>  <span class="token comment"># 6</span><span class="token number">3</span> <span class="token keyword">or</span> <span class="token number">2</span> <span class="token operator">></span> <span class="token number">1</span>  <span class="token comment"># 3</span><span class="token number">0</span> <span class="token keyword">or</span> <span class="token number">5</span> <span class="token operator">&lt;</span> <span class="token number">4</span>  <span class="token comment"># F</span><span class="token number">5</span> <span class="token operator">&lt;</span> <span class="token number">4</span> <span class="token keyword">or</span> <span class="token number">3</span>  <span class="token comment"># 3</span><span class="token number">2</span> <span class="token operator">></span> <span class="token number">1</span> <span class="token keyword">or</span> <span class="token number">6</span>  <span class="token comment"># T</span><span class="token number">3</span> <span class="token keyword">and</span> <span class="token number">2</span> <span class="token operator">></span> <span class="token number">1</span>  <span class="token comment"># T</span><span class="token number">0</span> <span class="token keyword">and</span> <span class="token number">3</span> <span class="token operator">></span> <span class="token number">1</span>  <span class="token comment"># 0</span><span class="token number">2</span> <span class="token operator">></span> <span class="token number">1</span> <span class="token keyword">and</span> <span class="token number">3</span>  <span class="token comment"># 3</span><span class="token number">3</span> <span class="token operator">></span> <span class="token number">1</span> <span class="token keyword">and</span> <span class="token number">0</span>  <span class="token comment"># 0</span><span class="token number">3</span> <span class="token operator">></span> <span class="token number">1</span> <span class="token keyword">and</span> <span class="token number">2</span> <span class="token keyword">or</span> <span class="token number">2</span> <span class="token operator">&lt;</span> <span class="token number">3</span> <span class="token keyword">and</span> <span class="token number">3</span> <span class="token keyword">and</span> <span class="token number">4</span> <span class="token keyword">or</span> <span class="token number">3</span> <span class="token operator">></span> <span class="token number">2</span>  <span class="token comment"># 2</span></code></pre></li><li><p>实现用户登录系统，并且要支持连续三次输错之后直接退出，并且在每次输错误时显示剩余错误次数（提示：使⽤字符串格式化）。</p><pre class="language-python" data-language="python"><code class="language-python">user_name <span class="token operator">=</span> <span class="token string">'Alex'</span>pwd <span class="token operator">=</span> <span class="token string">'666'</span>times <span class="token operator">=</span> <span class="token number">3</span><span class="token keyword">while</span> times <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>    log_name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input your username: '</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>    log_pwd <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input your password: '</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>    times <span class="token operator">-=</span> <span class="token number">1</span>    <span class="token keyword">if</span> log_name <span class="token operator">==</span> user_name <span class="token keyword">and</span> log_pwd <span class="token operator">==</span> pwd<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'login successful'</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> times <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'username or password incorrect! you have </span><span class="token interpolation"><span class="token punctuation">&#123;</span>times<span class="token punctuation">&#125;</span></span><span class="token string"> times to login'</span></span><span class="token punctuation">)</span></code></pre></li><li><p>猜年龄游戏<br>要求：允许用户最多尝试3次，3次都没猜对的话，就直接退出，如果猜对了，打印恭喜信息并退出。</p><pre class="language-python" data-language="python"><code class="language-python">true_age <span class="token operator">=</span> <span class="token number">66</span>times <span class="token operator">=</span> <span class="token number">3</span><span class="token keyword">while</span> times <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>    guess_age <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please guess a age: '</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> guess_age <span class="token operator">==</span> true_age<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'congratulations on your guess'</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>    <span class="token keyword">elif</span> guess_age <span class="token operator">></span> true_age<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'you guess is too large!'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'you guess is too small!'</span><span class="token punctuation">)</span>    times <span class="token operator">-=</span> <span class="token number">1</span></code></pre></li><li><p>猜年龄游戏升级版<br>要求：允许用户最多尝试3次，每尝试3次后，如果还没猜对，就问用户是否还想继续玩，如果回答Y，就继续让其猜3次，以此往复，如果回答N，就退出程序，如何猜对了，就直接退出。</p><pre class="language-PYTHON" data-language="PYTHON"><code class="language-PYTHON"># 自己作业true_age &#x3D; 66flag &#x3D; Truewhile flag:    times &#x3D; 3    while times &gt; 0:        guess_age &#x3D; int(input(&#39;please guess a age: &#39;).strip())        times -&#x3D; 1        if guess_age &#x3D;&#x3D; true_age:            print(&#39;congratulations on your guess&#39;)            break        elif guess_age &gt; true_age:            print(&#39;you guess is too large!&#39;)        else:            print(&#39;you guess is too small!&#39;)        if times &#x3D;&#x3D; 0:            order &#x3D; input(&#39;input &quot;Y&quot; to continue: &#39;)            if order &#x3D;&#x3D; &#39;Y&#39;:                break            else:                flag &#x3D; False                break</code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 老师讲解</span>true_age <span class="token operator">=</span> <span class="token number">66</span>count <span class="token operator">=</span> <span class="token number">3</span><span class="token keyword">while</span> count <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>    guess_age <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please guess a age: '</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    count <span class="token operator">-=</span> <span class="token number">1</span>    <span class="token keyword">if</span> guess_age <span class="token operator">==</span> true_age<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'congratulations on your guess'</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>    <span class="token keyword">elif</span> guess_age <span class="token operator">></span> true_age<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'you guess is too large!'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'you guess is too small!'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> count <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        order <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'input "Y" to continue: '</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> order <span class="token operator">==</span> <span class="token string">'Y'</span><span class="token punctuation">:</span>            count <span class="token operator">=</span> <span class="token number">3</span>  <span class="token comment"># 输入'Y'后重置count</span>            <span class="token keyword">continue</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">break</span></code></pre></li></ol><h1 id="五、进制和编码"><a href="#五、进制和编码" class="headerlink" title="五、进制和编码"></a>五、进制和编码</h1><p>​课程目标：讲解计算机中一些必备的常识知识，让学员了解一些常见名词背后的含义（重在理解）。</p><p>课程概要：</p><ul><li>python代码的运行方式</li><li>进制</li><li>计算机中的单位</li><li>编码</li></ul><h2 id="1-Python代码运行方式"><a href="#1-Python代码运行方式" class="headerlink" title="1.Python代码运行方式"></a>1.Python代码运行方式</h2><ul><li><p>脚本式</p><pre class="language-python" data-language="python"><code class="language-python">python3 <span class="token operator">~</span><span class="token operator">/</span>PycharmProjects<span class="token operator">/</span>day03<span class="token operator">/</span><span class="token number">6.</span>作业题讲解<span class="token punctuation">.</span>py</code></pre></li><li><p>交互式</p><pre class="language-python" data-language="python"><code class="language-python">python3</code></pre><img src="asserts/截屏2020-10-25 下午5.15.51.png" alt="截屏2020-10-25 下午5.15.51" style="zoom:50%;" /></li></ul><h2 id="2-进制"><a href="#2-进制" class="headerlink" title="2.进制"></a>2.进制</h2><p>计算机中底层所有的数据都是以 <code>010101</code>的形式存在（图片、文本、视频等）。</p><ul><li><p>二进制</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token number">0</span><span class="token number">1</span><span class="token number">10</span></code></pre><p>![截屏2020-10-25 下午5.36.39](asserts&#x2F;截屏2020-10-25 下午5.36.39.png)</p></li><li><p>八进制</p></li><li><p>十进制</p></li><li><p>十六进制</p></li></ul><img src="asserts/image-20201025174321969.png" alt="image-20201025174321969" style="zoom: 50%;" /><h3 id="2-1-进制转换"><a href="#2-1-进制转换" class="headerlink" title="2.1 进制转换"></a><font color="#dd0000">2.1 进制转换</font></h3><img src="asserts/image-20201025180124802.png" alt="image-20201025180124802" style="zoom:50%;" /><pre class="language-python" data-language="python"><code class="language-python">v1 <span class="token operator">=</span> <span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span> <span class="token comment"># 十进制转换为二进制，结果为字符串</span><span class="token keyword">print</span><span class="token punctuation">(</span>v1<span class="token punctuation">)</span> <span class="token comment"># "0b11001"</span>v2 <span class="token operator">=</span> <span class="token builtin">oct</span><span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">)</span> <span class="token comment"># 十进制转换为八进制</span><span class="token keyword">print</span><span class="token punctuation">(</span>v2<span class="token punctuation">)</span> <span class="token comment"># "0o27"</span>v3 <span class="token operator">=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token number">28</span><span class="token punctuation">)</span> <span class="token comment"># 十进制转换为十六进制</span><span class="token keyword">print</span><span class="token punctuation">(</span>v3<span class="token punctuation">)</span> <span class="token comment"># "0x1c"</span></code></pre><pre class="language-python" data-language="python"><code class="language-python">i1 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">"0b11001"</span><span class="token punctuation">,</span>base<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># 25</span>i2 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">"0o27"</span><span class="token punctuation">,</span>base<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token comment"># 23 </span>i3 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">"0x1c"</span><span class="token punctuation">,</span>base<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token comment"># 28 </span></code></pre><h2 id="3-计算机中的单位"><a href="#3-计算机中的单位" class="headerlink" title="3. 计算机中的单位"></a>3. 计算机中的单位</h2><p>​由于计算机中本质上所有的东西以为二进制存储和操作的，为了方便对于二进制值大小的表示，所以就搞了一些单位。</p><ul><li><p>b（bit），位</p><pre class="language-none"><code class="language-none">1，1位10，2位111，3位1001，4位</code></pre></li><li><p>B（byte），字节</p><pre class="language-none"><code class="language-none">8位是一个字节。10010110，1个字节10010110 10010110，2个字节</code></pre></li><li><p>KB（kilobyte），千字节</p><pre class="language-none"><code class="language-none">1024个字节就是1个千字节。10010110 11010110  10010111 .. ，1KB1KB &#x3D; 1024B&#x3D; 1024 * 8 b</code></pre></li><li><p>M（Megabyte），兆</p><pre class="language-none"><code class="language-none">1024KB就是1M1M&#x3D; 1024KB &#x3D; 1024 * 1024 B &#x3D; 1024 * 1024 * 8 b</code></pre></li><li><p>G（Gigabyte），千兆</p><pre class="language-none"><code class="language-none">1024M就是1G1 G&#x3D;  1024 M&#x3D;  1024 *1024KB &#x3D;  1024 * 1024 * 1024 B &#x3D;  1024 * 1024 * 1024 * 8 b</code></pre></li><li><p>T（Terabyte），万亿字节</p><pre class="language-none"><code class="language-none">1024个G就是1T</code></pre></li><li><p>…其他更大单位 PB&#x2F;EB&#x2F;ZB&#x2F;YB&#x2F;BB&#x2F;NB&#x2F;DB 不再赘述。</p></li></ul><p><span style="color:red;">做个小练习</span>：</p><ul><li><p>假设1个汉字需要2个字节(2B&#x3D;16位来表示，如：1000101011001100)，那么1G流量可以通过网络传输多少汉字呢？（计算机传输本质上也是二进制）</p><pre class="language-python" data-language="python"><code class="language-python">1G <span class="token operator">=</span> 1024M <span class="token operator">=</span> <span class="token number">1024</span> <span class="token operator">*</span> 1024KB <span class="token operator">=</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> B每个汉字需要<span class="token number">2</span>个字节表示<span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token operator">/</span><span class="token number">2</span> <span class="token operator">=</span> ?  <span class="token comment"># 536870912.0</span></code></pre></li><li><p>假设1个汉字需要2个字节(2B&#x3D;16位来表示，如：1000101011001100)，那么500G硬盘可以存储多少个汉字？</p><pre class="language-python" data-language="python"><code class="language-python">500G <span class="token operator">=</span> <span class="token number">500</span> <span class="token operator">*</span> 1024M <span class="token operator">=</span> <span class="token number">500</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> 1024KB <span class="token operator">=</span> <span class="token number">500</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> B<span class="token number">500</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">=</span> ?  <span class="token comment"># 268435456000.0</span></code></pre></li></ul><h2 id="4-编码"><a href="#4-编码" class="headerlink" title="4.编码"></a>4.编码</h2><p>​<font color="#dd0000">编码，文字和二进制之间的一个对照表。</font></p><h3 id="4-1-ascii编码"><a href="#4-1-ascii编码" class="headerlink" title="4.1 ascii编码"></a>4.1 ascii编码</h3><p>​ascii规定使用1个字节来表示<font color="#dd0000">字母与二进制</font>的对应关系。</p><pre class="language-none"><code class="language-none">0000000000000001    w00000010    B00000011    a...11111111</code></pre><h4 id="为什么是8位"><a href="#为什么是8位" class="headerlink" title="为什么是8位"></a>为什么是8位</h4><p><img src="/asserts/image-20201026111741235.png" alt="image-20201026111741235"></p><p><img src="/asserts/image-20201026111752410.png" alt="image-20201026111752410"></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token number">2</span><span class="token operator">**</span><span class="token number">8</span> <span class="token operator">=</span> <span class="token number">256</span></code></pre><h3 id="4-2-gb-2312编码"><a href="#4-2-gb-2312编码" class="headerlink" title="4.2 gb-2312编码"></a>4.2 gb-2312编码</h3><p>​gb-2312编码，由国家信息标准委员会制作（1980年）。gbk编码，对gb2312进行扩展，包含了中日韩等文字（1995年）。</p><p>​在与二进制做对应关系时，有如下逻辑：</p><ul><li>单字节表示，用一个字节表示对应关系（ASCII码的内容）。2**8 &#x3D; 256</li><li>双字节表示，用两个字节表示对应关系（汉字）。2**16 &#x3D; 65536种可能性。</li></ul><h3 id="4-3-unicode"><a href="#4-3-unicode" class="headerlink" title="4.3 unicode"></a>4.3 unicode</h3><p>​unicode（<a href="https://unicode-table.com/en/">对照表网址</a>）也被称为万国码，为全球的每个文字都分配了一个码位（二进制表示）。</p><ul><li><p>ucs2 ：用固定的2个字节去表示一个文字。</p><pre class="language-none"><code class="language-none">00000000 00000000     悟...2**16 &#x3D; 65535</code></pre></li><li><p>ucs4：用固定的4个字节去表示一个文字。</p><pre class="language-none"><code class="language-none">00000000 00000000 00000000 00000000  无...2**32 &#x3D; 4294967296</code></pre></li></ul><pre class="language-none"><code class="language-none">文字     十六进制            二进制  ȧ        0227           1000100111 ȧ        0227         00000010 00100111                       ucs2 不够两个字节前面补零 ȧ        0227         00000000 00000000 00000010 00100111     ucs4 不够四个字节前面补零  乔       4E54           100111001010100 乔       4E54         01001110 01010100                       ucs2 乔       4E54         00000000 00000000 01001110 01010100     ucs4  😆      1F606        11111011000000110 😆      1F606        00000000 00000001 11110110 00000110      ucs4</code></pre><p>​无论是ucs2和ucs4都有缺点：<font color="#dd0000">浪费空间？</font></p><pre class="language-python" data-language="python"><code class="language-python">文字     十六进制     二进制A        <span class="token number">0041</span>      <span class="token number">01000001</span>A        <span class="token number">0041</span>      <span class="token number">00000000</span> <span class="token number">01000001</span>A        <span class="token number">0041</span>      <span class="token number">00000000</span> <span class="token number">00000000</span> <span class="token number">00000000</span> <span class="token number">01000001</span></code></pre><p>​unicode的应用：<font color="#dd0000">在文件存储和网络传输时，不会直接使用unicode，而在内存中会unicode。</font></p><h3 id="4-4-utf-8编码"><a href="#4-4-utf-8编码" class="headerlink" title="4.4 utf-8编码"></a>4.4 utf-8编码</h3><p>​包含所有文字和二进制的对应关系，全球应用最为广泛的一种编码（站在巨人的肩膀上功成名就）。<font color="#dd0000">本质上：utf-8是对unicode的压缩，用尽量少的二进制去与文字进行对应。</font></p><h3 id="4-4-utf-8编码-1"><a href="#4-4-utf-8编码-1" class="headerlink" title="4.4 utf-8编码"></a>4.4 utf-8编码</h3><pre class="language-none"><code class="language-none">unicode码位范围            utf-8       0000 ~ 007F              用1个字节表示 0080 ~ 07FF              用2个字节表示 0800 ~ FFFF              用3个字节表示10000 ~ 10FFFF            用4个字节表示</code></pre><p>具体压缩的流程：</p><ul><li><p>第一步：选择转换模板</p><pre class="language-none"><code class="language-none">  码位范围（十六进制）                转换模板   0000 ~ 007F              0XXXXXXX   0080 ~ 07FF              110XXXXX 10XXXXXX   0800 ~ FFFF              1110XXXX 10XXXXXX 10XXXXXX  10000 ~ 10FFFF            11110XXX 10XXXXXX 10XXXXXX 10XXXXXX    例如：      &quot;B&quot;  对应的unicode码位为 0042，那么他应该选择的一个模板。      &quot;ǣ&quot;  对应的unicode码位为 01E3，则应该选择第二个模板。      &quot;武&quot; 对应的unicode码位为 6B66，则应该选择第三个模板。      &quot;沛&quot; 对应的unicode码位为 6C9B，则应该选择第三个模板。      &quot;齐&quot; 对应的unicode码位为 9F50，则应该选择第三个模板。       😆  对应的unicode码位为 1F606，则应该选择第四个模板。            注意：一般中文都使用第三个模板（3个字节），这也就是平时大家说中文在utf-8中会占3个字节的原因了。</code></pre></li><li><p>第二步：在模板中填入数据</p><pre class="language-none"><code class="language-none"># 文字  -&gt;  16进制编码号  -&gt;  二进制- &quot;武&quot;  -&gt;  6B66  -&gt;  110 101101 100110- 根据模板去套入数据1110XXXX 10XXXXXX 10XXXXXX1110XXXX 10XXXXXX 101001101110XXXX 10101101 1010011011100110 10101101 10100110在UTF-8编码中 ”武“  11100110 10101101 10100110</code></pre><p><strong>小练习</strong></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># - 😆  ->  1F606</span><span class="token comment"># - 根据模板去套入数据</span><span class="token comment"># 1. 将十六进制转为二进制</span>bin_code <span class="token operator">=</span> <span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">'1F606'</span><span class="token punctuation">,</span> base<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>bin_code<span class="token punctuation">)</span>  <span class="token comment"># 0b11111011000000110</span><span class="token comment"># 2. 将结果套入模板</span><span class="token triple-quoted-string string">''' - 1F606属于10000 ~ 10FFFF  使用第四个模板 11110XXX 10XXXXXX 10XXXXXX 10XXXXXX - 11110XXX 10XXXXXX 10XXXXXX 10XXXXXX  最后一个字节需要补6位 11111011000 000110 -> 000110   11110XXX 10XXXXXX 10XXXXXX 10000110 - 11110XXX 10XXXXXX 10XXXXXX 10000110  倒数第二个字节需要补6位 11111 011000 000110 -> 011000   11110XXX 10XXXXXX 10011000 10000110 - 11110XXX 10XXXXXX 10011000 10000110  倒数第三个字节需要补6位  11111 011000 000110 -> 011111 位数不够补0   11110XXX 10011111 10011000 10000110 - 11110XXX 10XXXXXX 10011000 10000110  第一个字节需要补3位  11111 011000 000110 -> 000 位数不够补0   11110000 10011111 10011000 10000110'''</span>结果：<span class="token number">11110000</span> <span class="token number">10011111</span> <span class="token number">10011000</span> <span class="token number">10000110</span></code></pre></li></ul><h3 id="4-5-Python相关的编码"><a href="#4-5-Python相关的编码" class="headerlink" title="4.5 Python相关的编码"></a>4.5 Python相关的编码</h3><h4 id="字节（byte）"><a href="#字节（byte）" class="headerlink" title="字节（byte）"></a>字节（byte）</h4><pre class="language-none"><code class="language-none">字符串（str）        &quot;alex媳妇叫铁锤&quot;             unicode处理                 一般在内存字节（byte）      b&quot;alexfdsfdsdfskdfsd&quot;      utf-8编码 or gbk编码       一般用于文件或网络处理</code></pre><p><strong>字符串和字节的转化</strong></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 1.字符串转为字节</span>v1 <span class="token operator">=</span> <span class="token string">"武"</span>v2 <span class="token operator">=</span> <span class="token string">"武"</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>  <span class="token comment"># b'\xe6\xad\xa6' 三个字节</span>v3 <span class="token operator">=</span> <span class="token string">"武"</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"gbk"</span><span class="token punctuation">)</span>  <span class="token comment"># b'\xce\xe4' 两个字节</span><span class="token comment"># 2.字节转为字符串</span>v3 <span class="token operator">=</span> <span class="token string">b'\xe6\xad\xa6'</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>  <span class="token comment"># "武"</span>v4 <span class="token operator">=</span>  <span class="token string">b'\xce\xe4'</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'gbk'</span><span class="token punctuation">)</span>  <span class="token comment"># "武"</span></code></pre><p>​<strong>将一个字符串写入到一个文件中（字符串一般用在内存，要将其写入文件，需要将字符串转为字节码，一般使用”utf-8”编码）。</strong></p><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"嫂子热的满身大汗"</span>data <span class="token operator">=</span> name<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>  <span class="token comment"># 将字符串转为utf-8字节码</span><span class="token comment"># 打开一个文件</span>file_object <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"log.txt"</span><span class="token punctuation">,</span>mode<span class="token operator">=</span><span class="token string">"wb"</span><span class="token punctuation">)</span><span class="token comment"># 在文件中写内容</span>file_object<span class="token punctuation">.</span>write<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token comment"># 关闭文件</span>file_object<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h2 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h2><p>​本章的知识点属于<font color="#dd0000">理解</font>为主，了解这些基础之后有利于后面知识点的学习，接下来对本节所有的知识点进行归纳总结：</p><ol><li><p>计算机上所有的东西最终都会转换成为二进制再去运行。</p></li><li><p>ascii编码、unicode字符集、utf-8编码本质上都是字符与二进制的关系。</p><ul><li>ascii，字符和二进制的对照表。</li><li>unicode，字符和二进制（码位）的对照表。</li><li>utf-8，对unicode字符集的码位<font color="#dd0000">进行压缩处理</font>，间接也维护了字符和二进制的对照表。</li></ul></li><li><p>ucs2和ucs4指的是使用多少个字节来表示unicode字符集的码位。</p></li><li><p>目前最广泛的编码为：utf-8，他可以表示所有的字符且存储或网络传输也不会浪费资源（对码位进行压缩了）。</p></li><li><p>二进制、八进制、十进制、十六进制其实就是进位的时机不同。</p><pre class="language-python" data-language="python"><code class="language-python">在Python中二进制、八进制和十六进制是以字符串进行表示，十进制是以整型进行表示</code></pre></li><li><p>基于Python实现二进制、八进制、十进制、十六进制之间的转换。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">-</span> 其它进制转为十进制<span class="token operator">-</span> 二进制转十进制： <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">'0b...'</span><span class="token punctuation">,</span> base<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>    <span class="token operator">-</span> 八进制转十进制： <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">'0o...'</span><span class="token punctuation">,</span> base<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">)</span>    <span class="token operator">-</span> 十六进制转十进制： <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">'0x...'</span><span class="token punctuation">,</span> base<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token operator">-</span> 十进制转其它进制    <span class="token operator">-</span> 十进制转二进制： <span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token operator">-</span> 十进制转八进制： <span class="token builtin">oct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token operator">-</span> 十进制转十六进制： <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    </code></pre></li><li><p>一个字节8位</p></li><li><p>计算机中常见单位b&#x2F;B&#x2F;KB&#x2F;M&#x2F;G的关系。</p></li><li><p>汉字，用gbk编码需要用2个字节；用utf-8编码需要用3个字节。</p></li><li><p>基于Python实现将字符串转换为字节（utf-8编码）</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 字符串类型</span>name <span class="token operator">=</span> <span class="token string">"武沛齐"</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token comment"># 武沛齐</span><span class="token comment"># 字符串转换为字节类型</span>data <span class="token operator">=</span> name<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># b'\xe6\xad\xa6\xe6\xb2\x9b\xe9\xbd\x90'</span><span class="token comment"># 把字节转换为字符串</span>old <span class="token operator">=</span> data<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>old<span class="token punctuation">)</span></code></pre></li><li><p>基于Python实现将字符串转换为字节（gbk编码）</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 字符串类型</span>name <span class="token operator">=</span> <span class="token string">"武沛齐"</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token comment"># 武沛齐</span><span class="token comment"># 字符串转换为字节类型</span>data <span class="token operator">=</span> name<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"gbk"</span><span class="token punctuation">)</span><span class="token comment"># print(data) # b'\xe6\xad\xa6\xe6\xb2\x9b\xe9\xbd\x90'  utf8，中文3个字节</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># b'\xce\xe4\xc5\xe6\xc6\xeb'              gbk，中文2个字节</span><span class="token comment"># 把字节转换为字符串</span>old <span class="token operator">=</span> data<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">"gbk"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>old<span class="token punctuation">)</span></code></pre></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>练习题-模块一</title>
      <link href="/2022/05/20/Python%E7%BB%83%E4%B9%A0%E9%A2%98-%E6%A8%A1%E5%9D%97%E4%B8%80/"/>
      <url>/2022/05/20/Python%E7%BB%83%E4%B9%A0%E9%A2%98-%E6%A8%A1%E5%9D%97%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<h4 id="此文章为路飞学院Python课程模块一练习题"><a href="#此文章为路飞学院Python课程模块一练习题" class="headerlink" title="此文章为路飞学院Python课程模块一练习题"></a>此文章为路飞学院Python课程模块一<font color="#dd0000">练习题</font></h4><span id="more"></span><h1 id="一、day2-计算机基础和环境搭建"><a href="#一、day2-计算机基础和环境搭建" class="headerlink" title="一、day2-计算机基础和环境搭建"></a>一、day2-计算机基础和环境搭建</h1><ol><li><p>简述硬件 &amp; 操作系统 &amp; 软件（应用系统）之间的关系。</p><pre class="language-none"><code class="language-none">- 硬件是组成计算机的物理物理基础- 操作系统将硬件集成起来，通过将用户指令转化为计算机能够识别的命令，使各硬件之间交互起来- 软件是一堆代码，需要在操作系统上运行</code></pre></li><li><p>列举常见的操作系统都有哪些。</p><pre class="language-none"><code class="language-none">- windos 操作系统- linux 操作系统- mac 操作系统</code></pre></li><li><p>简述编译器和解释器的区别和作用。</p><pre class="language-none"><code class="language-none">解释器：实时翻译，读一行运行一行编译器：全文翻译，读完所有代码，将其翻译成一个临时文件，将零时文件交给操作系统</code></pre></li><li><p>编程语言进行分类</p><pre class="language-none"><code class="language-none">- 按翻译类型- 解释型：Python、Ruby- 翻译型：C、C++- 按高低级- 高级语言：C、C++、Java、Python、Ruby- 低级语言：机器语言和汇编语言</code></pre></li><li><p>Python解释器的种类有哪些？</p><pre class="language-none"><code class="language-none">- CPython：底层由C语言开发出来的解释器- PYPY：Cpython的优化版本，将Python进行编译后在执行，提高了运行效率- Jpthon：底层由Java语言开发出来的解释器，方便Python和Java的集成- IronPython：底层由C#语言开发出来的解释器，方便Python和C#的集成- RubyPython：底层由Ruby语言开发出来的解释器，方便Python和Ruby的集成...</code></pre></li><li><p>CPython解释器的版本有哪些？你现在用的是哪个版本？</p><pre class="language-none"><code class="language-none">大版本- 2.X- 3.X自己使用版本（3.9.0）</code></pre></li><li><p>系统环境变量的作用是什么？</p><pre class="language-none"><code class="language-none">1、在终端执行Python命令时，需要输入完整的Python解释器路径\python3.9 + .py文件完整路径，将Python解释器安装路径加入环境变量后，可直接输入python3.9 + .py文件完整路径2、当调用Python模块和变量时，Python解释器会自动在系统变量中进行查找，找不到就会报错</code></pre></li><li><p>Python和Pycharm的区别是什么？</p><pre class="language-none"><code class="language-none">Python是解释器，将python代码转化为计算机可以识别的命令Pycharm是IDE集成开发环境，方便开发者对于Python的使用，提高写代码和运行代码的效率</code></pre></li></ol><h1 id="二、day3-快速上手"><a href="#二、day3-快速上手" class="headerlink" title="二、day3-快速上手"></a>二、day3-快速上手</h1><ol><li><p>使用print输出自己的姓名</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'耿天霸'</span><span class="token punctuation">)</span></code></pre></li><li><p>使用print输出<br>春眠不觉晓，<br>出处闻啼鸟，<br>夜来风雨声，<br>花落知多少。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'春眠不觉晓，'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'出处闻啼鸟，'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'夜来风雨声，'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'花落知多少。'</span><span class="token punctuation">)</span></code></pre></li><li><p>使用print输出<br>春眠不觉晓，出处闻啼鸟，夜来风雨声，花落知多少。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'春眠不觉晓，'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'出处闻啼鸟，'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'夜来风雨声，'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'花落知多少。'</span><span class="token punctuation">)</span></code></pre></li><li><p>计算整型50乘以10再除以5的商并使用print输出。</p></li><li><p>判断整型8是否大于10的结果并使用print输出。</p></li><li><p>计算整型30除以2得到的余数并使用print输出。</p></li><li><p>使用字符串乘法实现 把字符串”我爱我的祖国”创建三遍并拼接起来最终使用print输出。</p></li><li><p>判断 字符串”wupeiqi”和”alex”是否相等的结果并使用print输出。</p></li><li><p>判断 整型666和整型666是否相等的结果并使用print输出。</p></li><li><p>判断 字符串”666”和整型666是否相等的结果并使用print输出。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 4.</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">50</span> <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">/</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token comment"># 5.</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">8</span> <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token comment"># 6.</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">30</span> <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token comment"># 7.</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'我爱我的祖国'</span> <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token comment"># 8.</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'wupeiqi'</span> <span class="token operator">==</span> <span class="token string">'Alex'</span><span class="token punctuation">)</span><span class="token comment"># 9.</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">666</span> <span class="token operator">==</span> <span class="token number">666</span><span class="token punctuation">)</span><span class="token comment"># 10.</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">666</span> <span class="token operator">==</span> <span class="token string">'666'</span><span class="token punctuation">)</span></code></pre></li><li><p>看代码写结果（禁止运行代码）：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">"100"</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">3</span> <span class="token punctuation">)</span> <span class="token comment"># 300</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">"123"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">"88"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>  <span class="token comment"># 211</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">222</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>  <span class="token comment"># 111222</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">3</span> <span class="token punctuation">)</span>  <span class="token comment"># 111111111</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">"8"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">7</span> <span class="token punctuation">)</span>  <span class="token comment"># True</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">111</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">111</span> <span class="token punctuation">)</span>  <span class="token comment"># False</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>  <span class="token comment"># True</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>  <span class="token comment"># False</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>  <span class="token comment"># False</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token string">"你好"</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>  <span class="token comment"># True</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token boolean">True</span> <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">)</span>  <span class="token comment"># True</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token boolean">True</span> <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">)</span>  <span class="token comment"># False</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>  <span class="token comment"># True</span></code></pre><p>​注意：类型转换不是改变原来值，实际在底层是新创建了一个值。例如有整数 6 ，然后使用 str(6) 转化了一下得到 “6”,实际上这个字符串”6”是依据整数6新创建的。</p></li><li><p>判断变量命名是否正确</p></li></ol><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"吉诺比利"</span>  name0 <span class="token operator">=</span> <span class="token string">"帕克"</span>  name_1 <span class="token operator">=</span> <span class="token string">"邓肯"</span> _coach <span class="token operator">=</span> <span class="token string">"波波维奇"</span>  _ <span class="token operator">=</span> <span class="token string">"卡哇伊"</span>1_year <span class="token operator">=</span> <span class="token string">"1990"</span> <span class="token comment"># 错误</span>year_1_ <span class="token operator">=</span> <span class="token string">"1990"</span>_1_year <span class="token operator">=</span> <span class="token string">"1990"</span>nba<span class="token operator">-</span>team <span class="token operator">=</span> <span class="token string">"马刺"</span> <span class="token comment"># 错误</span>new<span class="token operator">*</span>name <span class="token operator">=</span> <span class="token string">"伦纳德"</span> <span class="token comment"># 错误</span></code></pre><h4 id=""><a href="#" class="headerlink" title=""></a></h4>]]></content>
      
      
      
        <tags>
            
            <tag> 作业 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>day7-Web开发初探</title>
      <link href="/2022/05/19/Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A7/"/>
      <url>/2022/05/19/Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A7/</url>
      
        <content type="html"><![CDATA[<h3 id="本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记"><a href="#本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记" class="headerlink" title="本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记"></a>本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记</h3><h3 id="视频链接-Python零基础到精通7天速成"><a href="#视频链接-Python零基础到精通7天速成" class="headerlink" title="视频链接:Python零基础到精通7天速成"></a>视频链接:<a href="https://www.bilibili.com/video/BV1Gf4y1q7SG?share_source=copy_web">Python零基础到精通7天速成</a></h3><span id="more"></span><h1 id="一、Web开发介绍"><a href="#一、Web开发介绍" class="headerlink" title="一、Web开发介绍"></a>一、Web开发介绍</h1><p>&amp;emsp;&amp;emsp;我们看到的⽹⻚通过代码来实现的 ，这些代码由浏览器解释并渲染成你看到的丰富多彩的⻚⾯效果。这个浏览器就相当于Python的解释器，专⻔负责解释和执⾏(渲染）⽹⻚代码。<br>&amp;emsp;&amp;emsp;写⽹⻚的代码是专⻔的语⾔， 主要分为Hmtl \ CSS \ JavaScript, 被称为⽹⻚开发三剑客，分别作⽤如下：</p><h4 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h4><p>&amp;emsp;&amp;emsp;超⽂本标记语⾔（英语：HyperText Markup Language，简称：HTML）是⼀种⽤于创建⽹⻚的标准标记语⾔。<br>&amp;emsp;&amp;emsp;主要负责编写⻚⾯架构，有点像建房⼦时，造的⽑坯房。</p><h4 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h4><p>&amp;emsp;&amp;emsp;CSS (Cascading Style Sheets) ⽤于渲染HTML元素标签的样式。<br>&amp;emsp;&amp;emsp;让你的⽹⻚样式变的丰富多彩起来，可以改变字体、颜⾊、排列⽅式、背景颜⾊等<br>&amp;emsp;&amp;emsp;相当于给你的⽑坯房做装修</p><h4 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h4><p>&amp;emsp;&amp;emsp;周杰伦&#x3D; 周杰<br>&amp;emsp;&amp;emsp;⽹⻚脚本语⾔，可以让你的⽹⻚动起来，⽐如⼀张图⽚⿏标放上去⾃动变⼤、⼀个按钮⾃动变⾊、提交<br>&amp;emsp;&amp;emsp;表单时少填或填错了字段会提示报错等，都是JavaScript实现的。</p><div align=center><img src="https://img-blog.csdnimg.cn/e5561eb8cda4494d8a3a27ad6ae3fecc.png" width = 60%></div><p>&amp;emsp;&amp;emsp;以上3个 组件 是做⽹站开发都必须掌握的技能 ，我们接下来依次体验下~吧</p><h1 id="二、HTML"><a href="#二、HTML" class="headerlink" title="二、HTML"></a>二、HTML</h1><h2 id="（一）HTML简介"><a href="#（一）HTML简介" class="headerlink" title="（一）HTML简介"></a>（一）HTML简介</h2><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>路⻜学城<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>我的第⼀个标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>我的第⼀个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><ul><li>&lt;!DOCTYPE html&gt; 声明为 HTML5 ⽂档</li><li>&lt;html&gt; 元素是 HTML ⻚⾯的根元素</li><li>&lt;head&gt; 标签⽤于定义⽂档的头部，它是所有头部元素的容器。 中的元素可以引⽤脚本、指示浏览器在哪⾥找到样式表、提供元信息等等。</li><li>&lt;meta&gt; 元素包含⽂档的元数据， 如定义⽹⻚编码格式为 utf-8、关键词啥的</li><li>&lt;title&gt; 元素⾥描述了⽂档的标题</li><li>&lt;body&gt; 元素包含了可⻅的⻚⾯内容</li><li>&lt;h1&gt; 元素定义⼀个⼤标题</li><li>&lt;p&gt; 元素定义⼀个段落</li></ul><p><font color="#dd0000"> 注：在浏览器的⻚⾯上使⽤键盘上的 F12 按键开启调试模式，就可以看到组成标签</font></p><h2 id="（二）什么是HTML"><a href="#（二）什么是HTML" class="headerlink" title="（二）什么是HTML"></a>（二）什么是HTML</h2><p>&amp;emsp;&amp;emsp;HTML 是⽤来描述⽹⻚的⼀种语⾔。</p><ul><li>HTML 指的是超⽂本标记语⾔: HyperText Markup Language</li><li>HTML 不是⼀种编程语⾔，⽽是⼀种标记语⾔</li><li>标记语⾔是⼀套标记标签 (markup tag)</li><li>HTML 使⽤标记标签来描述⽹⻚</li><li>HTML ⽂档包含了HTML 标签及⽂本内容</li><li>HTML⽂档也叫做 web ⻚⾯<h4 id="HTML-标签"><a href="#HTML-标签" class="headerlink" title="HTML 标签"></a>HTML 标签</h4>&amp;emsp;&amp;emsp;HTML 标记标签通常被称为 HTML 标签 (HTML tag)</li><li>HTML 标签是由尖括号包围的关键词，⽐如</li><li>HTML 标签通常是成对出现的，⽐如 <b> 和 </b> ,标签对中的第⼀个标签是开始标签，第⼆个标签是结束标签</li></ul><h2 id="（三）HTML⽹⻚结构"><a href="#（三）HTML⽹⻚结构" class="headerlink" title="（三）HTML⽹⻚结构"></a>（三）HTML⽹⻚结构</h2><p>&amp;emsp;&amp;emsp;下⾯是⼀个可视化的HTML⻚⾯结构</p><div align=center><img src="https://img-blog.csdnimg.cn/a1c12388aba84543a51ff77e8d509a71.png" width = 60%></div><font color="#dd0000"> 注： 只有 区域 (⽩⾊部分) 才会在浏览器中显示。</font><h1 id="三、HTML常⽤元素⼊⻔"><a href="#三、HTML常⽤元素⼊⻔" class="headerlink" title="三、HTML常⽤元素⼊⻔"></a>三、HTML常⽤元素⼊⻔</h1><h2 id="（一）HTML标题"><a href="#（一）HTML标题" class="headerlink" title="（一）HTML标题"></a>（一）HTML标题</h2><div align=center><img src="https://img-blog.csdnimg.cn/55c0190e16514b49871c158e35163586.png" width = 60%></div><h2 id="（二）段落"><a href="#（二）段落" class="headerlink" title="（二）段落"></a>（二）段落</h2><div align=center><img src="https://img-blog.csdnimg.cn/fa2fed5198bb438bbf9355b48ad95ab9.png" width = 60%></div><h2 id="（三）超链接"><a href="#（三）超链接" class="headerlink" title="（三）超链接"></a>（三）超链接</h2><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 传入属性target = _blank会打开一个新窗口 --></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.luffycity.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这是⼀个链接使⽤了 href 属性<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p><a href="https://www.luffycity.com">这是⼀个链接使⽤了 href 属性</a></p><h2 id="（四）显示图片"><a href="#（四）显示图片" class="headerlink" title="（四）显示图片"></a>（四）显示图片</h2><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>black_girl.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>600<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span></code></pre><div align=center><img src="https://img-blog.csdnimg.cn/cfa915e33c9d4d63ac2352824d6ed10e.png" width = 60%></div><h2 id="（五）HTML表格"><a href="#（五）HTML表格" class="headerlink" title="（五）HTML表格"></a>（五）HTML表格</h2><div align=center><img src="https://img-blog.csdnimg.cn/faeb53aeac62488cbdb8631d56b9ce8d.png" width = 60%></div><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>row 1, cell 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>row 1, cell 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>row 2, cell 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>row 2, cell 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><h4 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h4><table border="1" cellpadding="10"> <tr> <th>First Name</th> <th>Last Name</th> <th>Points</th> </tr> <tr> <td>Jill</td> <td>Smith</td> <td>50</td> </tr>  <tr> <td>Eve</td> <td>Jackson</td> <td>94</td> </tr>  <tr> <td>Jhon</td> <td>Doe</td> <td>80</td> </tr>  <tr> <td>Adam</td> <td>Jhonson</td> <td>67</td> </tr></table><h2 id="（六）列表"><a href="#（六）列表" class="headerlink" title="（六）列表"></a>（六）列表</h2><p>&amp;emsp;&amp;emsp;分为有序列表 和 ⽆序列表</p><h4 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Coffee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Tea<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Milk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">start</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Coffee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Tea<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Milk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span></code></pre><h4 id="效果-2"><a href="#效果-2" class="headerlink" title="效果"></a>效果</h4><ol> <li>Coffee</li> <li>Tea</li> <li>Milk</li></ol><ol start="50"> <li>Coffee</li> <li>Tea</li> <li>Milk</li></ol><h4 id="⽆序列表"><a href="#⽆序列表" class="headerlink" title="⽆序列表"></a>⽆序列表</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Coffee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Tea<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Milk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre><h4 id="效果-3"><a href="#效果-3" class="headerlink" title="效果"></a>效果</h4><ul> <li>Coffee</li> <li>Tea</li> <li>Milk</li></ul><h4 id="嵌套列表"><a href="#嵌套列表" class="headerlink" title="嵌套列表"></a>嵌套列表</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Coffee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Tea <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Black tea<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Green tea<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>Milk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre><h4 id="效果-4"><a href="#效果-4" class="headerlink" title="效果"></a>效果</h4><ul> <li>Coffee</li> <li>Tea <ul> <li>Black tea</li> <li>Green tea</li> </ul> </li> <li>Milk</li></ul><h2 id="（七）div区块元素"><a href="#（七）div区块元素" class="headerlink" title="（七）div区块元素"></a>（七）div区块元素</h2><h4 id="HTML区块元素"><a href="#HTML区块元素" class="headerlink" title="HTML区块元素"></a>HTML区块元素</h4><p>&amp;emsp;&amp;emsp;⼤多数 HTML 元素被定义为块级元素或内联元素。<br>&amp;emsp;&amp;emsp;块级元素在浏览器显示时，通常会以新⾏来开始（和结束）。</p><h4 id="实例"><a href="#实例" class="headerlink" title="实例:"></a>实例:</h4><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    ,<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre><div>    ,</div>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>day6-用Python解决各种工作问题</title>
      <link href="/2022/05/14/Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A6/"/>
      <url>/2022/05/14/Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A6/</url>
      
        <content type="html"><![CDATA[<h3 id="本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记"><a href="#本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记" class="headerlink" title="本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记"></a>本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记</h3><h3 id="视频链接-Python零基础到精通7天速成"><a href="#视频链接-Python零基础到精通7天速成" class="headerlink" title="视频链接:Python零基础到精通7天速成"></a>视频链接:<a href="https://www.bilibili.com/video/BV1Gf4y1q7SG?share_source=copy_web">Python零基础到精通7天速成</a></h3><span id="more"></span><h1 id="一、模块和包"><a href="#一、模块和包" class="headerlink" title="一、模块和包"></a>一、模块和包</h1><h2 id="（一）什么是模块"><a href="#（一）什么是模块" class="headerlink" title="（一）什么是模块"></a>（一）什么是模块</h2><p>&amp;emsp;&amp;emsp;在计算机程序的开发过程中，随着程序代码越写越多，在⼀个⽂件⾥代码就会越来越⻓，越来越不容易维护。<br>&amp;emsp;&amp;emsp;<font color="#dd0000">为了编写可维护的代码</font>，我们把很多代码按功能分组，分别放到不同的⽂件⾥，这样，每个⽂件包含的代码就相对较少，很多编程语⾔都采⽤这种组织代码的⽅式。<font color="#dd0000">在Python中，⼀个.py⽂件就可以称之为⼀个模块（Module）</font></p><h4 id="使用模块有什么好处"><a href="#使用模块有什么好处" class="headerlink" title="使用模块有什么好处"></a>使用模块有什么好处</h4><p>&amp;emsp;&amp;emsp;最⼤的好处是<font color="#dd0000">⼤⼤提⾼了代码的可维护性</font>。其次，编写代码不必从零开始。<font color="#dd0000">当⼀个模块编写完毕，就可以被其他地⽅引⽤。</font>我们在编写程序的时候，也经常引⽤其他模块，包括Python内置的模块和来⾃第三⽅的模块。</p><p>&amp;emsp;&amp;emsp;<font color="#dd0000">使⽤模块还可以避免函数名和变量名冲突。</font> 每个模块有独⽴的命名空间，因此相同名字的函数和变量完全可以分别存在不同的模块中，所以，我们⾃⼰在编写模块时，不必考虑名字会与其他模块冲突</p><h4 id="模块的分类"><a href="#模块的分类" class="headerlink" title="模块的分类"></a>模块的分类</h4><p>1、内置标准模块（⼜称标准库）执⾏<font color="#dd0000">help(‘modules’)</font>查看所有python⾃带模块列表<br>2、第三⽅开源模块，可通过pip install 模块名联⽹安装<br>3、⾃定义模块</p><h4 id="模块调用"><a href="#模块调用" class="headerlink" title="模块调用"></a>模块调用</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> module_a <span class="token comment">#导⼊</span><span class="token keyword">from</span> module <span class="token keyword">import</span> xx <span class="token comment"># 导⼊某个模块下的某个⽅法 or ⼦模块</span><span class="token keyword">from</span> module<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx <span class="token keyword">import</span> xx <span class="token keyword">as</span> rename <span class="token comment">#导⼊后⼀个⽅法后重命名</span><span class="token keyword">from</span> module<span class="token punctuation">.</span>xx<span class="token punctuation">.</span>xx <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token comment">#导⼊⼀个模块下的所有⽅法，不建议使⽤</span>module_a<span class="token punctuation">.</span>xxx <span class="token comment">#调⽤</span></code></pre><p>※ 注意：<font color="#dd0000">模块⼀旦被调⽤，即相当于执⾏了另外⼀个py⽂件⾥的代码</font></p><h2 id="（二）自定义模块"><a href="#（二）自定义模块" class="headerlink" title="（二）自定义模块"></a>（二）自定义模块</h2><p>&amp;emsp;&amp;emsp;这个最简单， 创建⼀个.py⽂件，就可以称之为模块，就可以在另外⼀个程序⾥导⼊</p><div align=center><img src="https://img-blog.csdnimg.cn/68ed3adc3b70448fb63a27a232db1868.png" width = 80%></div><h2 id="（六）模块查找路径"><a href="#（六）模块查找路径" class="headerlink" title="（六）模块查找路径"></a>（六）模块查找路径</h2><p>&amp;emsp;&amp;emsp;Python导入模块时会自动在系统环境变量中寻找需要导入的模块或包，如果找不到就会报错。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token comment"># def sayhi():</span><span class="token comment">#     print('我是被调用的')</span><span class="token comment"># </span><span class="token comment"># print('哈哈哈哈')</span><span class="token keyword">print</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token comment"># output:</span><span class="token comment"># ['C:\\Users\\Geng\\Desktop\\我在b站学编程\\python\\day6', </span><span class="token comment">#  'C:\\Users\\Geng\\Desktop\\我在b站学编程\\python', </span><span class="token comment">#  'C:\\Users\\Geng\\anaconda3\\python39.zip', </span><span class="token comment">#  'C:\\Users\\Geng\\anaconda3\\DLLs', </span><span class="token comment">#  'C:\\Users\\Geng\\anaconda3\\lib', </span><span class="token comment">#  'C:\\Users\\Geng\\anaconda3', </span><span class="token comment">#  'C:\\Users\\Geng\\anaconda3\\lib\\site-packages', </span><span class="token comment">#  'C:\\Program Files (x86)\\ArcGIS\\Desktop10.6\\bin', </span><span class="token comment">#  'C:\\Program Files (x86)\\ArcGIS\\Desktop10.6\\ArcPy', </span><span class="token comment">#  'C:\\Program Files (x86)\\ArcGIS\\Desktop10.6\\ArcToolBox\\Scripts', </span><span class="token comment">#  'C:\\Users\\Geng\\anaconda3\\lib\\site-packages\\locket-0.2.1-py3.9.egg', </span><span class="token comment">#  'C:\\Users\\Geng\\anaconda3\\lib\\site-packages\\win32', </span><span class="token comment">#  'C:\\Users\\Geng\\anaconda3\\lib\\site-packages\\win32\\lib', </span><span class="token comment">#  'C:\\Users\\Geng\\anaconda3\\lib\\site-packages\\Pythonwin']</span></code></pre><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><div align=center><img src="https://img-blog.csdnimg.cn/cd5052f2b00348f9a75a43e62528a000.png" width = 50%></div>&emsp;&emsp;使用绝对导入的方法在day6课件下的import_test模块中导入my_first_mode模块。<h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>1、先获取到import_test模块的所有系统环境变量（sys.path()），发现不包括day6<br>2、将其绝对路径向上移动一层到day6后并添加到系统环境变量中</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys<span class="token keyword">import</span> os<span class="token keyword">print</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>path<span class="token punctuation">)</span>  <span class="token comment"># 打印文件的调用路径列表，发现my_first_mode所在的day6文件夹并不在调用列表中</span><span class="token keyword">print</span><span class="token punctuation">(</span>__file__<span class="token punctuation">)</span>  <span class="token comment"># 打印当前模块绝对位置</span><span class="token keyword">print</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 打印当前位置的上一层（课件）</span><span class="token keyword">print</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 打印当前位置的上二层（day6）</span>base_path <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 因为my_first_mode在day6文件夹</span>sys<span class="token punctuation">.</span>path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>base_path<span class="token punctuation">)</span><span class="token keyword">import</span> my_first_mode</code></pre><h2 id="（七）第三方开源模块"><a href="#（七）第三方开源模块" class="headerlink" title="（七）第三方开源模块"></a>（七）第三方开源模块</h2><p>&amp;emsp;&amp;emsp;<a href="https://pypi.org/">https://pypi.org/</a> 是python的开源模块库，截⽌2022年5.15⽇，已经收录了375,660个来⾃全世界python开发者贡献的模块,⼏乎涵盖了你想⽤python做的任何事情。 事实上每个python开发者，只要注册⼀个账号就可以往这个平台上传你⾃⼰的模块，这样全世界的开发者都可以容易的下载并使⽤你的模块。</p><h4 id="下载方法"><a href="#下载方法" class="headerlink" title="下载方法"></a>下载方法</h4><p>1、 直接在上⾯这个⻚⾯上点download,下载后，解压并进⼊⽬录，执⾏以下命令完成安装</p><pre class="language-python" data-language="python"><code class="language-python">编译源码python setup<span class="token punctuation">.</span>py build 安装源码python setup<span class="token punctuation">.</span>py install</code></pre><p>2、直接通过pip安装</p><pre class="language-python" data-language="python"><code class="language-python">pip3 install paramiko <span class="token comment">#paramiko 是模块名</span></code></pre><p>pip命令会⾃动下载模块包并完成安装。软件⼀般会被⾃动安装你python安装⽬录的这个⼦⽬录⾥</p><pre class="language-none"><code class="language-none">&#x2F;your_python_install_path&#x2F;3.6&#x2F;lib&#x2F;python3.6&#x2F;site-packages</code></pre><p>&amp;emsp;&amp;emsp;pip命令默认会连接在国外的python官⽅服务器下载，速度⽐较慢，你还可以使⽤国内的⾖瓣源，数据会定期同步国外官⽹，速度快好多</p><pre class="language-none"><code class="language-none">pip install -i http:&#x2F;&#x2F;pypi.douban.com&#x2F;simple&#x2F; alex_sayhi --trusted-hostpypi.douban.com #alex_sayhi是模块名</code></pre><p>-i 后⾯跟的是⾖瓣源地址</p><pre class="language-—trusted-host" data-language="—trusted-host"><div class="caption"><span>```得加上，是通过⽹站https安全验证⽤的</span></div><code class="language-—trusted-host">## （三）什么是包&amp;emsp;&amp;emsp;若你写的项⽬较复杂，有很多代码⽂件的话，为了⽅便管理，可以⽤包来管理。 &lt;font color&#x3D;&quot;#dd0000&quot;&gt;**⼀个包其实就是⼀个⽂件⽬录，**&lt;&#x2F;font&gt;你可以把属于同⼀个业务线的代码⽂件都放在同⼀个包⾥。#### 如何创建包&amp;emsp;&amp;emsp;只需要&lt;font color&#x3D;&quot;#dd0000&quot;&gt;**在⽬录下创建⼀个空的 __init__.py ⽂件 ，**&lt;&#x2F;font&gt; 这个⽬录就变成了包。这个⽂件叫包的初始化⽂件，⼀般为空，当然也可以写东⻄，&lt;font color&#x3D;&quot;#dd0000&quot;&gt;**当你调⽤这个包下及其任意⼦包的的任意模块时， 这个 __init__.py ⽂件都会先执⾏。**&lt;&#x2F;font&gt;#### 示例以下有a、b 2个包，a2是a的⼦包，b2是b的⼦包&lt;div align&#x3D;center&gt;&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;img-blog.csdnimg.cn&#x2F;3c9cda86f9a344789f214b6872685226.png&quot; width &#x3D; 50%&gt;&lt;&#x2F;div&gt;#### 若在a_module.py模块⾥导⼊b2_mod.py的话，怎么办？&amp;emsp;&amp;emsp;a_module.py的⽂件路径为：&#96;&#96;&#96;pythonprint(__file__)# output: C:\Users\Geng\Desktop\我在b站学编程\python\day6\课件\a\a2\a_module.py</code></pre><p>&amp;emsp;&amp;emsp;想导⼊成功，直接写以下代码就可以</p><pre class="language-none"><code class="language-none">from day6.课件.b.b2 import b2_mod</code></pre><p>&amp;emsp;&amp;emsp;为何从day6开始？⽽不是从 python 或课件开始呢？<br>&amp;emsp;&amp;emsp;因为你的系统环境变量（sys.path()）列表⾥，已经添加了顶级包（python）的路径.<font color="#dd0000"><strong>pycharm会自动将该模块所在位置和该模块的顶级包加入sys.path</strong></font></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token comment"># output: </span><span class="token comment"># ['C:\\Users\\Geng\\Desktop\\我在b站学编程\\python\\day6\\课件\\a\\a2',</span><span class="token comment">#  'C:\\Users\\Geng\\Desktop\\我在b站学编程\\python',  # 就是这个啦</span><span class="token comment">#  'C:\\Users\\Geng\\anaconda3\\python39.zip', </span><span class="token comment">#  'C:\\Users\\Geng\\anaconda3\\DLLs', </span><span class="token comment">#  'C:\\Users\\Geng\\anaconda3\\lib', </span><span class="token comment">#  'C:\\Users\\Geng\\anaconda3', </span><span class="token comment">#  'C:\\Users\\Geng\\anaconda3\\lib\\site-packages',</span><span class="token comment">#  'C:\\Program Files (x86)\\ArcGIS\\Desktop10.6\\bin', </span><span class="token comment">#  'C:\\Program Files (x86)\\ArcGIS\\Desktop10.6\\ArcPy', </span><span class="token comment">#  'C:\\Program Files (x86)\\ArcGIS\\Desktop10.6\\ArcToolBox\\Scripts', </span><span class="token comment">#  'C:\\Users\\Geng\\anaconda3\\lib\\site-packages\\locket-0.2.1-py3.9.egg', </span><span class="token comment">#  'C:\\Users\\Geng\\anaconda3\\lib\\site-packages\\win32', </span><span class="token comment">#  'C:\\Users\\Geng\\anaconda3\\lib\\site-packages\\win32\\lib', </span><span class="token comment">#  'C:\\Users\\Geng\\anaconda3\\lib\\site-packages\\Pythonwin']</span></code></pre><h1 id="二、常用模块-os-amp-sys"><a href="#二、常用模块-os-amp-sys" class="headerlink" title="二、常用模块-os&amp;sys"></a>二、常用模块-os&amp;sys</h1><h2 id="（一）系统调⽤OS模块"><a href="#（一）系统调⽤OS模块" class="headerlink" title="（一）系统调⽤OS模块"></a>（一）系统调⽤OS模块</h2><p>&amp;emsp;&amp;emsp;os 模块提供了很多允许你的程序与操作系统直接交互的功能</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os得到当前⼯作⽬录，即当前Python脚本⼯作的⽬录路径<span class="token punctuation">:</span> os<span class="token punctuation">.</span>getcwd<span class="token punctuation">(</span><span class="token punctuation">)</span>返回指定⽬录下的所有⽂件和⽬录名<span class="token punctuation">:</span>os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span><span class="token punctuation">)</span>函数⽤来删除⼀个⽂件<span class="token punctuation">:</span>os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token punctuation">)</span>删除多个⽬录：os<span class="token punctuation">.</span>removedirs（r“c：\python”）检验给出的路径是否是⼀个⽂件：os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isfile<span class="token punctuation">(</span><span class="token punctuation">)</span>检验给出的路径是否是⼀个⽬录：os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isdir<span class="token punctuation">(</span><span class="token punctuation">)</span>判断是否是绝对路径：os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isabs<span class="token punctuation">(</span><span class="token punctuation">)</span>检验给出的路径是否真地存<span class="token punctuation">:</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token punctuation">)</span>返回⼀个路径的⽬录名和⽂件名<span class="token punctuation">:</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span> e<span class="token punctuation">.</span>gos<span class="token punctuation">.</span>path<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'/home/swaroop/byte/code/poem.txt'</span><span class="token punctuation">)</span> 结果：<span class="token punctuation">(</span><span class="token string">'/home/swaroop/byte/code'</span><span class="token punctuation">,</span> <span class="token string">'poem.txt'</span><span class="token punctuation">)</span>分离扩展名：os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span><span class="token punctuation">)</span> e<span class="token punctuation">.</span>g os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>splitext<span class="token punctuation">(</span><span class="token string">'/usr/local/test.py'</span><span class="token punctuation">)</span> 结果：<span class="token punctuation">(</span><span class="token string">'/usr/local/test'</span><span class="token punctuation">,</span> <span class="token string">'.py'</span><span class="token punctuation">)</span>获取路径名：os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span><span class="token punctuation">)</span>获得绝对路径<span class="token punctuation">:</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span><span class="token punctuation">)</span>获取⽂件名：os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>basename<span class="token punctuation">(</span><span class="token punctuation">)</span>运⾏shell命令<span class="token punctuation">:</span> os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token punctuation">)</span>读取操作系统环境变量HOME的值<span class="token punctuation">:</span>os<span class="token punctuation">.</span>getenv<span class="token punctuation">(</span><span class="token string">"HOME"</span><span class="token punctuation">)</span>返回操作系统所有的环境变量： os<span class="token punctuation">.</span>environ设置系统环境变量，仅程序运⾏时有效：os<span class="token punctuation">.</span>environ<span class="token punctuation">.</span>setdefault<span class="token punctuation">(</span><span class="token string">'HOME'</span><span class="token punctuation">,</span><span class="token string">'/home/alex'</span><span class="token punctuation">)</span>给出当前平台使⽤的⾏终⽌符<span class="token punctuation">:</span>os<span class="token punctuation">.</span>linesep Windows使⽤<span class="token string">'\r\n'</span>，Linux <span class="token keyword">and</span> MAC使⽤<span class="token string">'\n'</span>指示你正在使⽤的平台：os<span class="token punctuation">.</span>name 对于Windows，它是<span class="token string">'nt'</span>，⽽对于Linux<span class="token operator">/</span>Unix⽤户，它是<span class="token string">'posix'</span>重命名：os<span class="token punctuation">.</span>rename（old， new）创建多级⽬录：os<span class="token punctuation">.</span>makedirs（r“c：\python\test”）创建单个⽬录：os<span class="token punctuation">.</span>mkdir（“test”）获取⽂件属性：os<span class="token punctuation">.</span>stat（<span class="token builtin">file</span>）修改⽂件权限与时间戳：os<span class="token punctuation">.</span>chmod（<span class="token builtin">file</span>）获取⽂件⼤⼩：os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>getsize（filename）结合⽬录名与⽂件名：os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">dir</span><span class="token punctuation">,</span>filename<span class="token punctuation">)</span>改变⼯作⽬录到dirname<span class="token punctuation">:</span> os<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span>dirname<span class="token punctuation">)</span>获取当前终端的⼤⼩<span class="token punctuation">:</span> os<span class="token punctuation">.</span>get_terminal_size<span class="token punctuation">(</span><span class="token punctuation">)</span>杀死进程<span class="token punctuation">:</span> os<span class="token punctuation">.</span>kill<span class="token punctuation">(</span><span class="token number">10884</span><span class="token punctuation">,</span>signal<span class="token punctuation">.</span>SIGKILL<span class="token punctuation">)</span></code></pre><h2 id="（二）sys模块"><a href="#（二）sys模块" class="headerlink" title="（二）sys模块"></a>（二）sys模块</h2><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><pre class="language-python" data-language="python"><code class="language-python">sys<span class="token punctuation">.</span>path<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 以列表形式返回系统环境变量</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 获取脚本参数</span></code></pre><h1 id="三、常用模块-time-amp-datetime"><a href="#三、常用模块-time-amp-datetime" class="headerlink" title="三、常用模块-time&amp;datetime"></a>三、常用模块-time&amp;datetime</h1><h2 id="（一）基本概念"><a href="#（一）基本概念" class="headerlink" title="（一）基本概念"></a>（一）基本概念</h2><p>&amp;emsp;&amp;emsp;在平常的代码中，我们常常需要与时间打交道。在Python中，与时间处理有关的模块就包括：time，datetime,calendar(很少⽤，不讲)，下⾯分别来介绍。</p><h4 id="写程序时对时间的处理可以归为以下3种："><a href="#写程序时对时间的处理可以归为以下3种：" class="headerlink" title="写程序时对时间的处理可以归为以下3种："></a>写程序时对时间的处理可以归为以下3种：</h4><p><strong>时间的显示</strong>，在屏幕显示、记录⽇志等 “2022-03-04”<br><strong>时间的转换</strong>，⽐如把字符串格式的⽇期转成Python中的⽇期类型<br><strong>时间的运算</strong>，计算两个⽇期间的差值等</p><h4 id="在Python中，通常有这⼏种⽅式来表示时间："><a href="#在Python中，通常有这⼏种⽅式来表示时间：" class="headerlink" title="在Python中，通常有这⼏种⽅式来表示时间："></a>在Python中，通常有这⼏种⽅式来表示时间：</h4><p><strong>1. 时间戳（timestamp）</strong>, 表示的是从1970年1⽉1⽇00:00:00开始按秒计算的偏移量，<font color="#dd0000"><strong>用于时间的计算。</strong></font>例⼦：1554864776.161901<br><strong>2. 格式化的时间字符串</strong>，⽐如“2020-10-03 17:54”<font color="#dd0000"><strong>用于时间的显示。</strong></font><br><strong>3. 时间对象：</strong>元组（struct_time）共九个元素，由于Python的time模块实现主要调⽤C库，所以各个平台可能有所不同，mac上：time.struct_time(tm_year&#x3D;2020, tm_mon&#x3D;4, tm_mday&#x3D;10, tm_hour&#x3D;2, tm_min&#x3D;53, tm_sec&#x3D;15, tm_wday&#x3D;2, tm_yday&#x3D;100, tm_isdst&#x3D;0)</p><pre class="language-python" data-language="python"><code class="language-python">索引（Index） 属性（Attribute） 值（Values）<span class="token number">0</span> tm_year（年） ⽐如<span class="token number">2011</span><span class="token number">1</span> tm_mon（⽉） <span class="token number">1</span> <span class="token operator">-</span> <span class="token number">12</span><span class="token number">2</span> tm_mday（⽇） <span class="token number">1</span> <span class="token operator">-</span> <span class="token number">31</span><span class="token number">3</span> tm_hour（时） <span class="token number">0</span> <span class="token operator">-</span> <span class="token number">23</span><span class="token number">4</span> tm_min（分） <span class="token number">0</span> <span class="token operator">-</span> <span class="token number">59</span><span class="token number">5</span> tm_sec（秒） <span class="token number">0</span> <span class="token operator">-</span> <span class="token number">61</span><span class="token number">6</span> tm_wday（weekday） <span class="token number">0</span> <span class="token operator">-</span> <span class="token number">6</span>（<span class="token number">0</span>表示周⼀）<span class="token number">7</span> tm_yday（⼀年中的第⼏天） <span class="token number">1</span> <span class="token operator">-</span> <span class="token number">366</span><span class="token number">8</span> tm_isdst（是否是夏令时） 默认为<span class="token operator">-</span><span class="token number">1</span></code></pre><p><strong>UTC时间</strong><br>&amp;emsp;&amp;emsp;UTC（Coordinated Universal Time，世界协调时）亦即格林威治天⽂时间，世界标准时间。在中国为UTC+8，⼜称东8区。DST（Daylight Saving Time）即夏令时。</p><div align=center><img src="https://img-blog.csdnimg.cn/c4fba89d5c0e44ada45f43c4e18238c2.png" width = 80%></div><h2 id="（二）time模块的常⽤⽅法"><a href="#（二）time模块的常⽤⽅法" class="headerlink" title="（二）time模块的常⽤⽅法"></a>（二）time模块的常⽤⽅法</h2><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> time<span class="token comment"># 1、计算机中的时间：时间戳</span>time_stamp <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>time_stamp<span class="token punctuation">)</span>  <span class="token comment"># output：1652668353.8377407</span><span class="token comment"># 2、将时间戳和时间对象的转化</span><span class="token comment"># 时间戳转为时间对象</span>time_struct <span class="token operator">=</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 将时间戳转化为时间对象</span>time_struct_zero <span class="token operator">=</span> time<span class="token punctuation">.</span>gmtime<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 将时间戳转化为零时区的时间对象</span><span class="token keyword">print</span><span class="token punctuation">(</span>time_struct<span class="token punctuation">)</span>  <span class="token comment"># output：time.struct_time(tm_year=2022, tm_mon=5, tm_mday=16, tm_hour=10, tm_min=25, tm_sec=57, tm_wday=0, tm_yday=136, tm_isdst=0)</span><span class="token keyword">print</span><span class="token punctuation">(</span>time_struct_zero<span class="token punctuation">)</span>  <span class="token comment"># output：time.struct_time(tm_year=2022, tm_mon=5, tm_mday=16, tm_hour=2, tm_min=25, tm_sec=57, tm_wday=0, tm_yday=136, tm_isdst=0)</span><span class="token comment"># 时间对象转为时间戳</span>time_stamp1 <span class="token operator">=</span> time<span class="token punctuation">.</span>mktime<span class="token punctuation">(</span>time_struct<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>time_stamp1<span class="token punctuation">)</span>  <span class="token comment"># output: 1652668353.0</span><span class="token comment"># 3、时间对象和时间字符串的转化</span><span class="token comment"># 时间对象转化为时间字符串</span>time_str <span class="token operator">=</span> time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">'%Y-%m-%d %H:%M:%S'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>time_str<span class="token punctuation">)</span>  <span class="token comment"># 2022-05-16 10:34:15</span><span class="token comment"># 时间字符串转化为时间对象</span>time_struct1 <span class="token operator">=</span> time<span class="token punctuation">.</span>strptime<span class="token punctuation">(</span>time_str<span class="token punctuation">,</span> <span class="token string">'%Y-%m-%d %H:%M:%S'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>time_struct1<span class="token punctuation">)</span>  <span class="token comment"># output:time.struct_time(tm_year=2022, tm_mon=5, tm_mday=16, tm_hour=10, tm_min=34, tm_sec=15, tm_wday=0, tm_yday=136, tm_isdst=-1)</span><span class="token comment"># 4、sleep</span>s_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s_time<span class="token punctuation">)</span>  <span class="token comment"># output:1652670953.2851179</span>time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>e_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>e_time<span class="token punctuation">)</span>  <span class="token comment"># output：1652670956.2869053</span></code></pre><h4 id="字符串转时间格式对应表"><a href="#字符串转时间格式对应表" class="headerlink" title="字符串转时间格式对应表"></a>字符串转时间格式对应表</h4><div align=center><img src="https://img-blog.csdnimg.cn/ebc2d679d63440f8b9ca4c545323846d.png" width = 80%></div><div align=center><img src="https://img-blog.csdnimg.cn/d6aee8de24f6464eab702e73657bac77.png" width = 80%></div><h4 id="最后为了容易记住转换关系，看下图"><a href="#最后为了容易记住转换关系，看下图" class="headerlink" title="最后为了容易记住转换关系，看下图"></a>最后为了容易记住转换关系，看下图</h4><div align=center><img src="https://img-blog.csdnimg.cn/d88a02b06aad491e9dd115a22bfcd822.png" width = 80%></div><h2 id="（三）datetime模块"><a href="#（三）datetime模块" class="headerlink" title="（三）datetime模块"></a>（三）datetime模块</h2><p>&amp;emsp;&amp;emsp;相⽐于time模块，datetime模块的接⼝则更直观、更容易调⽤</p><h4 id="datetime模块定义了下⾯这⼏个类："><a href="#datetime模块定义了下⾯这⼏个类：" class="headerlink" title="datetime模块定义了下⾯这⼏个类："></a>datetime模块定义了下⾯这⼏个类：</h4><pre class="language-python" data-language="python"><code class="language-python">datetime<span class="token punctuation">.</span>date： <span class="token comment"># 表示⽇期的类。常⽤的属性有year, month, day</span>datetime<span class="token punctuation">.</span>time： <span class="token comment"># 表示时间的类。常⽤的属性有hour, minute, second, microsecond</span>datetime<span class="token punctuation">.</span>datetime： <span class="token comment"># 表示⽇期时间</span>datetime<span class="token punctuation">.</span>timedelta： <span class="token comment"># 表示时间间隔，即两个时间点之间的⻓度</span>datetime<span class="token punctuation">.</span>tzinfo： <span class="token comment"># 与时区有关的相关信息。（这⾥不详细充分讨论该类，感兴趣的童鞋可以参考python⼿册）</span></code></pre><h4 id="我们需要记住的⽅法仅以下⼏个："><a href="#我们需要记住的⽅法仅以下⼏个：" class="headerlink" title="我们需要记住的⽅法仅以下⼏个："></a>我们需要记住的⽅法仅以下⼏个：</h4><pre class="language-python" data-language="python"><code class="language-python">d<span class="token operator">=</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 返回当前的datetime⽇期类型, d.timestamp(),d.today(),d.year,d.timetuple()等⽅法可以调⽤</span>datetime<span class="token punctuation">.</span>date<span class="token punctuation">.</span>fromtimestamp<span class="token punctuation">(</span><span class="token number">322222</span><span class="token punctuation">)</span>  <span class="token comment"># 把⼀个时间戳转为datetime⽇期类型</span></code></pre><h4 id="时间运算"><a href="#时间运算" class="headerlink" title="时间运算"></a><font color="#dd0000">时间运算</font></h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">821218</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> datetime<span class="token punctuation">.</span>timedelta<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment">#当前时间 +4天</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">276589</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> datetime<span class="token punctuation">.</span>timedelta<span class="token punctuation">(</span>hours<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token comment">#当前时间+4⼩时</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">876275</span><span class="token punctuation">)</span></code></pre><h4 id="时间替换"><a href="#时间替换" class="headerlink" title="时间替换"></a><font color="#dd0000">时间替换</font></h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> d<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>year<span class="token operator">=</span><span class="token number">2999</span><span class="token punctuation">,</span>month<span class="token operator">=</span><span class="token number">11</span><span class="token punctuation">,</span>day<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>datetime<span class="token punctuation">.</span>date<span class="token punctuation">(</span><span class="token number">2999</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span></code></pre><h1 id="四、常用模块-random"><a href="#四、常用模块-random" class="headerlink" title="四、常用模块-random"></a>四、常用模块-random</h1><p>&amp;emsp;&amp;emsp;程序中有很多地⽅需要⽤到随机字符，⽐如登录⽹站的随机验证码，通过random模块可以很容易⽣成随机字符串</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> random<span class="token punctuation">.</span>randrange<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">#返回1-10之间的⼀个随机数，不包括10</span><span class="token operator">>></span><span class="token operator">></span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token comment">#返回1-10之间的⼀个随机数，包括10</span><span class="token operator">>></span><span class="token operator">></span> random<span class="token punctuation">.</span>randrange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">#随机选取0到100间的偶数</span><span class="token operator">>></span><span class="token operator">></span> random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#返回⼀个随机浮点数</span><span class="token operator">>></span><span class="token operator">></span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token string">'abce3#$@1'</span><span class="token punctuation">)</span> <span class="token comment">#返回⼀个给定数据集合中的随机字符</span><span class="token string">'#'</span><span class="token operator">>></span><span class="token operator">></span> random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span><span class="token string">'abcdefghij'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment">#从多个字符中选取特定数量的字符</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">]</span><span class="token comment">#⽣成随机字符串</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> string<span class="token operator">>></span><span class="token operator">></span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>string<span class="token punctuation">.</span>ascii_lowercase <span class="token operator">+</span> string<span class="token punctuation">.</span>digits<span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token string">'4fvda1'</span><span class="token comment">#洗牌</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> random<span class="token punctuation">.</span>shuffle<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span></code></pre><h1 id="五、常用模块-json序列"><a href="#五、常用模块-json序列" class="headerlink" title="五、常用模块-json序列"></a>五、常用模块-json序列</h1><h2 id="（一）概念"><a href="#（一）概念" class="headerlink" title="（一）概念"></a>（一）概念</h2><p>&amp;emsp;&amp;emsp;JSON(JavaScriptObject Notation, JS 对象简谱) 是⼀种轻量级的数据交换格式。它采⽤完全独⽴于编程<br>语⾔的⽂本格式来存储和表示数据。简洁和清晰的层次结构使得 JSON 成为理想的数据交换语⾔。 易于⼈阅读和编写，同时也易于机器解析和⽣成，并有效地提升⽹络传输效率。</p><div align=center><img src="https://img-blog.csdnimg.cn/ca4b4eb7be0d4b6d98b0b08c4a6f384b.png" width = 80%></div>&emsp;&emsp;Json的作⽤是⽤于不同语⾔接⼝间的数据交换，⽐如你把python的list、dict直接扔给javascript, 它是解析不了的。两个语⾔互相谁也不认识。Json就像是计算机界的英语 ，可以帮各个语⾔之间实现数据类型的相互转换。<div align=center><img src="https://img-blog.csdnimg.cn/ec2fd65decbe488dada8c667ce3e1673.png" width = 80%></div><div align=center><img src="https://img-blog.csdnimg.cn/01d31de8b16646778a1ab4ceaa56d76d.png" width = 80%></div><h4 id="JSON⽀持的数据类型"><a href="#JSON⽀持的数据类型" class="headerlink" title="JSON⽀持的数据类型"></a>JSON⽀持的数据类型</h4><p>&amp;emsp;&amp;emsp;Python中的字符串、数字、列表、字典、集合、布尔类型，都可以被序列化成JSON字符串，被其它任何编程语⾔解析</p><h4 id="什么是序列化？"><a href="#什么是序列化？" class="headerlink" title="什么是序列化？"></a>什么是序列化？</h4><p>&amp;emsp;&amp;emsp;序列化是指把内存⾥的数据类型转变成字符串，以使其能存储到硬盘或通过⽹络传输到远程，因为硬盘或⽹络传输时只能接受bytes</p><h4 id="为什么要序列化？"><a href="#为什么要序列化？" class="headerlink" title="为什么要序列化？"></a>为什么要序列化？</h4><p>&amp;emsp;&amp;emsp;你打游戏过程中，打累了，停下来，关掉游戏、想过2天再玩，2天之后，游戏⼜从你上次停⽌的地⽅继续运⾏，你上次游戏的进度肯定保存在硬盘上了，是以何种形式呢？游戏过程中产⽣的很多临时数据是不规律的，可能在你关掉游戏时正好有10个列表，3个嵌套字典的数据集合在内存⾥，需要存下来？你如何存？把列表变成⽂件⾥的多⾏多列形式？那嵌套字典呢？根本没法存。所以，若是有种办法可以直接把内存数据存到硬盘上，下次程序再启动，再从硬盘上读回来，还是原来的格式的话，那是极好的。</p><h4 id="⽤于序列化的两个模块"><a href="#⽤于序列化的两个模块" class="headerlink" title="⽤于序列化的两个模块"></a>⽤于序列化的两个模块</h4><p>1、json，⽤于字符串和python数据类型间进⾏转换<br>2、pickle，⽤于python特有的类型和 python的数据类型间进⾏转换</p><h4 id="pickle"><a href="#pickle" class="headerlink" title="pickle"></a>pickle</h4><p>模块提供了四个功能：dumps、dump、loads、load</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pickledata <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'k1'</span><span class="token punctuation">:</span><span class="token number">123</span><span class="token punctuation">,</span><span class="token string">'k2'</span><span class="token punctuation">:</span><span class="token string">'Hello'</span><span class="token punctuation">&#125;</span><span class="token comment"># pickle.dumps 将数据通过特殊的形式转换位只有python语⾔认识的字符串</span>p_str <span class="token operator">=</span> pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 注意dumps会把数据变成bytes格式</span><span class="token keyword">print</span><span class="token punctuation">(</span>p_str<span class="token punctuation">)</span><span class="token comment"># pickle.dump 将数据通过特殊的形式转换位只有python语⾔认识的字符串，并写⼊⽂件</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'result.pk'</span><span class="token punctuation">,</span><span class="token string">"wb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span> pickle<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>data<span class="token punctuation">,</span>fp<span class="token punctuation">)</span><span class="token comment"># pickle.load 从⽂件⾥加载</span>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"result.pk"</span><span class="token punctuation">,</span><span class="token string">"rb"</span><span class="token punctuation">)</span>d <span class="token operator">=</span> pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span></code></pre><h4 id="json"><a href="#json" class="headerlink" title="json"></a>json</h4><p>Json模块也提供了四个功能：dumps、dump、loads、load，⽤法跟pickle⼀致</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> json<span class="token comment"># json.dumps 将数据通过特殊的形式转换位所有程序语⾔都认识的字符串</span>j_str <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># 注意json dumps⽣成的是字符串，不是bytes</span><span class="token keyword">print</span><span class="token punctuation">(</span>j_str<span class="token punctuation">)</span><span class="token comment">#dump⼊⽂件</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'result.json'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fp<span class="token punctuation">:</span> json<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>data<span class="token punctuation">,</span>fp<span class="token punctuation">)</span><span class="token comment">#从⽂件⾥load</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"result.json"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span> d <span class="token operator">=</span> json<span class="token punctuation">.</span>load<span class="token punctuation">(</span>f<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span></code></pre><h4 id="json-vs-pickle"><a href="#json-vs-pickle" class="headerlink" title="json vs pickle:"></a>json vs pickle:</h4><p><strong>json</strong><br>优点：跨语⾔(不同语⾔间的数据传递可⽤json交接)、体积⼩<br>缺点：只能⽀持int\str\list\tuple\dict<br><strong>Pickle</strong><br>优点：专为python设计，⽀持python所有的数据类型<br>缺点：只能在python中使⽤，存储数据占空间⼤</p><h1 id="六、常用模块-excel处理"><a href="#六、常用模块-excel处理" class="headerlink" title="六、常用模块-excel处理"></a>六、常用模块-excel处理</h1><p>&amp;emsp;&amp;emsp;第3⽅开源模块,安装</p><pre class="language-python" data-language="python"><code class="language-python">pip install openpyxl</code></pre><h2 id="（一）打开⽂件"><a href="#（一）打开⽂件" class="headerlink" title="（一）打开⽂件"></a>（一）打开⽂件</h2><h4 id="1、创建"><a href="#1、创建" class="headerlink" title="1、创建"></a>1、创建</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl <span class="token keyword">import</span> Workbook<span class="token comment"># 实例化</span>wb <span class="token operator">=</span> Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 获取当前active的sheet</span>ws <span class="token operator">=</span> wb<span class="token punctuation">.</span>active<span class="token keyword">print</span><span class="token punctuation">(</span>sheet<span class="token punctuation">.</span>title<span class="token punctuation">)</span> <span class="token comment"># 打印sheet表名</span>sheet<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">"salary luffy"</span> <span class="token comment"># 改sheet 名</span></code></pre><h4 id="2、打开已有⽂件"><a href="#2、打开已有⽂件" class="headerlink" title="2、打开已有⽂件"></a>2、打开已有⽂件</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">from</span> openpyxl <span class="token keyword">import</span> load_workbook<span class="token operator">>></span><span class="token operator">></span> wb2 <span class="token operator">=</span> load_workbook<span class="token punctuation">(</span><span class="token string">'⽂件名称.xlsx'</span><span class="token punctuation">)</span></code></pre><h2 id="（二）增删改查"><a href="#（二）增删改查" class="headerlink" title="（二）增删改查"></a>（二）增删改查</h2><h4 id="1、写数据"><a href="#1、写数据" class="headerlink" title="1、写数据"></a>1、写数据</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># ⽅式⼀：数据可以直接分配到单元格中(可以输⼊公式)</span>sheet<span class="token punctuation">[</span><span class="token string">"C5"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"Hello ⾦⻆⼤王"</span>sheet<span class="token punctuation">[</span><span class="token string">"C7"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"Hello ⾦⻆⼤王2"</span><span class="token comment"># ⽅式⼆：可以附加⾏，从第⼀列开始附加(从最下⽅空⽩处，最左开始)(可以输⼊多⾏)</span>sheet<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># ⽅式三：Python 类型会被⾃动转换</span>sheet<span class="token punctuation">[</span><span class="token string">'A3'</span><span class="token punctuation">]</span> <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y-%m-%d"</span><span class="token punctuation">)</span></code></pre><h4 id="2、选择表"><a href="#2、选择表" class="headerlink" title="2、选择表"></a>2、选择表</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># sheet 名称可以作为 key 进⾏索引</span>ws3 <span class="token operator">=</span> wb<span class="token punctuation">[</span><span class="token string">"New Title"</span><span class="token punctuation">]</span>ws4 <span class="token operator">=</span> wb<span class="token punctuation">.</span>get_sheet_by_name<span class="token punctuation">(</span><span class="token string">"New Title"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>wb<span class="token punctuation">.</span>get_sheet_names<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 打印所有的sheet</span>sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span>worksheets<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment"># 获得第1个sheet</span></code></pre><h4 id="3、保存表"><a href="#3、保存表" class="headerlink" title="3、保存表"></a>3、保存表</h4><pre class="language-python" data-language="python"><code class="language-python">wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'⽂件名称.xlsx'</span><span class="token punctuation">)</span></code></pre><h4 id="4、删除工作表"><a href="#4、删除工作表" class="headerlink" title="4、删除工作表"></a>4、删除工作表</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># ⽅式⼀</span>wb<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>sheet<span class="token punctuation">)</span><span class="token comment"># ⽅式⼆</span><span class="token keyword">del</span> wb<span class="token punctuation">[</span>sheet<span class="token punctuation">]</span></code></pre><h2 id="（三）花式遍历表数据"><a href="#（三）花式遍历表数据" class="headerlink" title="（三）花式遍历表数据"></a>（三）花式遍历表数据</h2><h4 id="1、按行遍历"><a href="#1、按行遍历" class="headerlink" title="1、按行遍历"></a>1、按行遍历</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> row <span class="token keyword">in</span> sheet<span class="token punctuation">:</span> <span class="token comment"># 循环获取表数据</span>    <span class="token keyword">for</span> cell <span class="token keyword">in</span> row<span class="token punctuation">:</span> <span class="token comment"># 循环获取每个单元格数据</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span>value<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">","</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h4 id="2、按列遍历"><a href="#2、按列遍历" class="headerlink" title="2、按列遍历"></a>2、按列遍历</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># A1, A2, A3这样的顺序</span><span class="token keyword">for</span> column <span class="token keyword">in</span> sheet<span class="token punctuation">.</span>columns<span class="token punctuation">:</span>    <span class="token keyword">for</span> cell <span class="token keyword">in</span> column<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span>value<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">","</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h4 id="3、遍历指定⾏-amp-列"><a href="#3、遍历指定⾏-amp-列" class="headerlink" title="3、遍历指定⾏&amp;列"></a>3、遍历指定⾏&amp;列</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 从第2⾏开始⾄第5⾏，每⾏打印5列</span><span class="token keyword">for</span> row <span class="token keyword">in</span> sheet<span class="token punctuation">.</span>iter_rows<span class="token punctuation">(</span>min_row<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>max_row<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>max_col<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> cell <span class="token keyword">in</span> row<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span>value<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">","</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h4 id="4、遍历指定⼏列的数据-取得第2到第5列的数据"><a href="#4、遍历指定⼏列的数据-取得第2到第5列的数据" class="headerlink" title="4、遍历指定⼏列的数据-取得第2到第5列的数据"></a>4、遍历指定⼏列的数据-取得第2到第5列的数据</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> col <span class="token keyword">in</span> sheet<span class="token punctuation">.</span>iter_cols<span class="token punctuation">(</span>min_col<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>max_col<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> col<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>value<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">","</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h2 id="（四）设置单元格样式"><a href="#（四）设置单元格样式" class="headerlink" title="（四）设置单元格样式"></a>（四）设置单元格样式</h2><h4 id="1、需导⼊的类"><a href="#1、需导⼊的类" class="headerlink" title="1、需导⼊的类"></a>1、需导⼊的类</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl<span class="token punctuation">.</span>styles <span class="token keyword">import</span> Font<span class="token punctuation">,</span> colors<span class="token punctuation">,</span> Alignment</code></pre><h4 id="2、字体"><a href="#2、字体" class="headerlink" title="2、字体"></a>2、字体</h4><p>&amp;emsp;&amp;emsp;下⾯的代码指定了等线24号，加粗斜体，字体颜⾊红⾊。直接使⽤cell的font属性，将Font对象赋值给它。</p><pre class="language-python" data-language="python"><code class="language-python">bold_itatic_24_font <span class="token operator">=</span> Font<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'等线'</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">24</span><span class="token punctuation">,</span> italic<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> color<span class="token operator">=</span>colors<span class="token punctuation">.</span>RED<span class="token punctuation">,</span>bold<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment"># 声明样式</span>sheet<span class="token punctuation">[</span><span class="token string">'A1'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>font <span class="token operator">=</span> bold_itatic_24_font <span class="token comment"># 给单元格设置样式</span></code></pre><h4 id="3、对齐方式"><a href="#3、对齐方式" class="headerlink" title="3、对齐方式"></a>3、对齐方式</h4><p>&amp;emsp;&amp;emsp;也是直接使⽤cell的属性aligment，这⾥指定垂直居中和⽔平居中。除了center，还可以使⽤right、left<br>等等参数。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 设置B1中的数据垂直居中和⽔平居中</span>sheet<span class="token punctuation">[</span><span class="token string">'B1'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>alignment <span class="token operator">=</span> Alignment<span class="token punctuation">(</span>horizontal<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span> vertical<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">)</span></code></pre><h4 id="4、设置⾏⾼-amp-列宽"><a href="#4、设置⾏⾼-amp-列宽" class="headerlink" title="4、设置⾏⾼&amp;列宽"></a>4、设置⾏⾼&amp;列宽</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 第2⾏⾏⾼</span>sheet<span class="token punctuation">.</span>row_dimensions<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">40</span><span class="token comment"># C列列宽</span>sheet<span class="token punctuation">.</span>column_dimensions<span class="token punctuation">[</span><span class="token string">'C'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token number">30</span></code></pre><h2 id="（五）小练习"><a href="#（五）小练习" class="headerlink" title="（五）小练习"></a>（五）小练习</h2><h4 id="练习数据-iris"><a href="#练习数据-iris" class="headerlink" title="练习数据-iris"></a>练习数据-iris</h4><pre class="language-none"><code class="language-none">序号,sepal_length(cm),sepal_width(cm),petal_length(cm),petal_width(cm),outcome0,5.1,3.5,1.4,0.2,o1,4.9,3,1.4,0.2,02,4.7,3.2,1.3,0.2,03,4.6,31,1.5,0.2,04,5,3.6,1.4,0.2,05,5.4,3.9,1.7,0.4,06,4.6,3.4,1.4,0.3,07,5,3.4,1.5,0.2,08,4.4,2.9,1.4,0.2,09,4.9,3.1,1.5,0.1,010,5.4,3.7,1.5,0.2,011,4.8,3.4,1.6,0.2,012,4.8,3,1.4,0.1,013,4.3,3,1.1,0.1,014,5.8,4,1.2,0.2,015,5.7,4.4,1.5,0.4,016,5.4,3.9,1.3,0.4,017,5.1,3.5,1.4,0.3,018,5.7,3.8,1.7,0.3,019,5.1,3.8,1.5,0.3,020,5.4,3.4,1.7,0.2,021,5.1,3.7,1.5,0.4,022,4.6,3.6,1,0.2,023,5.1,3.3,1.7,0.5,024,4.8,3.4,1.9,0.2,025,5,3,1.6,0.2,026,5,3.4,1.6,0.4,027,5.2,3.5,1.5,0.2,028,5.2,3.4,1.4,0.2,029,4.7,3.2,1.6,0.2,030,4.8,3.1,1.6,0.2,031,5.4,3.4,1.5,0.4,032,5.2,4.1,1.5,0.1,033,5.5,4.2,1.4,0.2,034,4.9,3.1,1.5,0.2,035,5,3.2,1.2,0.2,036,5.5,3.5,1.3,0.2,037,4.9,3.6,1.4,0.1,038,4.4,3,1.3,0.2,039,5.1,3.4,1.5,0.2,040,5,3.5,1.3,0.3,041,4.5,2.3,1.3,0.3,042,4.4,3.2,1.3,0.2,043,5,3.5,1.6,0.6,044,5.1,3.8,1.9,0.4,045,4.8,3,1.4,0.3,046,5.1,3.8,1.6,0.2,047,4.6,3.2,1.4,0.2,048,5.3,3.7,1.5,0.2,049,5,3.3,1.4,0.2,050,7,3.2,4.7,1.4,1</code></pre><h4 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h4><p>1、创建iris.xlsx文件，导入上述数据<br>2、新增一行数据，516.43.24.51.51<br>3、将C5改为31,F2改为0<br>4、分别按行、按列遍历数据<br>5、获取第5行到第22行，C到E列的数据<br>6、将D9单元格字体设为新罗马24号，加粗斜体，字体颜⾊红⾊<br>7、将D9单元格指定垂直居中和⽔平居中</p><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl <span class="token keyword">import</span> Workbook<span class="token keyword">from</span> openpyxl<span class="token punctuation">.</span>styles <span class="token keyword">import</span> Font<span class="token punctuation">,</span> colors<span class="token punctuation">,</span> Alignment<span class="token comment"># 1、创建iris.xlsx文件，导入数据</span><span class="token comment"># file_iris = open('iris', encoding='utf-8')</span><span class="token comment"># for line in file_iris:</span>wb <span class="token operator">=</span> Workbook<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 实例化Workbook</span>sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span>active  <span class="token comment"># 激活该sheet</span>sheet<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">'iris'</span>  <span class="token comment"># 更改sheet名称</span><span class="token comment"># 写入数据</span>file_iris <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'iris'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token keyword">for</span> line <span class="token keyword">in</span> file_iris<span class="token punctuation">:</span>    sheet<span class="token punctuation">.</span>append<span class="token punctuation">(</span>line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 2、新增一行数据，516.43.24.51.51</span>sheet<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'51'</span><span class="token punctuation">,</span> <span class="token string">'6.4'</span><span class="token punctuation">,</span> <span class="token string">'3.2'</span><span class="token punctuation">,</span> <span class="token string">'4.5'</span><span class="token punctuation">,</span> <span class="token string">'1.5'</span><span class="token punctuation">,</span> <span class="token string">'1'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 3、将C5改为3.1,F2改为0</span>sheet<span class="token punctuation">[</span><span class="token string">'C5'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'3.1'</span>sheet<span class="token punctuation">[</span><span class="token string">'F2'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'0'</span><span class="token comment"># 4、分别按行、按列遍历数据</span><span class="token comment"># 按行</span><span class="token keyword">for</span> row <span class="token keyword">in</span> sheet<span class="token punctuation">:</span>    <span class="token keyword">for</span> cell <span class="token keyword">in</span> row<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span>value<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 按列</span><span class="token keyword">for</span> col <span class="token keyword">in</span> sheet<span class="token punctuation">.</span>columns<span class="token punctuation">:</span>    <span class="token keyword">for</span> cell <span class="token keyword">in</span> col<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span>value<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 5、获取第5行到第22行，C到E列的数据</span><span class="token keyword">for</span> row <span class="token keyword">in</span> sheet<span class="token punctuation">.</span>iter_cols<span class="token punctuation">(</span>min_row<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> max_row<span class="token operator">=</span><span class="token number">22</span><span class="token punctuation">,</span> min_col<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> max_col<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> cell <span class="token keyword">in</span> row<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span>value<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">','</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 6、将D9单元格字体设为新罗马24号，加粗斜体，字体颜⾊红⾊</span>my_style <span class="token operator">=</span> Font<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'Times New Roman'</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">24</span><span class="token punctuation">,</span> italic<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> color<span class="token operator">=</span>colors<span class="token punctuation">.</span>COLOR_INDEX<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>bold<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>  <span class="token comment"># 声明样式</span>sheet<span class="token punctuation">[</span><span class="token string">'D9'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>font <span class="token operator">=</span> my_style<span class="token comment"># 将D9单元格指定垂直居中和⽔平居中</span>sheet<span class="token punctuation">[</span><span class="token string">'D9'</span><span class="token punctuation">]</span><span class="token punctuation">.</span>alignment <span class="token operator">=</span> Alignment<span class="token punctuation">(</span>horizontal<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">,</span> vertical<span class="token operator">=</span><span class="token string">'center'</span><span class="token punctuation">)</span><span class="token comment"># 保存文件</span>wb<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">'iris.xlsx'</span><span class="token punctuation">)</span></code></pre><h1 id="七、常用模块-邮件发送"><a href="#七、常用模块-邮件发送" class="headerlink" title="七、常用模块-邮件发送"></a>七、常用模块-邮件发送</h1><p>&amp;emsp;&amp;emsp;SMTP（Simple Mail Transfer Protocol）即简单邮件传输协议,它是⼀组⽤于由源地址到⽬的地址传送<br>邮件的规则，由它来控制信件的中转⽅式。</p><div align=center><img src="https://img-blog.csdnimg.cn/7376ab924d6c4cde93a5a37608acc310.png" width = 80%></div><h4 id="想实现发送邮件需经过以下⼏步："><a href="#想实现发送邮件需经过以下⼏步：" class="headerlink" title="想实现发送邮件需经过以下⼏步："></a>想实现发送邮件需经过以下⼏步：</h4><p>1、登录 邮件服务器<br>2、构造符合邮件协议规则要求的邮件内容 （email模块）<br>3、发送<br>&amp;emsp;&amp;emsp;Python对SMTP⽀持有smtplib 和 email 两个模块， email 负责构造邮件， smtplib 负责发送邮件,它对smtp协议进⾏了简单的封装。</p><h4 id="发送⼀封最简单的信语法如下："><a href="#发送⼀封最简单的信语法如下：" class="headerlink" title="发送⼀封最简单的信语法如下："></a>发送⼀封最简单的信语法如下：</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> smtplib<span class="token keyword">from</span> email<span class="token punctuation">.</span>mime<span class="token punctuation">.</span>text <span class="token keyword">import</span> MIMEText  <span class="token comment"># 构造邮件正文</span><span class="token keyword">from</span> email<span class="token punctuation">.</span>header <span class="token keyword">import</span> Header  <span class="token comment"># 邮件头</span><span class="token comment"># 登录邮件服务器</span>smtp_obj <span class="token operator">=</span> smtplib<span class="token punctuation">.</span>SMTP_SSL<span class="token punctuation">(</span><span class="token string">"smtp.qq.com"</span><span class="token punctuation">,</span> <span class="token number">465</span><span class="token punctuation">)</span>  <span class="token comment"># 发件⼈邮箱中的SMTP服务器，端⼝是25</span>smtp_obj<span class="token punctuation">.</span>login<span class="token punctuation">(</span><span class="token string">"xxxxxxxxxx@qq.com"</span><span class="token punctuation">,</span> <span class="token string">"bvidphbzxnsjjdch"</span><span class="token punctuation">)</span>  <span class="token comment"># 括号中对应的是发件⼈邮箱账号、邮箱密码</span><span class="token comment"># smtp_obj.set_debuglevel(1) # 显示调试信息</span><span class="token comment"># 设置邮件头信息</span>msg <span class="token operator">=</span> MIMEText<span class="token punctuation">(</span><span class="token string">"xxxxxxxxxxx"</span><span class="token punctuation">,</span> <span class="token string">"plain"</span><span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span>  <span class="token comment"># plain表示文件内容为纯文本</span>msg<span class="token punctuation">[</span><span class="token string">"From"</span><span class="token punctuation">]</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span><span class="token string">"xxxxxxxx"</span><span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span>  <span class="token comment"># 发送者</span>msg<span class="token punctuation">[</span><span class="token string">"To"</span><span class="token punctuation">]</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span><span class="token string">"xxxxxx"</span><span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span>  <span class="token comment"># 接收者</span>msg<span class="token punctuation">[</span><span class="token string">"Subject"</span><span class="token punctuation">]</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span><span class="token string">"xxxxx"</span><span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span>  <span class="token comment"># 主题</span><span class="token comment"># 发送</span>smtp_obj<span class="token punctuation">.</span>sendmail<span class="token punctuation">(</span><span class="token string">"xxxxxxxxx@qq.com"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"xxxxxxxxxx@qq.com"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> msg<span class="token punctuation">.</span>as_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 接受方可使用列表同时传入多个值</span></code></pre><p>※ 如何查看发送邮件服务器-以QQ邮箱为例：<br>1、点击设置-账户</p><div align=center><img src="https://img-blog.csdnimg.cn/a752685766854b2f8e18af011e4831a2.png" width = 80%></div>2、IMAP/SMTP服务-点击什么是 IMAP，它又是如何设置？<div align=center><img src="https://img-blog.csdnimg.cn/a403ea4074b8419ba563ee0992f064dd.png" width = 80%></div>3、进入页面<div align=center><img src="https://img-blog.csdnimg.cn/7ca6edb3f0b9412e81fea294e32d0eb9.png" width = 80%></div><p>※ 如何查看发送邮件服务器-以QQ邮箱为例：msg的[“From”]、[“To”]和[“Subject”]为邮件显示的发送者，接受者和主题，可以自定义smtp_obj.sendmail()中才传入发送方、接收方和内容。</p><div align=center><img src="https://img-blog.csdnimg.cn/3481f353c4a445a290d2eecfb41f8531.png" width = 80%></div><h4 id="发送HTML格式的邮件"><a href="#发送HTML格式的邮件" class="headerlink" title="发送HTML格式的邮件"></a>发送HTML格式的邮件</h4><p>&amp;emsp;&amp;emsp;只需要改⼀下 MIMEText() 第2个参数为 html 就可以</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 设置邮件头信息</span>mail_body <span class="token operator">=</span> <span class="token triple-quoted-string string">''' &lt;h5>hello,⼩哥哥&lt;/h5> &lt;p> 你好同学 &lt;ahref="http://wx1.sinaimg.cn/mw1024/5ff6135fgy1gdnghz2vbsg205k09ob2d.gif">这是我的照⽚&lt;/a>&lt;/p> &lt;/p>'''</span>msg <span class="token operator">=</span> MIMEText<span class="token punctuation">(</span>mail_body<span class="token punctuation">,</span> <span class="token string">"html"</span><span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span></code></pre><h4 id="在HTML⽂本中插⼊图⽚"><a href="#在HTML⽂本中插⼊图⽚" class="headerlink" title="在HTML⽂本中插⼊图⽚"></a>在HTML⽂本中插⼊图⽚</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding:utf-8 -*-</span><span class="token comment"># created by Alex Li - 路⻜学城</span><span class="token keyword">import</span> smtplib<span class="token keyword">from</span> email<span class="token punctuation">.</span>mime<span class="token punctuation">.</span>image <span class="token keyword">import</span> MIMEImage<span class="token keyword">from</span> email<span class="token punctuation">.</span>mime<span class="token punctuation">.</span>multipart <span class="token keyword">import</span> MIMEMultipart<span class="token keyword">from</span> email<span class="token punctuation">.</span>mime<span class="token punctuation">.</span>text <span class="token keyword">import</span> MIMEText<span class="token keyword">from</span> email<span class="token punctuation">.</span>header <span class="token keyword">import</span> Header<span class="token comment"># 登录邮件服务器</span>smtp_obj <span class="token operator">=</span> smtplib<span class="token punctuation">.</span>SMTP_SSL<span class="token punctuation">(</span><span class="token string">"smtp.exmail.qq.com"</span><span class="token punctuation">,</span> <span class="token number">465</span><span class="token punctuation">)</span> <span class="token comment"># 发件⼈邮箱中的SMTP服务</span>器，端⼝是<span class="token number">25</span>smtp_obj<span class="token punctuation">.</span>login<span class="token punctuation">(</span><span class="token string">"nami@luffycity.com"</span><span class="token punctuation">,</span> <span class="token string">"333dsfsf#$#"</span><span class="token punctuation">)</span> <span class="token comment"># 括号中对应的是发件⼈邮箱账</span>号、邮箱密码smtp_obj<span class="token punctuation">.</span>set_debuglevel<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment"># 显示调试信息</span><span class="token comment"># 设置邮件头信息</span>mail_body <span class="token operator">=</span> <span class="token triple-quoted-string string">'''    &lt;h5>hello,⼩哥哥&lt;/h5>    &lt;p>    你好同学    &lt;p>&lt;img src="cid:image1">&lt;/p>    &lt;/p>'''</span>msg_root <span class="token operator">=</span> MIMEMultipart<span class="token punctuation">(</span><span class="token string">'related'</span><span class="token punctuation">)</span> <span class="token comment"># 允许添加附件、图⽚等</span>msg_root<span class="token punctuation">[</span><span class="token string">"From"</span><span class="token punctuation">]</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span><span class="token string">"来⾃娜美的问候"</span><span class="token punctuation">,</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span> <span class="token comment"># 发送者</span>msg_root<span class="token punctuation">[</span><span class="token string">"To"</span><span class="token punctuation">]</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span><span class="token string">"有缘⼈"</span><span class="token punctuation">,</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span> <span class="token comment"># 接收者</span>msg_root<span class="token punctuation">[</span><span class="token string">"Subject"</span><span class="token punctuation">]</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span><span class="token string">"娜美的信"</span><span class="token punctuation">,</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span> <span class="token comment"># 主题</span><span class="token comment"># 允许添加图⽚</span>msgAlternative <span class="token operator">=</span> MIMEMultipart<span class="token punctuation">(</span><span class="token string">'alternative'</span><span class="token punctuation">)</span>msgAlternative<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>MIMEText<span class="token punctuation">(</span>mail_body<span class="token punctuation">,</span> <span class="token string">'html'</span><span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>msg_root<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>msgAlternative<span class="token punctuation">)</span> <span class="token comment"># 把邮件正⽂内容添加到msg_root⾥</span><span class="token comment"># 加载图⽚，</span>fp <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'girl.jpg'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span>msgImage <span class="token operator">=</span> MIMEImage<span class="token punctuation">(</span>fp<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>fp<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 定义图⽚ ID，在 HTML ⽂本中引⽤</span>msgImage<span class="token punctuation">.</span>add_header<span class="token punctuation">(</span><span class="token string">'Content-ID'</span><span class="token punctuation">,</span> <span class="token string">'&lt;image1>'</span><span class="token punctuation">)</span>msg_root<span class="token punctuation">.</span>attach<span class="token punctuation">(</span>msgImage<span class="token punctuation">)</span> <span class="token comment"># 添加图⽚到msg_root对象⾥</span><span class="token comment"># 发送</span>smtp_obj<span class="token punctuation">.</span>sendmail<span class="token punctuation">(</span><span class="token string">"nami@luffycity.com"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"alex@luffycity.com"</span><span class="token punctuation">,</span><span class="token string">"317828332@qq.com"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> msg_root<span class="token punctuation">.</span>as_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h1 id="实战：给员工自动批量发工资条"><a href="#实战：给员工自动批量发工资条" class="headerlink" title="实战：给员工自动批量发工资条"></a>实战：给员工自动批量发工资条</h1><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> openpyxl <span class="token keyword">import</span> load_workbook<span class="token keyword">import</span> smtplib<span class="token keyword">from</span> email<span class="token punctuation">.</span>mime<span class="token punctuation">.</span>text <span class="token keyword">import</span> MIMEText  <span class="token comment"># 构造邮件正文</span><span class="token keyword">from</span> email<span class="token punctuation">.</span>header <span class="token keyword">import</span> Header  <span class="token comment"># 邮件头</span><span class="token comment"># 1、登录邮件服务器</span>smtp_obj <span class="token operator">=</span> smtplib<span class="token punctuation">.</span>SMTP_SSL<span class="token punctuation">(</span><span class="token string">"smtp.qq.com"</span><span class="token punctuation">,</span> <span class="token number">465</span><span class="token punctuation">)</span>  <span class="token comment"># 发件⼈邮箱中的SMTP服务器，端⼝是25</span>smtp_obj<span class="token punctuation">.</span>login<span class="token punctuation">(</span><span class="token string">"xxxxxxxx@qq.com"</span><span class="token punctuation">,</span> <span class="token string">"xxxxxxxxxxx"</span><span class="token punctuation">)</span>  <span class="token comment"># 括号中对应的是发件⼈邮箱账号、授权码</span><span class="token comment"># smtp_obj.set_debuglevel(1) # 显示调试信息</span><span class="token comment"># 2、构造邮件表格</span>wb <span class="token operator">=</span> load_workbook<span class="token punctuation">(</span><span class="token string">'工资信息.xlsx'</span><span class="token punctuation">,</span> data_only<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>  <span class="token comment"># 打开已有excel,data_only表示不转入公式</span>sheet <span class="token operator">=</span> wb<span class="token punctuation">.</span>active  <span class="token comment"># 激活当前sheet</span>count_col <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> row <span class="token keyword">in</span> sheet<span class="token punctuation">.</span>iter_rows<span class="token punctuation">(</span>max_row<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>count_col<span class="token punctuation">)</span>    <span class="token comment"># 构造表头</span>    <span class="token keyword">if</span> count_col <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        table_head <span class="token operator">=</span> <span class="token string">'&lt;thead>'</span>  <span class="token comment"># 表头用td</span>        <span class="token keyword">for</span> cell <span class="token keyword">in</span> row<span class="token punctuation">:</span>            table_head <span class="token operator">+=</span> <span class="token string-interpolation"><span class="token string">f'&lt;th> </span><span class="token interpolation"><span class="token punctuation">&#123;</span>cell<span class="token punctuation">.</span>value<span class="token punctuation">&#125;</span></span><span class="token string"> &lt;/th>'</span></span>        table_head <span class="token operator">+=</span> <span class="token string">'&lt;/thead>'</span>        count_col <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token comment"># print(table_head)  # 显示拼接结果</span>        <span class="token keyword">continue</span>  <span class="token comment"># 表头不发送</span>    <span class="token comment"># 构造表格中其它行</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token comment"># print(row[2].value)</span>        name <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value  <span class="token comment"># 将变量name储存用于文件头的收件人</span>        email <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value  <span class="token comment"># 将变量email储存用于填写发送地址</span>        table_row <span class="token operator">=</span> <span class="token string">'&lt;tbody>'</span>        <span class="token keyword">for</span> cell <span class="token keyword">in</span> row<span class="token punctuation">:</span>            table_row <span class="token operator">+=</span> <span class="token string-interpolation"><span class="token string">f'&lt;td> </span><span class="token interpolation"><span class="token punctuation">&#123;</span>cell<span class="token punctuation">.</span>value<span class="token punctuation">&#125;</span></span><span class="token string"> &lt;/td>'</span></span>        table_row <span class="token operator">+=</span> <span class="token string">'&lt;/tbody>'</span>        <span class="token comment"># print(table_row)  # 显示拼接结果</span>    <span class="token comment"># 3、构造邮件正文</span>    msg <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'''    &lt;h5>这是你的工资：&lt;/h5>    &lt;table border="1">        </span><span class="token interpolation"><span class="token punctuation">&#123;</span>table_head<span class="token punctuation">&#125;</span></span><span class="token string">        </span><span class="token interpolation"><span class="token punctuation">&#123;</span>table_row<span class="token punctuation">&#125;</span></span><span class="token string">    &lt;/table>    '''</span></span>    <span class="token comment"># 4、设置邮件头信息</span>    msg <span class="token operator">=</span> MIMEText<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> <span class="token string">"html"</span><span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span>  <span class="token comment"># plain表示文件内容为纯文本</span>    msg<span class="token punctuation">[</span><span class="token string">"From"</span><span class="token punctuation">]</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span><span class="token string">"耿天霸"</span><span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span>  <span class="token comment"># 发送者</span>    msg<span class="token punctuation">[</span><span class="token string">"To"</span><span class="token punctuation">]</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span>  <span class="token comment"># 接收者</span>    msg<span class="token punctuation">[</span><span class="token string">"Subject"</span><span class="token punctuation">]</span> <span class="token operator">=</span> Header<span class="token punctuation">(</span><span class="token string">"工资单"</span><span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span>  <span class="token comment"># 主题</span>    <span class="token comment"># print(name)</span>    <span class="token comment"># print(email)</span>    <span class="token comment"># 5、发送</span>    smtp_obj<span class="token punctuation">.</span>sendmail<span class="token punctuation">(</span><span class="token string">"xxxxxxxx@qq.com"</span><span class="token punctuation">,</span> email<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>as_string<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span></span><span class="token string">邮件已发送成功'</span></span><span class="token punctuation">)</span>    count_col <span class="token operator">+=</span> <span class="token number">1</span></code></pre><h1 id="实战：批量从1000号员工word简历中调取技能关键词"><a href="#实战：批量从1000号员工word简历中调取技能关键词" class="headerlink" title="实战：批量从1000号员工word简历中调取技能关键词"></a>实战：批量从1000号员工word简历中调取技能关键词</h1><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> docx<span class="token keyword">def</span> <span class="token function">get_ket_words</span><span class="token punctuation">(</span>key_list<span class="token punctuation">,</span> file_path<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    :param key_list: 需要调取的技能列表['Python', '数据分析', '英语六级']    :param file_path:  包含简历文件夹的绝对路径    :return: 返回包含所选关键词的word文档列表['xxx简历.docx', 'xx简历.docx']    '''</span>    words_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token comment"># 获取路径下所有word文档</span>    file_list <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>file_path<span class="token punctuation">)</span>    <span class="token keyword">for</span> <span class="token builtin">file</span> <span class="token keyword">in</span> file_list<span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">file</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'docx'</span><span class="token punctuation">:</span>            words_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span>    <span class="token comment"># print(words_list)</span>    text_dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token comment"># &#123;word文件路径: 'word文字内容'&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">for</span> word <span class="token keyword">in</span> words_list<span class="token punctuation">:</span>        word_name <span class="token operator">=</span> file_path<span class="token operator">+</span> <span class="token string">'\\'</span> <span class="token operator">+</span> word        document <span class="token operator">=</span> docx<span class="token punctuation">.</span>Document<span class="token punctuation">(</span>word_name<span class="token punctuation">)</span>        all_paragraphs <span class="token operator">=</span> document<span class="token punctuation">.</span>paragraphs        word_text <span class="token operator">=</span> <span class="token string">''</span>        <span class="token keyword">for</span> paragraph <span class="token keyword">in</span> all_paragraphs<span class="token punctuation">:</span>            word_text <span class="token operator">+=</span> paragraph<span class="token punctuation">.</span>text        text_dic<span class="token punctuation">[</span>word_name<span class="token punctuation">]</span> <span class="token operator">=</span> word_text    <span class="token comment"># print(text_dic)</span>    out_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> text <span class="token keyword">in</span> text_dic<span class="token punctuation">:</span>        <span class="token keyword">for</span> key <span class="token keyword">in</span> key_list<span class="token punctuation">:</span>            <span class="token keyword">if</span> key <span class="token keyword">in</span> text_dic<span class="token punctuation">[</span>text<span class="token punctuation">]</span><span class="token punctuation">:</span>                out_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>text<span class="token punctuation">)</span>    <span class="token keyword">return</span> out_listfile_path <span class="token operator">=</span> <span class="token string">r'C:\Users\Geng\Desktop\我在b站学编程\python\day6\简历'</span>out_list <span class="token operator">=</span> get_ket_words<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'Python'</span><span class="token punctuation">,</span> <span class="token string">'数据分析'</span><span class="token punctuation">,</span> <span class="token string">'英语六级'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> file_path<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>out_list<span class="token punctuation">)</span></code></pre><p>※ 目前只能实现纯文本word的读取</p><h1 id="作业：生成1000张名字不同的学员海报"><a href="#作业：生成1000张名字不同的学员海报" class="headerlink" title="作业：生成1000张名字不同的学员海报"></a>作业：生成1000张名字不同的学员海报</h1>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>day5-函数编程</title>
      <link href="/2022/05/11/Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A5/"/>
      <url>/2022/05/11/Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A5/</url>
      
        <content type="html"><![CDATA[<h3 id="本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记"><a href="#本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记" class="headerlink" title="本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记"></a>本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记</h3><h3 id="视频链接-Python零基础到精通7天速成"><a href="#视频链接-Python零基础到精通7天速成" class="headerlink" title="视频链接:Python零基础到精通7天速成"></a>视频链接:<a href="https://www.bilibili.com/video/BV1Gf4y1q7SG?share_source=copy_web">Python零基础到精通7天速成</a></h3><span id="more"></span><h1 id="一、函数编程的作用"><a href="#一、函数编程的作用" class="headerlink" title="一、函数编程的作用"></a>一、函数编程的作用</h1><h2 id="（一）引子"><a href="#（一）引子" class="headerlink" title="（一）引子"></a>（一）引子</h2><p>&amp;emsp;&amp;emsp;你是⼀家公司的IT运维⼈员， 现在⽼板让你写⼀个监控程序<br>1、24⼩时全年⽆休的监控你们公司⽹站服务器的系统状况<br>2、当cpu＼memory＼disk等指标的使⽤量超过阀值时即发邮件报警</p><h4>你掏空了所有的知识量，写出了以下代码</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">while</span> <span class="token boolean">True</span>：    <span class="token keyword">if</span> cpu利⽤率 <span class="token operator">></span> <span class="token number">90</span><span class="token operator">%</span><span class="token punctuation">:</span>    <span class="token comment">#发送邮件提醒</span>    连接邮箱服务器    发送邮件    关闭连接    <span class="token keyword">if</span> 硬盘使⽤空间 <span class="token operator">></span> <span class="token number">90</span><span class="token operator">%</span><span class="token punctuation">:</span>    <span class="token comment">#发送邮件提醒</span>    连接邮箱服务器    发送邮件    关闭连接    <span class="token keyword">if</span> 内存占⽤ <span class="token operator">></span> <span class="token number">80</span><span class="token operator">%</span><span class="token punctuation">:</span>    <span class="token comment">#发送邮件提醒</span>    连接邮箱服务器    发送邮件    关闭连接</code></pre><h4 id="此代码有以下问题"><a href="#此代码有以下问题" class="headerlink" title="此代码有以下问题"></a>此代码有以下问题</h4><p>1、代码重复过多，⼀个劲的copy and paste不符合⾼端程序员的⽓质<br>2、如果⽇后需要修改发邮件的这段代码，⽐如加⼊群发功能，那你就需要在所有⽤到这段代码的地⽅都修改⼀遍</p><h4 id="改进方法"><a href="#改进方法" class="headerlink" title="改进方法"></a>改进方法</h4><p>&amp;emsp;&amp;emsp;只需要把重复的代码提取出来，放在⼀个公共的地⽅，起个名字，以后<br>谁想⽤这段代码，就通过这个名字调⽤就⾏了，如下</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> 发送邮件<span class="token punctuation">(</span>内容<span class="token punctuation">)</span> <span class="token comment">#发送邮件提醒</span> 连接邮箱服务器 发送邮件 关闭连接<span class="token keyword">while</span> <span class="token boolean">True</span>：    <span class="token keyword">if</span> cpu利⽤率 <span class="token operator">></span> <span class="token number">90</span><span class="token operator">%</span><span class="token punctuation">:</span>    发送邮件<span class="token punctuation">(</span><span class="token string">'CPU报警'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> 硬盘使⽤空间 <span class="token operator">></span> <span class="token number">90</span><span class="token operator">%</span><span class="token punctuation">:</span>    发送邮件<span class="token punctuation">(</span><span class="token string">'硬盘报警'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> 内存占⽤ <span class="token operator">></span> <span class="token number">80</span><span class="token operator">%</span><span class="token punctuation">:</span>    发送邮件<span class="token punctuation">(</span><span class="token string">'内存报警'</span><span class="token punctuation">)</span></code></pre><h1 id="二、语法定义-amp-特性"><a href="#二、语法定义-amp-特性" class="headerlink" title="二、语法定义&amp;特性"></a>二、语法定义&amp;特性</h1><h2 id="（一）函数是什么"><a href="#（一）函数是什么" class="headerlink" title="（一）函数是什么"></a>（一）函数是什么</h2><p>&amp;emsp;&amp;emsp;函数⼀词来源于数学，但编程中的「函数」概念，与数学中的函数是有很⼤不同的，具体区别，我们后⾯会讲，编程中的函数在英⽂中也有很多不同的叫法。在BASIC中叫做subroutine(⼦过程或⼦程序)，在C中只有function，在Java⾥⾯叫做method</p><h4 id="定义"><a href="#定义" class="headerlink" title="定义:"></a>定义:</h4><p>&amp;emsp;&amp;emsp;<font color="#dd0000"><strong>函数是指将⼀组语句的集合通过⼀个名字(函数名)封装起来，要想执⾏这个函数，只需调⽤其函数名即可</strong></font></p><h4 id="特性"><a href="#特性" class="headerlink" title="特性:"></a>特性:</h4><p><font color="#dd0000"><strong>1. 减少重复代码<br>2. 使程序变的可扩展<br>3. 使程序变得易维护</strong></font></p><h2 id="（二）语法定义"><a href="#（二）语法定义" class="headerlink" title="（二）语法定义"></a>（二）语法定义</h2><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">sayhi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#函数名</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Hello, I'm nobody!"</span><span class="token punctuation">)</span>sayhi<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#调⽤函数</span><span class="token comment"># 可以带参数</span><span class="token keyword">def</span> <span class="token function">calc</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>    res <span class="token operator">=</span> x<span class="token operator">**</span>y    <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">#函数执⾏结果</span>calc<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span></code></pre><h1 id="三、各种参数"><a href="#三、各种参数" class="headerlink" title="三、各种参数"></a>三、各种参数</h1><h2 id="（一）形参和实参"><a href="#（一）形参和实参" class="headerlink" title="（一）形参和实参"></a>（一）形参和实参</h2><h4 id="形参–用于函数定义"><a href="#形参–用于函数定义" class="headerlink" title="形参–用于函数定义"></a>形参–用于函数定义</h4><p>&amp;emsp;&amp;emsp;只有在被调⽤时才分配内存单元，在调⽤结束时，即刻释放所分配的内存单元。因此，形参只在函数内部有效。函数调⽤结束返回主调⽤程序代码后则不能再使⽤该形参变量</p><h4 id="实参–用于函数调用"><a href="#实参–用于函数调用" class="headerlink" title="实参–用于函数调用"></a>实参–用于函数调用</h4><p>&amp;emsp;&amp;emsp;可以是变量、任意数据类型、表达式、函数等，⽆论实参是何种类型的量，在进⾏函数调⽤时，它们都必须有确定的值，以便把这些值传送给形参。因此应预先给实参赋值</p><div align=center><img src="https://img-blog.csdnimg.cn/0175ff49fe5841858cdf4722d3fa8e0d.png" width = 50%></div><h2 id="（二）默认参数–用于函数定义"><a href="#（二）默认参数–用于函数定义" class="headerlink" title="（二）默认参数–用于函数定义"></a>（二）默认参数–用于函数定义</h2><p>看如下代码</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">stu_register</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>country<span class="token punctuation">,</span>course<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"----注册学⽣信息------"</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"姓名:"</span><span class="token punctuation">,</span>name<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"age:"</span><span class="token punctuation">,</span>age<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"国籍:"</span><span class="token punctuation">,</span>country<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"课程:"</span><span class="token punctuation">,</span>course<span class="token punctuation">)</span>stu_register<span class="token punctuation">(</span><span class="token string">"王⼭炮"</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token string">"CN"</span><span class="token punctuation">,</span><span class="token string">"python_devops"</span><span class="token punctuation">)</span>stu_register<span class="token punctuation">(</span><span class="token string">"张叫春"</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token string">"CN"</span><span class="token punctuation">,</span><span class="token string">"linux"</span><span class="token punctuation">)</span>stu_register<span class="token punctuation">(</span><span class="token string">"刘⽼根"</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token string">"CN"</span><span class="token punctuation">,</span><span class="token string">"linux"</span><span class="token punctuation">)</span></code></pre><p>&amp;emsp;&amp;emsp;发现 country 这个参数 基本都 是”CN”, 就像我们在⽹站上注册⽤户，像国籍这种信息，你不填写，默认就会是 中国， 这就是通过默认参数实现的，把country变成默认参数⾮常简单</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">stu_register</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>course<span class="token punctuation">,</span>country<span class="token operator">=</span><span class="token string">"CN"</span><span class="token punctuation">)</span><span class="token punctuation">:</span></code></pre><h4 id="那调⽤时"><a href="#那调⽤时" class="headerlink" title="那调⽤时"></a>那调⽤时</h4><pre class="language-python" data-language="python"><code class="language-python">stu_register<span class="token punctuation">(</span><span class="token string">"Mack"</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token string">"Python"</span><span class="token punctuation">,</span><span class="token string">"US"</span><span class="token punctuation">)</span></code></pre><p>&amp;emsp;&amp;emsp;你告诉我，第3个参数 python 到底应该给到country还是course呢？ ⽆论给哪个，都会出现歧义，所以<font color="#dd0000"><strong>Python语法⼲脆就让你把默认参数放最后， 解释器在处理函数时参数时，按优先级，位置参数&gt;默认参数</strong></font></p><h2 id="（三）关键字参数–用于函数调用"><a href="#（三）关键字参数–用于函数调用" class="headerlink" title="（三）关键字参数–用于函数调用"></a>（三）关键字参数–用于函数调用</h2><p>&amp;emsp;&amp;emsp;正常情况下，给函数传参数要按顺序，不想按顺序就可以⽤关键参数，只需指定参数名即可(指定了参数名的参数就叫关键参数)，<font color="#dd0000"><strong>但记住⼀个要求就是，关键参数必须放在位置参数(以位置顺序确定对应关系的参数)之后</strong></font></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">stu_register</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> course<span class="token operator">=</span><span class="token string">'PY'</span> <span class="token punctuation">,</span>country<span class="token operator">=</span><span class="token string">'CN'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"----注册学⽣信息------"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"姓名:"</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"age:"</span><span class="token punctuation">,</span> age<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"国籍:"</span><span class="token punctuation">,</span> country<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"课程:"</span><span class="token punctuation">,</span> course<span class="token punctuation">)</span></code></pre><h4 id="调用时可以这样"><a href="#调用时可以这样" class="headerlink" title="调用时可以这样"></a>调用时可以这样</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 输入玩位置参数后，再输入关键字参数关键字参数可以不按照定义顺序输入</span>stu_register<span class="token punctuation">(</span><span class="token string">"王⼭炮"</span><span class="token punctuation">,</span>course<span class="token operator">=</span><span class="token string">'PY'</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">22</span><span class="token punctuation">,</span>country<span class="token operator">=</span><span class="token string">'JP'</span> <span class="token punctuation">)</span></code></pre><h4 id="但不能这样"><a href="#但不能这样" class="headerlink" title="但不能这样"></a>但不能这样</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># corse关键字参数传在位置参数22之前</span>stu_register<span class="token punctuation">(</span><span class="token string">"王⼭炮"</span><span class="token punctuation">,</span>course<span class="token operator">=</span><span class="token string">'PY'</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span>country<span class="token operator">=</span><span class="token string">'JP'</span> <span class="token punctuation">)</span></code></pre><h2 id="（四）非固定参数–用于函数调用"><a href="#（四）非固定参数–用于函数调用" class="headerlink" title="（四）非固定参数–用于函数调用"></a>（四）非固定参数–用于函数调用</h2><p>&amp;emsp;&amp;emsp;若你的函数在定义时不确定⽤户想传⼊多少个参数，就可以使⽤⾮固定参数</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">stu_register</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span><span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># *args 会把多传⼊的参数变成⼀个元组形式</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>args<span class="token punctuation">)</span>stu_register<span class="token punctuation">(</span><span class="token string">"Alex"</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token comment">#输出</span><span class="token comment">#Alex 22 () #后⾯这个()就是args,只是因为没传值,所以为空</span>stu_register<span class="token punctuation">(</span><span class="token string">"Jack"</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token string">"CN"</span><span class="token punctuation">,</span><span class="token string">"Python"</span><span class="token punctuation">)</span><span class="token comment">#输出</span><span class="token comment"># Jack 32 ('CN', 'Python')</span></code></pre><h4 id="还可以有⼀个-kwargs"><a href="#还可以有⼀个-kwargs" class="headerlink" title="还可以有⼀个 **kwargs"></a>还可以有⼀个 **kwargs</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">stu_register</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span><span class="token operator">*</span>args<span class="token punctuation">,</span><span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># **kwargs 会把多传⼊的参数变成⼀个dict形式</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>args<span class="token punctuation">,</span>kwargs<span class="token punctuation">)</span>stu_register<span class="token punctuation">(</span><span class="token string">"Alex"</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token comment">#输出</span><span class="token comment">#Alex 22 () &#123;&#125;#后⾯这个&#123;&#125;就是kwargs,只是因为没传值,所以为空</span>stu_register<span class="token punctuation">(</span><span class="token string">"Jack"</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token string">"CN"</span><span class="token punctuation">,</span><span class="token string">"Python"</span><span class="token punctuation">,</span>sex<span class="token operator">=</span><span class="token string">"Male"</span><span class="token punctuation">,</span>province<span class="token operator">=</span><span class="token string">"ShanDong"</span><span class="token punctuation">)</span><span class="token comment">#输出</span><span class="token comment"># Jack 32 ('CN', 'Python') &#123;'province': 'ShanDong', 'sex': 'Male'&#125;</span></code></pre><h2 id="（四）练习题"><a href="#（四）练习题" class="headerlink" title="（四）练习题"></a>（四）练习题</h2><p>&amp;emsp;&amp;emsp;根据下图所示，对print_info⾥的代码进⾏实现</p><div align=center><img src="https://img-blog.csdnimg.cn/6e3edba743d9473eb36f6714d78d7cac.png" width = 80%></div><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">print_info</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> sex<span class="token punctuation">,</span> hobby<span class="token operator">=</span><span class="token string">'学习'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'info'</span><span class="token punctuation">.</span>center<span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'name: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'Age: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>age<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'Sex: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>sex<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'hobby: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>hobby<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>print_info<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'Alex'</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">22</span><span class="token punctuation">,</span> sex<span class="token operator">=</span><span class="token string">'M'</span><span class="token punctuation">)</span>print_info<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">'Jack'</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">22</span><span class="token punctuation">,</span> sex<span class="token operator">=</span><span class="token string">'M'</span><span class="token punctuation">,</span> hobby<span class="token operator">=</span><span class="token string">'运动'</span><span class="token punctuation">)</span></code></pre><h1 id="四、函数返回值可以干啥"><a href="#四、函数返回值可以干啥" class="headerlink" title="四、函数返回值可以干啥"></a>四、函数返回值可以干啥</h1><p>&amp;emsp;&amp;emsp;函数外部的代码要想获取函数的执⾏结果，就可以在函数⾥⽤return语句把结果返回</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">stu_register</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> course<span class="token operator">=</span><span class="token string">'PY'</span> <span class="token punctuation">,</span>country<span class="token operator">=</span><span class="token string">'CN'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"----注册学⽣信息------"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"姓名:"</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"age:"</span><span class="token punctuation">,</span> age<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"国籍:"</span><span class="token punctuation">,</span> country<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"课程:"</span><span class="token punctuation">,</span> course<span class="token punctuation">)</span>    <span class="token keyword">if</span> age <span class="token operator">></span> <span class="token number">22</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token boolean">False</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token boolean">True</span>  <span class="token comment"># 1、返回执行结果，多个返回值使用元组进行封装</span>                 <span class="token comment"># 2、程序执行，一遇到return，就代表函数的结束</span>registriation_status <span class="token operator">=</span> stu_register<span class="token punctuation">(</span><span class="token string">"王⼭炮"</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span>course<span class="token operator">=</span><span class="token string">"PY全栈开发"</span><span class="token punctuation">,</span>country<span class="token operator">=</span><span class="token string">'JP'</span><span class="token punctuation">)</span><span class="token keyword">if</span> registriation_status<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"注册成功"</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"too old to be a student."</span><span class="token punctuation">)</span></code></pre><h1 id="五、局部变量-amp-全局变量"><a href="#五、局部变量-amp-全局变量" class="headerlink" title="五、局部变量&amp;全局变量"></a>五、局部变量&amp;全局变量</h1><h4 id="看如下代码"><a href="#看如下代码" class="headerlink" title="看如下代码"></a>看如下代码</h4><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"Alex Li"</span><span class="token keyword">def</span> <span class="token function">change_name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> name <span class="token operator">=</span> <span class="token string">"⾦⻆⼤王, ⼀个有Tesla的⾼级屌丝"</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"after change"</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>change_name<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"在外⾯看看name改了么?"</span><span class="token punctuation">,</span>name<span class="token punctuation">)</span></code></pre><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span>after change ⾦⻆⼤王<span class="token punctuation">,</span>⼀个有Tesla的⾼级屌丝<span class="token operator">>></span><span class="token operator">></span>在外⾯看看name改了么? Alex Li</code></pre><p>&amp;emsp;&amp;emsp;为什么在函数内部改了name的值后， 在外⾯print()的时候却没有改呢？因为这两个name根本不是⼀回事<br><strong>※</strong>在函数中定义的变量称为局部变量，在程序的⼀开始定义的变量称为全局变量<br><strong>※</strong>全局变量作⽤域(即有效范围)是整个程序，局部变量作⽤域是定义该变量的函数<br><strong>※</strong>变量的查找顺序是<strong>局部变量&gt;全局变量</strong><br><strong>※</strong>当全局变量与局部变量同名时，在定义局部变量的函数内，局部变量起作⽤；在其它地⽅全局变量起作⽤。<br><strong>※</strong>在函数⾥是不能直接修改全局变量的</p><h4 id="就是想在函数⾥修改全局变量怎么办？"><a href="#就是想在函数⾥修改全局变量怎么办？" class="headerlink" title="就是想在函数⾥修改全局变量怎么办？"></a>就是想在函数⾥修改全局变量怎么办？</h4><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">"Alex Li"</span><span class="token keyword">def</span> <span class="token function">change_name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> name <span class="token comment">#声明⼀个全局变量</span>    name <span class="token operator">=</span> <span class="token string">"Alex ⼜名⾦⻆⼤王,爱⽣活、爱⾃由、爱姑娘"</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"after change"</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>change_name<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"在外⾯看看name改了么?"</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span></code></pre><p>&amp;emsp;&amp;emsp; <strong>global name的作⽤就是要在函数⾥声明全局变量name ，意味着最上⾯的 name &#x3D; “Alex Li” 即使不写，程序最后⾯的print也可以打印name</strong><br>&amp;emsp;&amp;emsp;<font color="#dd0000">虽然可以改，但不建议⽤这个global语法，随着代码增多 ，会造成代码调试困难</font></p><h4 id="传递列表、字典产⽣的现象"><a href="#传递列表、字典产⽣的现象" class="headerlink" title="传递列表、字典产⽣的现象"></a>传递列表、字典产⽣的现象</h4><pre class="language-python" data-language="python"><code class="language-python">d <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"Alex"</span><span class="token punctuation">,</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token string">"hobbie"</span><span class="token punctuation">:</span><span class="token string">"健身"</span><span class="token punctuation">&#125;</span>l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Rebeeca"</span><span class="token punctuation">,</span><span class="token string">"Katrina"</span><span class="token punctuation">,</span><span class="token string">"Rachel"</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">change_data</span><span class="token punctuation">(</span>info<span class="token punctuation">,</span>girls<span class="token punctuation">)</span><span class="token punctuation">:</span>    info<span class="token punctuation">[</span><span class="token string">"hobbie"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"学习"</span>    girls<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"XiaoYun"</span><span class="token punctuation">)</span>change_data<span class="token punctuation">(</span>d<span class="token punctuation">,</span>l<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span>l<span class="token punctuation">)</span></code></pre><h4 id="执行结果"><a href="#执行结果" class="headerlink" title="执行结果"></a>执行结果</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span>‘name’<span class="token punctuation">:</span> ‘Alex’<span class="token punctuation">,</span> ‘age’<span class="token punctuation">:</span> <span class="token number">26</span><span class="token punctuation">,</span> ‘hobbie’<span class="token punctuation">:</span> ‘学习’<span class="token punctuation">&#125;</span><span class="token punctuation">[</span>‘Rebeeca’<span class="token punctuation">,</span> ‘Katrina’<span class="token punctuation">,</span> ‘Rachel’<span class="token punctuation">,</span> ‘XiaoYun’<span class="token punctuation">]</span></code></pre><p>&amp;emsp;&amp;emsp;不是说不能在函数⾥改全局变量么，怎么改了呀？</p><p>&amp;emsp;&amp;emsp;字典，列表，集合等数据类型该数据类型本身（鱼缸）和里面的各元素（鱼），都是单独在内存中进行存放，鱼缸是一个地址，每条鱼有各自的地址</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> d <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"Alex"</span><span class="token punctuation">,</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token string">"hobbie"</span><span class="token punctuation">:</span><span class="token string">"健身"</span><span class="token punctuation">&#125;</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> k <span class="token keyword">in</span> d<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span>d<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token punctuation">(</span>d<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token number">1714053591680</span>name Alex<span class="token number">1714015535408</span> <span class="token number">1714053616240</span>age <span class="token number">26</span><span class="token number">1714053616880</span> <span class="token number">1714015333456</span>hobbie ⼤保健<span class="token number">1714053616752</span> <span class="token number">1714053350192</span></code></pre><div align=center><img src="https://img-blog.csdnimg.cn/cdb48ad4dba84023901cb223e8a66807.png" width = 80%></div>&emsp;&emsp;根据上图我们能看出， 程序只是把d这个dict的内存地址传给了change_data函数，把dict⽐作⻥缸，⾥⾯的k,v⽐作缸⾥装的⻥。现在只是把⻥缸丢给了函数，这个⻥缸本身你不能改，但是⾥⾯的⻥可以。相当于只是传了⼀个对这个d的引⽤关系给到函数的形参。这样是为了减少内存的浪费，因为如果这个dict⽐较⼤，传⼀次到函数⾥就要copy⼀份新的值的话，效率太低了。<h1 id="六、内置函数"><a href="#六、内置函数" class="headerlink" title="六、内置函数"></a>六、内置函数</h1><p>&amp;emsp;&amp;emsp;python解释器自带的函数</p><div align=center><img src="https://img-blog.csdnimg.cn/553be5a077b340b09de60538357d5c52.png" width = 80%></div>1. abs # 求绝对值2. all # 里面的元素全为真返回真3. any # 里面的元素任意为真返回真   <pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">all</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token boolean">False</span><span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">any</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token boolean">True</span></code></pre><ol start="4"><li>ascii # 返回字符的ascii码<pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">ascii</span><span class="token punctuation">(</span><span class="token string">'中国'</span><span class="token punctuation">)</span><span class="token string">"'\\u4e2d\\u56fd'"</span></code></pre></li><li>bin # 返回整数的2进制格式</li><li>bool # 判断⼀个数据结构是True or False</li><li>bytearray # 把byte变成 bytearray, 可修改的数组</li><li>bytes # bytes(“中国”,”gbk”)</li><li>callable # 判断⼀个对象是否可调⽤</li><li>chr # 返回⼀个数字对应的ascii字符 ， ⽐如chr(90)返回ascii⾥的’Z’</li><li>classmethod # ⾯向对象时⽤，现在忽略</li><li>compile # py解释器⾃⼰⽤的东⻄，忽略</li><li>complex # 求复数，⼀般⼈⽤不到</li><li>copyright # 没⽤</li><li>credits # 没⽤</li><li>chr # 返回ascii码中对于编号的字符<pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">97</span><span class="token punctuation">)</span><span class="token string">'a'</span></code></pre></li><li>delattr # ⾯向对象时⽤，现在忽略</li><li>dict # ⽣成⼀个空dict</li><li>dir # 以列表的形式返回当前作用域所有变量名</li></ol><pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token string">'name'</span><span class="token operator">>></span><span class="token operator">></span> b <span class="token operator">=</span> <span class="token number">22</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">dir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'__annotations__'</span><span class="token punctuation">,</span> <span class="token string">'__builtins__'</span><span class="token punctuation">,</span> <span class="token string">'__doc__'</span><span class="token punctuation">,</span> <span class="token string">'__loader__'</span><span class="token punctuation">,</span> <span class="token string">'__name__'</span><span class="token punctuation">,</span> <span class="token string">'__package__'</span><span class="token punctuation">,</span> <span class="token string">'__spec__'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">]</span></code></pre><ol start="19"><li>divmod #返回除法的商和余数 ，⽐如divmod(4,2)，结果(2, 0)</li><li>enumerate # 返回列表的索引和元素<pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> numbers <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> i<span class="token punctuation">,</span> j <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>numbers<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token number">0</span> <span class="token number">10</span><span class="token number">1</span> <span class="token number">9</span><span class="token number">2</span> <span class="token number">8</span><span class="token number">3</span> <span class="token number">7</span><span class="token number">4</span> <span class="token number">6</span><span class="token number">5</span> <span class="token number">5</span><span class="token number">6</span> <span class="token number">4</span><span class="token number">7</span> <span class="token number">3</span><span class="token number">8</span> <span class="token number">2</span><span class="token number">9</span> <span class="token number">1</span></code></pre></li><li>eval # 可以把字符串形式的list,dict,set,tuple,再转换成其原有的数据类型。</li><li>exec # 把字符串格式的代码，进⾏解义并执⾏，⽐如exec(“print(‘hellworld’)”)，会解义⾥⾯的字符<br>串并执⾏</li><li>exit # 退出程序</li><li>filter # 对list、dict、set、tuple等可迭代对象进⾏过滤<pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> numbers <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> number <span class="token keyword">in</span> <span class="token builtin">filter</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x <span class="token operator">></span> <span class="token number">5</span><span class="token punctuation">,</span> numbers<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token number">6</span><span class="token number">7</span><span class="token number">8</span><span class="token number">9</span></code></pre></li><li>float # 转成浮点</li><li>format # 没⽤</li><li>frozenset # 把⼀个集合变成不可修改的</li><li>getattr # ⾯向对象时⽤，现在忽略</li><li>globals # 打印全局作⽤域⾥的值</li><li>hasattr # ⾯向对象时⽤，现在忽略</li><li>hash # hash函数</li><li>help</li><li>hex # 返回⼀个10进制的16进制表示形式,hex(10) 返回’0xa’</li><li>id # 查看对象内存地址</li><li>input</li><li>int</li><li>isinstance # 判断⼀个数据结构的类型，⽐如判断a是不是fronzenset, isinstance(a,frozenset) 返<br>回 True or False</li><li>issubclass # ⾯向对象时⽤，现在忽略</li><li>iter # 把⼀个数据结构变成迭代器，讲了迭代器就明⽩了</li><li>len</li><li>list</li><li>locals # 以字典的形式返回当前作用域所有变量名和变量值<pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token string">'name'</span><span class="token operator">>></span><span class="token operator">></span> b <span class="token operator">=</span> <span class="token number">22</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">dir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token string">'__name__'</span><span class="token punctuation">:</span> <span class="token string">'__main__'</span><span class="token punctuation">,</span> <span class="token string">'__doc__'</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token string">'__package__'</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token string">'__loader__'</span><span class="token punctuation">:</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'_frozen_importlib.BuiltinImporter'</span><span class="token operator">></span><span class="token punctuation">,</span> <span class="token string">'__spec__'</span><span class="token punctuation">:</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token string">'__annotations__'</span><span class="token punctuation">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> '__builtins__<span class="token string">': &lt;module '</span>builtins<span class="token string">' (built-in)>, '</span>a<span class="token string">': '</span>name<span class="token string">', '</span>b'<span class="token punctuation">:</span> <span class="token number">22</span><span class="token punctuation">&#125;</span></code></pre></li><li>map # 输入函数和可迭代的对象，返回可迭代对象基于函数的计算结果<pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> numbers <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">for</span> number <span class="token keyword">in</span> <span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">,</span> numbers<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token number">0</span><span class="token number">1</span><span class="token number">4</span><span class="token number">9</span><span class="token number">16</span><span class="token number">25</span><span class="token number">36</span><span class="token number">49</span><span class="token number">64</span><span class="token number">81</span></code></pre></li><li>max # 求最⼤值</li><li>memoryview # ⼀般⼈不⽤，忽略</li><li>min # 求最⼩值</li><li>next # ⽣成器会⽤到，现在忽略</li><li>object # ⾯向对象时⽤，现在忽略</li><li>oct # 返回10进制数的8进制表示</li><li>open</li><li>ord # 传入ascii码字符，返回对应的10进制数<pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token number">97</span></code></pre></li><li>print</li><li>property # ⾯向对象时⽤，现在忽略</li><li>quit</li><li>range</li><li>repr # 没什么⽤</li><li>reversed # 可以把⼀个列表反转</li><li>round # 4舍5⼊保留任意位数小数<pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token comment"># 保留两位小数</span><span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">round</span><span class="token punctuation">(</span><span class="token number">3.1415</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token number">3.14</span></code></pre></li><li>set</li><li>setattr # ⾯向对象时⽤，现在忽略</li><li>slice # 没⽤</li><li>sorted</li><li>staticmethod #⾯向对象时⽤，现在忽略</li><li>str # 转换为字符串</li><li>sum # 求和</li><li>super # ⾯向对象时⽤，现在忽略</li><li>tuple # 转换为元组</li><li>type # 查看数据类型</li><li>vars # 返回⼀个对象的属性，⾯向对象时就明⽩了</li><li>zip #可以把2个或多个列表拼成⼀个，<pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'苹果'</span><span class="token punctuation">,</span> <span class="token string">'香蕉'</span><span class="token punctuation">,</span> <span class="token string">'梨'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 返回的结果为一个对象，此处用list()进行打印</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'苹果'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">'香蕉'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">'梨'</span><span class="token punctuation">)</span><span class="token punctuation">]</span></code></pre><h1 id="七、学籍注册小程序"><a href="#七、学籍注册小程序" class="headerlink" title="七、学籍注册小程序"></a>七、学籍注册小程序</h1><h2 id="（一）需求"><a href="#（一）需求" class="headerlink" title="（一）需求"></a>（一）需求</h2></li><li>要求⽤户输⼊姓名、年龄、⼿机号、身份证号、所选课程，然后为学员完成注册</li><li>⼿机号、身份证号唯⼀</li><li>可选的课程只能从Python、Linux、⽹络安全、前端、数据分析这⼏⻔⾥选</li><li>学员信息存⼊⽂件<h2 id="（二）代码"><a href="#（二）代码" class="headerlink" title="（二）代码"></a>（二）代码</h2><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 提前创建'student_data.db'文件</span>db_file <span class="token operator">=</span> <span class="token string">'student_data.db'</span><span class="token keyword">def</span> <span class="token function">register_api</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    student_info <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token comment"># 接收用户名</span>    user_name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input your name: '</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 接收用户年龄</span>    user_age <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input your age: '</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 接收用户手机号</span>    user_phone <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input your phone number: '</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> user_phone <span class="token keyword">in</span> phone_list<span class="token punctuation">:</span>        exit<span class="token punctuation">(</span><span class="token string">'your phone number is registered'</span><span class="token punctuation">)</span>    <span class="token comment"># 接收用户身份证</span>    user_id <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input your ID number: '</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> user_id <span class="token keyword">in</span> id_list<span class="token punctuation">:</span>        exit<span class="token punctuation">(</span><span class="token string">'your id number is registered'</span><span class="token punctuation">)</span>    <span class="token comment"># 接收用户所选课程</span>    course_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Python'</span><span class="token punctuation">,</span> <span class="token string">'Linux'</span><span class="token punctuation">,</span> <span class="token string">'⽹络安全'</span><span class="token punctuation">,</span> <span class="token string">'前端'</span><span class="token punctuation">,</span> <span class="token string">'数据分析'</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'我们开设的课程有：'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>course_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>course_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>    course_index <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'please input a number to choice a course: '</span></span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token builtin">int</span><span class="token punctuation">(</span>course_index<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>course_list<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        user_course <span class="token operator">=</span> course_list<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>course_index<span class="token punctuation">)</span><span class="token punctuation">]</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        exit<span class="token punctuation">(</span><span class="token string">'choice number out of range'</span><span class="token punctuation">)</span>    student_info<span class="token punctuation">.</span>append<span class="token punctuation">(</span>user_name<span class="token punctuation">)</span>    student_info<span class="token punctuation">.</span>append<span class="token punctuation">(</span>user_age<span class="token punctuation">)</span>    student_info<span class="token punctuation">.</span>append<span class="token punctuation">(</span>user_phone<span class="token punctuation">)</span>    student_info<span class="token punctuation">.</span>append<span class="token punctuation">(</span>user_id<span class="token punctuation">)</span>    student_info<span class="token punctuation">.</span>append<span class="token punctuation">(</span>user_course<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'恭喜你完成注册'</span><span class="token punctuation">.</span>center<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> student_info<span class="token keyword">def</span> <span class="token function">info_save</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> student_list<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'a'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> info <span class="token keyword">in</span> student_list<span class="token punctuation">:</span>        <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>info <span class="token operator">+</span> <span class="token string">' '</span><span class="token punctuation">)</span>    <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>    <span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 取出所有手机号和身份证号</span><span class="token keyword">def</span> <span class="token function">get_data</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">:</span>    phone_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    id_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> line <span class="token keyword">in</span> <span class="token builtin">file</span><span class="token punctuation">:</span>        student_list <span class="token operator">=</span> line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span>        phone_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>student_list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        id_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>student_list<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> phone_list<span class="token punctuation">,</span> id_list<span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    user_input <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'按下任意键进行学籍注册，如果退出请按e:'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> user_input <span class="token operator">==</span> <span class="token string">'e'</span><span class="token punctuation">:</span>        exit<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        phone_list<span class="token punctuation">,</span> id_list <span class="token operator">=</span> get_data<span class="token punctuation">(</span>db_file<span class="token punctuation">)</span>        student_list <span class="token operator">=</span> register_api<span class="token punctuation">(</span><span class="token punctuation">)</span>        info_save<span class="token punctuation">(</span>db_file<span class="token punctuation">,</span> student_list<span class="token punctuation">)</span></code></pre><h1 id="八、扎金花棋牌游戏"><a href="#八、扎金花棋牌游戏" class="headerlink" title="八、扎金花棋牌游戏"></a>八、扎金花棋牌游戏</h1><h2 id="（一）需求-1"><a href="#（一）需求-1" class="headerlink" title="（一）需求"></a>（一）需求</h2>1、允许用户一次性输入多名玩家姓名，不限个数，然后为每个玩家随机产生三张牌<br>2、你只有一副扑克牌，确保发出去的每张牌不重样<br>3、牌需要有黑桃，红桃，方片，梅花之分</li></ol><h4 id="最终输出"><a href="#最终输出" class="headerlink" title="最终输出"></a>最终输出</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token punctuation">&#123;</span><span class="token string">'Alex'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'红桃'</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'梅花'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'梅花'</span><span class="token punctuation">,</span> K<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'Jack'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'梅花'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'红桃'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'黑桃'</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></code></pre><h2 id="（二）代码-1"><a href="#（二）代码-1" class="headerlink" title="（二）代码"></a>（二）代码</h2><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> string<span class="token keyword">import</span> random<span class="token comment"># 传入序号和图案生成一副扑克牌</span><span class="token keyword">def</span> <span class="token function">create_cards</span><span class="token punctuation">(</span>pattern_list<span class="token punctuation">,</span> serial_list<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""    :param pattern_list: ['黑桃', '红桃', '梅花', '方片']    :param serial_list: [1, 2, ..., K, A]    :return:包含所有卡牌的列表    """</span>    cards_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> serial <span class="token keyword">in</span> serial_list<span class="token punctuation">:</span>        <span class="token keyword">for</span> pattern <span class="token keyword">in</span> pattern_list<span class="token punctuation">:</span>            card <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            card<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pattern<span class="token punctuation">)</span>            card<span class="token punctuation">.</span>append<span class="token punctuation">(</span>serial<span class="token punctuation">)</span>            cards_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>card<span class="token punctuation">)</span>    <span class="token keyword">return</span> cards_listserial_list <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>string<span class="token punctuation">.</span>digits<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'JQKA'</span><span class="token punctuation">)</span>all_cards <span class="token operator">=</span> create_cards<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'黑桃'</span><span class="token punctuation">,</span> <span class="token string">'红桃'</span><span class="token punctuation">,</span> <span class="token string">'梅花'</span><span class="token punctuation">,</span> <span class="token string">'方片'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> serial_list<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">play_cards</span><span class="token punctuation">(</span>player_list<span class="token punctuation">)</span><span class="token punctuation">:</span>    player_dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token triple-quoted-string string">"""    :param player: ['Alex', 'Jack', ...]  输入列表，包含每个玩家的姓名    :return: &#123;'Alex': [['红桃', 7], ['梅花', 5], ['梅花', K]], 'Jack': [['梅花', 5], ['红桃', 5], ['黑桃', 8]]。。。&#125;    """</span>    <span class="token keyword">for</span> player <span class="token keyword">in</span> player_list<span class="token punctuation">:</span>        get_cards <span class="token operator">=</span> random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>all_cards<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> get_card <span class="token keyword">in</span> get_cards<span class="token punctuation">:</span>            all_cards<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>get_card<span class="token punctuation">)</span>        player_dic<span class="token punctuation">[</span>player<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>get_cards<span class="token punctuation">)</span>    <span class="token keyword">return</span> player_dicresult <span class="token operator">=</span> play_cards<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'Alex'</span><span class="token punctuation">,</span> <span class="token string">'Jack'</span><span class="token punctuation">,</span> <span class="token string">'GY'</span><span class="token punctuation">,</span> <span class="token string">'LT'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>day4-用Python批量处理文件</title>
      <link href="/2022/05/08/Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A4/"/>
      <url>/2022/05/08/Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A4/</url>
      
        <content type="html"><![CDATA[<h3 id="本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记"><a href="#本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记" class="headerlink" title="本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记"></a>本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记</h3><h3 id="视频链接-Python零基础到精通7天速成"><a href="#视频链接-Python零基础到精通7天速成" class="headerlink" title="视频链接:Python零基础到精通7天速成"></a>视频链接:<a href="https://www.bilibili.com/video/BV1Gf4y1q7SG?share_source=copy_web">Python零基础到精通7天速成</a></h3><span id="more"></span><h1 id="一、文件操作"><a href="#一、文件操作" class="headerlink" title="一、文件操作"></a>一、文件操作</h1><h2 id="（一）文件操作流程"><a href="#（一）文件操作流程" class="headerlink" title="（一）文件操作流程"></a>（一）文件操作流程</h2><h4 id="用word操作一个文件的流程如下"><a href="#用word操作一个文件的流程如下" class="headerlink" title="用word操作一个文件的流程如下:"></a>用word操作一个文件的流程如下:</h4><p>1．找到文件，双击打开<br>2. 读或修改<br>3．保存&amp;关闭</p><h4 id="用pythqn操作文件也差不多"><a href="#用pythqn操作文件也差不多" class="headerlink" title="用pythqn操作文件也差不多:"></a>用pythqn操作文件也差不多:</h4><pre class="language-python" data-language="python"><code class="language-python">f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'filename'</span><span class="token punctuation">)</span>  <span class="token comment"># 打开文件</span>f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'我是野生程序员'</span><span class="token punctuation">)</span>  <span class="token comment"># 写操作</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 读操作</span>f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 保持并关闭</span></code></pre><p>&amp;emsp;&amp;emsp;不过有一点跟人肉操作word文档不同，就是word文档只要打开了，就即可以读、又可以修改。但Python只能以读、创建、追加3种模式中的任意一种打开文件，不能即写又读。</p><h4 id="文件打开模式-文本模式"><a href="#文件打开模式-文本模式" class="headerlink" title="文件打开模式(文本模式)"></a>文件打开模式(文本模式)</h4><p>1、r只读模式<br>2、w创建模式，若文件已存在，则覆盖旧文件<br>3、a追加模式，新数据会写到文件末尾</p><h2 id="（二）创建、只读、追加"><a href="#（二）创建、只读、追加" class="headerlink" title="（二）创建、只读、追加"></a>（二）创建、只读、追加</h2><h4 id="1、创建"><a href="#1、创建" class="headerlink" title="1、创建"></a>1、创建</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 以写入模式打开</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'name_list'</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>  <span class="token comment"># ctrl+左键点击open，可以查看函数参数列表  # ctrl+左键点击open，可以查看函数参数列表</span><span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'张三\n'</span><span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'李四\n'</span><span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'王五\n'</span><span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">.</span>encoding<span class="token punctuation">(</span><span class="token string">'UTF-8'</span><span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h4 id="2、只读"><a href="#2、只读" class="headerlink" title="2、只读"></a>2、只读</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 以只读模式打开</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'name_list'</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">)</span>  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'--------------------------'</span><span class="token punctuation">)</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'name_list'</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">)</span>  <span class="token comment"># read后光标会移到文本最后一行，需要重新打开文本才能在此read</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><h4 id="3、追加"><a href="#3、追加" class="headerlink" title="3、追加"></a>3、追加</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 以追加模式打开</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'name_list'</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'耿天霸\n'</span><span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h4 id="4、其它功能"><a href="#4、其它功能" class="headerlink" title="4、其它功能"></a>4、其它功能</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">seek</span> <span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span><span class="token operator">**</span>kwargs <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token triple-quoted-string string">''' 把操作文件的光标移到指定位置*注意seek的长度是按字节算的，字符编码存每个字符所占的字节长度不一样。如"路飞学城”用gbk存是2个字节一个字，用utf-8就是3个字节，因此以gbk打开时, seek（4）就把光标切换到了“飞”和“学”两个字中间。'''</span><span class="token keyword">def</span> <span class="token function">tell</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span><span class="token operator">*</span> <span class="token operator">*</span>kwargs <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token comment"># 返回当前文件操作光标位置</span><span class="token keyword">def</span> <span class="token function">flush</span><span class="token punctuation">(</span> self<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">,</span><span class="token operator">**</span>kwargs <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token comment"># 把文件从内存buffer里强制刷新到硬盘</span><span class="token triple-quoted-string string">'''正常情况下write命令将数据导入到内存的缓存（buffer）中，当缓存满了再一并写入内存，但当断电时内存中数据（包括buffer）会丢失（因为还没写入硬盘），因此通过flush命令可以不用将数据导入到buffer而直接写入硬盘（应用于不能丢失的重要数据）'''</span><span class="token comment"># 示例</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'name_list'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">.</span>seek<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># output:三</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'name_list2'</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'王二\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>tell<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'张三\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>tell<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'李四\n'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">.</span>tell<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">.</span>seek<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'王五'</span><span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># output:</span><span class="token comment"># 王二</span><span class="token comment"># 王五</span><span class="token comment"># 李四</span><span class="token comment"># 不输入flie.flush 运行write后没有任何结果</span><span class="token operator">>></span><span class="token operator">></span> flie <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'file_flush'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">,</span> encoding <span class="token operator">=</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> flie<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'张三\n'</span><span class="token punctuation">)</span><span class="token number">3</span><span class="token operator">>></span><span class="token operator">></span> flie<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'李四\n'</span><span class="token punctuation">)</span><span class="token number">3</span><span class="token operator">>></span><span class="token operator">></span> flie<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token triple-quoted-string string">'''output: 张三        李四'''</span></code></pre><h2 id="（三）遍历文件"><a href="#（三）遍历文件" class="headerlink" title="（三）遍历文件"></a>（三）遍历文件</h2><h4 id="1、数据源"><a href="#1、数据源" class="headerlink" title="1、数据源"></a>1、数据源</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token number">1</span>． 马纤羽  深圳  <span class="token number">173</span>  <span class="token number">50</span>  <span class="token number">13744234523</span><span class="token number">2.</span>  乔亦菲  广州  <span class="token number">172</span>  <span class="token number">52</span>  <span class="token number">15823423525</span><span class="token number">3</span>． 罗梦竹  北京  <span class="token number">175</span>  <span class="token number">49</span>  <span class="token number">18623423421</span><span class="token number">4</span>． 刘诺涵  北京  <span class="token number">170</span>  <span class="token number">48</span>  <span class="token number">18623423765</span><span class="token number">5</span>． 岳妮妮  深圳  <span class="token number">177</span>  <span class="token number">54</span>  <span class="token number">18835324553</span><span class="token number">6</span>． 贺婉置  深圳  <span class="token number">174</span>  <span class="token number">52</span>  <span class="token number">18933434452</span><span class="token number">7</span>． 叶梓    上海  <span class="token number">171</span>  <span class="token number">49</span>  <span class="token number">18042432324</span></code></pre><h4 id="2、任务"><a href="#2、任务" class="headerlink" title="2、任务"></a>2、任务</h4><p>&amp;emsp;&amp;emsp;遍历文件并找出身高大于170，体重低于50的人</p><h4 id="3、代码"><a href="#3、代码" class="headerlink" title="3、代码"></a>3、代码</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 以追加模式打开</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'data_sourse'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>  <span class="token comment"># encoding参数，告诉python源文件的编码格式，否则python会用GBK进行解码，并报错！！！</span><span class="token comment"># 以列表打印出源文件，每一行为一个元素，</span><span class="token comment"># print(file.readlines())  # 可以看到：元素的末尾都有换行符，当文件中出现多的换行符元素是，在遍历是会报错</span><span class="token comment"># 循环每一行</span><span class="token keyword">for</span> row <span class="token keyword">in</span> <span class="token builtin">file</span><span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># print(row, end='')  # 每一行自带换行符，使用不需要print()再在结尾加换行符</span>    row_list <span class="token operator">=</span> row<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 将字符串row存成列表row_list，分隔符使用空格</span>    <span class="token comment"># print(row_list)</span>    height <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>row_list<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    weight <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>row_list<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> height <span class="token operator">>=</span> <span class="token number">170</span> <span class="token keyword">and</span> weight <span class="token operator">&lt;=</span> <span class="token number">50</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span></code></pre><h2 id="（四）2进制模式"><a href="#（四）2进制模式" class="headerlink" title="（四）2进制模式"></a>（四）2进制模式</h2><h4 id="1、如何处理图⽚、视频⽂件呢？"><a href="#1、如何处理图⽚、视频⽂件呢？" class="headerlink" title="1、如何处理图⽚、视频⽂件呢？"></a>1、如何处理图⽚、视频⽂件呢？</h4><p>&amp;emsp;&amp;emsp;图⽚、视频，是有⾃⼰特殊的编码的，⽽⾮什么unicode\utf-8这样的⽂本编码 。 所以要操作这样的⽂件 ，你⽤utf-8什么的去解，会报错。</p><h4 id="2、可以⽤2进制模式打开⽂件"><a href="#2、可以⽤2进制模式打开⽂件" class="headerlink" title="2、可以⽤2进制模式打开⽂件"></a>2、可以⽤2进制模式打开⽂件</h4><p>（1）<strong>rb</strong> 2进制只读模式<br>（2）<strong>wb</strong> 2进制创建模式，若⽂件已存在，则覆盖旧⽂件<br>（3）<strong>ab</strong> 2进制追加模式，新数据会写到⽂件末尾</p><h4 id="3、代码实例"><a href="#3、代码实例" class="headerlink" title="3、代码实例"></a>3、代码实例</h4><h4 id="（1）读取二进制文件"><a href="#（1）读取二进制文件" class="headerlink" title="（1）读取二进制文件"></a>（1）读取二进制文件</h4><pre class="language-python" data-language="python"><code class="language-python">file_png <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'aa.png'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token keyword">for</span> line <span class="token keyword">in</span> file_png<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token comment"># output为16进制格式表示打开成功：b"\x00\x00\x00\rIHDR\x00\x00\x01\xe1\x00\x00\x01#\x08\x02\x00\x00\x00\x8a\x08.\xe6...</span><span class="token comment"># 采用16进制进行显示相较于2进制010101方便人类阅读</span></code></pre><h4 id="（2）写入二进制文件"><a href="#（2）写入二进制文件" class="headerlink" title="（2）写入二进制文件"></a>（2）写入二进制文件</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'wb_file'</span><span class="token punctuation">,</span> <span class="token string">'wb'</span><span class="token punctuation">)</span><span class="token comment"># file.write('哈哈')  # 直接写入文本会报错</span><span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'哈哈'</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 将'哈哈'解码为字节码，可以进行写入</span></code></pre><h2 id="（五）混合模式"><a href="#（五）混合模式" class="headerlink" title="（五）混合模式"></a>（五）混合模式</h2><h4 id="文件的三种混合模式"><a href="#文件的三种混合模式" class="headerlink" title="文件的三种混合模式"></a>文件的三种混合模式</h4><h4 id="w-写读"><a href="#w-写读" class="headerlink" title="w+ 写读"></a>w+ 写读</h4><p> &amp;emsp;&amp;emsp;这个功能基本没什么意义，它会创建⼀个新⽂件 ，写⼀段内容，可以再把写的内容读出来，没什么卵⽤</p><h4 id="r-读写"><a href="#r-读写" class="headerlink" title="r+ 读写"></a>r+ 读写</h4><p>&amp;emsp;&amp;emsp;能读能写,但都是写在⽂件最后，跟追加⼀样</p><h4 id="a-追加读"><a href="#a-追加读" class="headerlink" title="a+ 追加读"></a>a+ 追加读</h4><p>&amp;emsp;&amp;emsp;⽂件⼀打开时光标会在⽂件尾部,写的数据全会是追加的形式</p><p>&amp;emsp;&amp;emsp;尝试直接以r+模式打开⽂件，默认会把新增的内容追加到⽂件最后⾯。但我想要的是修改中间的内容 ，怎么办？ 为什么会把内容添加到尾部呢？(最新测试r+会从头覆盖，测试代码如下)</p><div align=center><img src="https://img-blog.csdnimg.cn/d76ac748b33d4e518d77feb4245ed806.png" width = 60%></div><h2 id="（六）文件修改"><a href="#（六）文件修改" class="headerlink" title="（六）文件修改"></a>（六）文件修改</h2><h4 id="问：为什么原有数据会被覆盖呢？"><a href="#问：为什么原有数据会被覆盖呢？" class="headerlink" title="问：为什么原有数据会被覆盖呢？"></a>问：为什么原有数据会被覆盖呢？</h4><p>&amp;emsp;&amp;emsp;这是硬盘的存储原理导致的，当你把⽂件存到硬盘上，就在硬盘上划了⼀块空间，存数据，等你下次打开这个⽂件 ，seek到⼀个位置，每改⼀个字，就是把原来的覆盖掉，如果要插⼊，是不可能的，因为后⾯的数据在硬盘上不会整体向后移。所以就出现 当前这个情况 ，你想插⼊，却变成了会把旧内容覆盖掉。</p><h4 id="问：但是⼈家word-vim-都可以修改⽂件呀，你这不能修改算个什么玩意？"><a href="#问：但是⼈家word-vim-都可以修改⽂件呀，你这不能修改算个什么玩意？" class="headerlink" title="问：但是⼈家word, vim 都可以修改⽂件呀，你这不能修改算个什么玩意？"></a>问：但是⼈家word, vim 都可以修改⽂件呀，你这不能修改算个什么玩意？</h4><p>&amp;emsp;&amp;emsp;我并没说就不能修改了，你想修改当然可以，就是不要在硬盘上修改，把内容全部读到内存⾥，数据在内存⾥可以随便增删改查，修改之后，把内容再全部写回硬盘，把原来的数据全部覆盖掉。vim word等各种⽂本编辑器都是这么⼲的。</p><h4 id="问：但是⽂件如果特别⼤，⽐如5个GB-读到内存，就⼀下⼦吃掉了5GB内存，好费资源呀，有没有更好的办法呢？"><a href="#问：但是⽂件如果特别⼤，⽐如5个GB-读到内存，就⼀下⼦吃掉了5GB内存，好费资源呀，有没有更好的办法呢？" class="headerlink" title="问：但是⽂件如果特别⼤，⽐如5个GB,读到内存，就⼀下⼦吃掉了5GB内存，好费资源呀，有没有更好的办法呢？"></a>问：但是⽂件如果特别⼤，⽐如5个GB,读到内存，就⼀下⼦吃掉了5GB内存，好费资源呀，有没有更好的办法呢？</h4><p>&amp;emsp;&amp;emsp;如果不想占内存，只能⽤另外⼀种办法啦，就是边读边改，什么意思？ 不是不能改么？是不能改原⽂件 ，但你可以打开旧⽂件 的同时，⽣成⼀个新⽂件呀，边从旧的⾥⾯⼀⾏⾏的读，边往新的⼀⾏⾏写，遇到需要修改就改了再写到新⽂件，这样，在内存⾥⼀直只存⼀⾏内容。就不占内存了。 但这样也有⼀个缺点，就是虽然不占内存 ，但是占硬盘，每次修改，都要⽣成⼀份新⽂件，虽然改完后，可以把旧的覆盖掉，但在改的过程中，还是有2份数据的。</p><h4 id="问：还有更好的⽅式么"><a href="#问：还有更好的⽅式么" class="headerlink" title="问：还有更好的⽅式么?"></a>问：还有更好的⽅式么?</h4><p>&amp;emsp;&amp;emsp;有完没完？ 没了。</p><h4 id="文件修改实例"><a href="#文件修改实例" class="headerlink" title="文件修改实例"></a>文件修改实例</h4><h4 id="1、stock-data文件"><a href="#1、stock-data文件" class="headerlink" title="1、stock_data文件"></a>1、stock_data文件</h4><pre class="language-python" data-language="python"><code class="language-python">股票代码<span class="token punctuation">,</span>股票名称<span class="token punctuation">,</span>当前价<span class="token punctuation">,</span>涨跌额<span class="token punctuation">,</span>涨跌幅<span class="token punctuation">,</span>年初⾄今<span class="token punctuation">,</span>成交量<span class="token punctuation">,</span>成交额<span class="token punctuation">,</span>换⼿率<span class="token punctuation">,</span>市盈率<span class="token punctuation">(</span>TTM<span class="token punctuation">)</span><span class="token punctuation">,</span>股息率<span class="token punctuation">,</span>市值SH601778<span class="token punctuation">,</span>N晶科<span class="token punctuation">,</span><span class="token number">6.29</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.92</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">43.94</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">43.94</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">259.66</span>万<span class="token punctuation">,</span><span class="token number">1625.52</span>万<span class="token punctuation">,</span><span class="token number">0.44</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">22.32</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token punctuation">,</span><span class="token number">173.95</span>亿SH688566<span class="token punctuation">,</span>吉⻉尔<span class="token punctuation">,</span><span class="token number">52.66</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.96</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">15.23</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">122.29</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1626.58</span>万<span class="token punctuation">,</span><span class="token number">8.09</span>亿<span class="token punctuation">,</span><span class="token number">42.29</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">89.34</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token punctuation">,</span><span class="token number">98.44</span>亿SH688268<span class="token punctuation">,</span>华特⽓体<span class="token punctuation">,</span><span class="token number">88.80</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">11.72</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">15.20</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">102.51</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">622.60</span>万<span class="token punctuation">,</span><span class="token number">5.13</span>亿<span class="token punctuation">,</span><span class="token number">22.87</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">150.47</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token punctuation">,</span><span class="token number">106.56</span>亿SH600734<span class="token punctuation">,</span>实达集团<span class="token punctuation">,</span><span class="token number">2.60</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.24</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.17</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">61.71</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1340.27</span>万<span class="token punctuation">,</span><span class="token number">3391.14</span>万<span class="token punctuation">,</span><span class="token number">2.58</span><span class="token operator">%</span><span class="token punctuation">,</span>亏损<span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">16.18</span>亿</code></pre><h4 id="2、修改代码"><a href="#2、修改代码" class="headerlink" title="2、修改代码"></a>2、修改代码</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 1、将数据导入内存</span><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'stock_data'</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'r+'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>data <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 使用read方法</span>new_data <span class="token operator">=</span> data<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'吉⻉尔'</span><span class="token punctuation">,</span> <span class="token string">'路飞学城'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>new_data<span class="token punctuation">)</span><span class="token comment"># 2、删除硬盘数据</span><span class="token builtin">file</span><span class="token punctuation">.</span>seek<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>  <span class="token comment"># 将光标移动到文件最开始</span><span class="token builtin">file</span><span class="token punctuation">.</span>truncate<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 截断：将光标后的数据全部删除</span><span class="token comment"># 3、写入新数据</span><span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>new_data<span class="token punctuation">)</span><span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 运行后stock_data的'吉⻉尔',将改为'路飞学城'</span></code></pre><h1 id="二、练习–全局文件检索替换"><a href="#二、练习–全局文件检索替换" class="headerlink" title="二、练习–全局文件检索替换"></a>二、练习–全局文件检索替换</h1><p>&amp;emsp;&amp;emsp;写⼀个脚本，允许⽤户按以下⽅式执⾏时，即可以对指定⽂件内容进⾏全局替换，且替换完毕后打印替换了多少处内容。</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">file_replace</span><span class="token punctuation">(</span>file_name<span class="token punctuation">,</span> old_str<span class="token punctuation">,</span> new_str<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 1、将数据导入内存</span>    <span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>file_name<span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'r+'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    new_data <span class="token operator">=</span> data<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>old_str<span class="token punctuation">,</span> new_str<span class="token punctuation">)</span>    <span class="token comment"># 2、删除硬盘数据</span>    <span class="token builtin">file</span><span class="token punctuation">.</span>seek<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>  <span class="token comment"># 将光标移动到文件最开始</span>    <span class="token builtin">file</span><span class="token punctuation">.</span>truncate<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 截断：将光标后的数据全部删除</span>    <span class="token comment"># 3、写入新数据</span>    <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>new_data<span class="token punctuation">)</span>    <span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'成功替换字符</span><span class="token interpolation"><span class="token punctuation">&#123;</span>old_str<span class="token punctuation">&#125;</span></span><span class="token string">到</span><span class="token interpolation"><span class="token punctuation">&#123;</span>new_str<span class="token punctuation">&#125;</span></span><span class="token string">，共计</span><span class="token interpolation"><span class="token punctuation">&#123;</span>data<span class="token punctuation">.</span>count<span class="token punctuation">(</span>old_str<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">处'</span></span><span class="token punctuation">)</span>file_replace<span class="token punctuation">(</span><span class="token string">'stock_data'</span><span class="token punctuation">,</span> <span class="token string">'亿'</span><span class="token punctuation">,</span> <span class="token string">'万万'</span><span class="token punctuation">)</span></code></pre><h1 id="三、练习–用户登陆认证程序"><a href="#三、练习–用户登陆认证程序" class="headerlink" title="三、练习–用户登陆认证程序"></a>三、练习–用户登陆认证程序</h1><h2 id="（一）要求"><a href="#（一）要求" class="headerlink" title="（一）要求"></a>（一）要求</h2><p>1、要求⽤户输⼊帐号密码进⾏登陆<br>2、⽤户账号信息保存在⽂件内<br>3、⽤户密码输⼊错误三次后锁定⽤户，下次再登录，检测到是这个被锁定的⽤户，则依然不允许其它登录，提示已被锁</p><h4 id="用户数据"><a href="#用户数据" class="headerlink" title="用户数据"></a>用户数据</h4><pre class="language-none"><code class="language-none">耿天霸 111111 unlock童天霸 222222 unlock武天霸 333333 unlock霸天霸 444444 unlock张天霸 555555 unlock</code></pre><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 1、导入用户数据</span>user_info <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'users'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token comment"># 2、将数据转化成字典，key为用户名，value为一个字典，包含&#123;用户名：，密码：，状态：&#125;</span>info_dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment"># '耿天霸'：&#123;'password': '111111', 'state': 'unlock'&#125;,</span>    <span class="token comment"># 'xxx':&#123;'password':'xxxxxx', 'state': 'xxxxx'&#125;</span><span class="token punctuation">&#125;</span><span class="token comment"># 遍历每一行</span><span class="token keyword">for</span> line <span class="token keyword">in</span> user_info<span class="token punctuation">:</span>    user <span class="token operator">=</span> line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 先用strip()去掉空格，再用split()将逗号分开</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>    info_dic<span class="token punctuation">[</span>user<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'password'</span><span class="token punctuation">:</span> user<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'state'</span><span class="token punctuation">:</span> user<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token comment"># print(info_dic)</span><span class="token comment"># 4、登录小程序</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    log_name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input your username: '</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># strip方法防止用户输入空格导致判断错误</span>    <span class="token comment"># 如果用户名在用户信息中</span>    <span class="token keyword">if</span> log_name <span class="token keyword">in</span> info_dic<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 如果用户名被被锁定：直接退出并输入提示语</span>        <span class="token keyword">if</span> info_dic<span class="token punctuation">[</span>log_name<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'state'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'locked'</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'you account is looked'</span><span class="token punctuation">)</span>            <span class="token keyword">continue</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            times <span class="token operator">=</span> <span class="token number">0</span>            <span class="token comment"># 可以输入三次密码</span>            <span class="token keyword">while</span> times <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">:</span>                log_password <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input your password: '</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment"># 如果密码正确：退出并打印提示</span>                <span class="token keyword">if</span> log_password <span class="token operator">==</span> info_dic<span class="token punctuation">[</span>log_name<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                    exit<span class="token punctuation">(</span><span class="token string">'welcome, you are logged in'</span><span class="token punctuation">)</span>                <span class="token comment"># 如果密码不正确：打印提示</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'your password is incorrect, you have </span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token number">2</span> <span class="token operator">-</span> times<span class="token punctuation">&#125;</span></span><span class="token string"> times left'</span></span><span class="token punctuation">)</span>                    <span class="token comment"># 如果密码错误三次：锁定账户，打印提示；并按照原格式保存会数据库</span>                    <span class="token keyword">if</span> times <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>                        info_dic<span class="token punctuation">[</span>log_name<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'state'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'locked'</span>                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'your account is locked'</span><span class="token punctuation">)</span>                        <span class="token comment"># 字典转回txt</span>                        user_info1 <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'users'</span><span class="token punctuation">,</span> mode<span class="token operator">=</span><span class="token string">'w'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>                        <span class="token keyword">for</span> k <span class="token keyword">in</span> info_dic<span class="token punctuation">:</span>                            user_info1<span class="token punctuation">.</span>write<span class="token punctuation">(</span>k <span class="token operator">+</span> <span class="token string">' '</span> <span class="token operator">+</span> info_dic<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">' '</span> <span class="token operator">+</span> info_dic<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'state'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span>                        user_info1<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 源文件中的耿天霸状态也会被锁定</span>                times <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'username not registered'</span><span class="token punctuation">)</span>        <span class="token keyword">continue</span></code></pre><h1 id="四、综合实战–股票查询程序"><a href="#四、综合实战–股票查询程序" class="headerlink" title="四、综合实战–股票查询程序"></a>四、综合实战–股票查询程序</h1><h4 id="（一）数据源"><a href="#（一）数据源" class="headerlink" title="（一）数据源"></a>（一）数据源</h4><div align=center><img src="https://img-blog.csdnimg.cn/42d0acb9f49b4172bd756c8301768e97.png" width = 100%></div><h4 id="数据源stock-data-txt"><a href="#数据源stock-data-txt" class="headerlink" title="数据源stock_data.txt"></a>数据源stock_data.txt</h4><pre class="language-python" data-language="python"><code class="language-python">股票代码<span class="token punctuation">,</span>股票名称<span class="token punctuation">,</span>当前价<span class="token punctuation">,</span>涨跌额<span class="token punctuation">,</span>涨跌幅<span class="token punctuation">,</span>年初⾄今<span class="token punctuation">,</span>成交量<span class="token punctuation">,</span>成交额<span class="token punctuation">,</span>换⼿率<span class="token punctuation">,</span>市盈率<span class="token punctuation">(</span>TTM<span class="token punctuation">)</span><span class="token punctuation">,</span>股息率<span class="token punctuation">,</span>市值SH601778<span class="token punctuation">,</span>N晶科<span class="token punctuation">,</span><span class="token number">6.29</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.92</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">43.94</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">43.94</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">259.66</span>万<span class="token punctuation">,</span><span class="token number">1625.52</span>万<span class="token punctuation">,</span><span class="token number">0.44</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">22.32</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token punctuation">,</span><span class="token number">173.95</span>亿SH688566<span class="token punctuation">,</span>吉⻉尔<span class="token punctuation">,</span><span class="token number">52.66</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.96</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">15.23</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">122.29</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1626.58</span>万<span class="token punctuation">,</span><span class="token number">8.09</span>亿<span class="token punctuation">,</span><span class="token number">42.29</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">89.34</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token punctuation">,</span><span class="token number">98.44</span>亿SH688268<span class="token punctuation">,</span>华特⽓体<span class="token punctuation">,</span><span class="token number">88.80</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">11.72</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">15.20</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">102.51</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">622.60</span>万<span class="token punctuation">,</span><span class="token number">5.13</span>亿<span class="token punctuation">,</span><span class="token number">22.87</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">150.47</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token punctuation">,</span><span class="token number">106.56</span>亿SH600734<span class="token punctuation">,</span>实达集团<span class="token punctuation">,</span><span class="token number">2.60</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.24</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.17</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">61.71</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1340.27</span>万<span class="token punctuation">,</span><span class="token number">3391.14</span>万<span class="token punctuation">,</span><span class="token number">2.58</span><span class="token operator">%</span><span class="token punctuation">,</span>亏损<span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">16.18</span>亿SH900957<span class="token punctuation">,</span>凌云B股<span class="token punctuation">,</span><span class="token number">0.36</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.033</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.09</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">35.25</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">119.15</span>万<span class="token punctuation">,</span><span class="token number">42.10</span>万<span class="token punctuation">,</span><span class="token number">0.65</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">44.65</span><span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1.26</span>亿SZ000584<span class="token punctuation">,</span>哈⼯智能<span class="token punctuation">,</span><span class="token number">6.01</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.55</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.07</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">4.15</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">2610.86</span>万<span class="token punctuation">,</span><span class="token number">1.53</span>亿<span class="token punctuation">,</span><span class="token number">4.36</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">199.33</span><span class="token punctuation">,</span><span class="token number">0.26</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">36.86</span>亿SH600599<span class="token punctuation">,</span>熊猫⾦控<span class="token punctuation">,</span><span class="token number">6.78</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.62</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.06</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">35.55</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">599.64</span>万<span class="token punctuation">,</span><span class="token number">3900.23</span>万<span class="token punctuation">,</span><span class="token number">3.61</span><span class="token operator">%</span><span class="token punctuation">,</span>亏损<span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">11.25</span>亿SH600520<span class="token punctuation">,</span>⽂⼀科技<span class="token punctuation">,</span><span class="token number">8.21</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.75</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.05</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">24.05</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">552.34</span>万<span class="token punctuation">,</span><span class="token number">4464.69</span>万<span class="token punctuation">,</span><span class="token number">3.49</span><span class="token operator">%</span><span class="token punctuation">,</span>亏损<span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">13.01</span>亿SH603682<span class="token punctuation">,</span>锦和商业<span class="token punctuation">,</span><span class="token number">11.73</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.07</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.04</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">48.29</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">2746.63</span>万<span class="token punctuation">,</span><span class="token number">3.15</span>亿<span class="token punctuation">,</span><span class="token number">29.06</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">29.62</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token punctuation">,</span><span class="token number">55.42</span>亿SZ300831<span class="token punctuation">,</span>派瑞股份<span class="token punctuation">,</span><span class="token number">12.27</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.12</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.04</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">208.29</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">25.38</span>万<span class="token punctuation">,</span><span class="token number">311.41</span>万<span class="token punctuation">,</span><span class="token number">0.32</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">60.59</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token punctuation">,</span><span class="token number">39.26</span>亿SH900939<span class="token punctuation">,</span>汇丽B<span class="token punctuation">,</span><span class="token number">0.504</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.046</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.04</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">23.52</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">123.86</span>万<span class="token punctuation">,</span><span class="token number">61.86</span>万<span class="token punctuation">,</span><span class="token number">1.41</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">52.80</span><span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">9147.60</span>万SH600880<span class="token punctuation">,</span>博瑞传播<span class="token punctuation">,</span><span class="token number">4.39</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.40</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.03</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.03</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1117.75</span>万<span class="token punctuation">,</span><span class="token number">4816.57</span>万<span class="token punctuation">,</span><span class="token number">1.02</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">95.87</span><span class="token punctuation">,</span><span class="token number">0.50</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">48.00</span>亿SZ000609<span class="token punctuation">,</span>中迪投资<span class="token punctuation">,</span><span class="token number">7.68</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.70</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.03</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">39.64</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">2663.08</span>万<span class="token punctuation">,</span><span class="token number">2.00</span>亿<span class="token punctuation">,</span><span class="token number">9.12</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">58.84</span><span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">22.98</span>亿SZ300328<span class="token punctuation">,</span>宜安科技<span class="token punctuation">,</span><span class="token number">15.80</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.44</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.03</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">7.19</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">432.45</span>万<span class="token punctuation">,</span><span class="token number">6832.68</span>万<span class="token punctuation">,</span><span class="token number">0.95</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">64.80</span><span class="token punctuation">,</span><span class="token number">0.51</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">72.72</span>亿SZ002988<span class="token punctuation">,</span>豪美新材<span class="token punctuation">,</span><span class="token number">17.33</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.58</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.03</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">58.41</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">3.50</span>万<span class="token punctuation">,</span><span class="token number">60.68</span>万<span class="token punctuation">,</span><span class="token number">0.06</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">24.42</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token punctuation">,</span><span class="token number">40.34</span>亿SZ000615<span class="token punctuation">,</span>京汉股份<span class="token punctuation">,</span><span class="token number">4.61</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.42</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.02</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">4.06</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">518.09</span>万<span class="token punctuation">,</span><span class="token number">2388.41</span>万<span class="token punctuation">,</span><span class="token number">0.69</span><span class="token operator">%</span><span class="token punctuation">,</span>亏损<span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">36.06</span>亿SZ300443<span class="token punctuation">,</span>⾦雷股份<span class="token punctuation">,</span><span class="token number">18.33</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.67</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.02</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">32.74</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">987.25</span>万<span class="token punctuation">,</span><span class="token number">1.75</span>亿<span class="token punctuation">,</span><span class="token number">6.19</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">18.78</span><span class="token punctuation">,</span><span class="token number">1.08</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">43.64</span>亿SH600506<span class="token punctuation">,</span>⾹梨股份<span class="token punctuation">,</span><span class="token number">11.42</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.04</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.02</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">11.96</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1039.48</span>万<span class="token punctuation">,</span><span class="token number">1.18</span>亿<span class="token punctuation">,</span><span class="token number">7.04</span><span class="token operator">%</span><span class="token punctuation">,</span>亏损<span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">16.87</span>亿SZ300505<span class="token punctuation">,</span>川⾦诺<span class="token punctuation">,</span><span class="token number">15.61</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.42</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.01</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">11.26</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">493.54</span>万<span class="token punctuation">,</span><span class="token number">7555.40</span>万<span class="token punctuation">,</span><span class="token number">6.03</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">26.70</span><span class="token punctuation">,</span><span class="token number">0.85</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">20.40</span>亿SZ300830<span class="token punctuation">,</span>⾦现代<span class="token punctuation">,</span><span class="token number">14.95</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.36</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.01</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">239.77</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">63.66</span>万<span class="token punctuation">,</span><span class="token number">951.76</span>万<span class="token punctuation">,</span><span class="token number">0.74</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">70.76</span><span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">64.30</span>亿SH603630<span class="token punctuation">,</span>拉芳家化<span class="token punctuation">,</span><span class="token number">17.26</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.57</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.01</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">27.85</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">949.49</span>万<span class="token punctuation">,</span><span class="token number">1.60</span>亿<span class="token punctuation">,</span><span class="token number">4.19</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">209.44</span><span class="token punctuation">,</span><span class="token number">0.83</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">39.13</span>亿SZ002655<span class="token punctuation">,</span>共达电声<span class="token punctuation">,</span><span class="token number">11.43</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.04</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.01</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">14.64</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1683.51</span>万<span class="token punctuation">,</span><span class="token number">1.88</span>亿<span class="token punctuation">,</span><span class="token number">4.68</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">166.69</span><span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">41.15</span>亿SZ300460<span class="token punctuation">,</span>惠伦晶体<span class="token punctuation">,</span><span class="token number">16.59</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.51</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.01</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.97</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">430.28</span>万<span class="token punctuation">,</span><span class="token number">6974.52</span>万<span class="token punctuation">,</span><span class="token number">2.56</span><span class="token operator">%</span><span class="token punctuation">,</span>亏损<span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">27.92</span>亿SH603929<span class="token punctuation">,</span>亚翔集成<span class="token punctuation">,</span><span class="token number">20.33</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.85</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.01</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">33.40</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1373.66</span>万<span class="token punctuation">,</span><span class="token number">2.76</span>亿<span class="token punctuation">,</span><span class="token number">6.44</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">84.29</span><span class="token punctuation">,</span><span class="token number">1.25</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">43.38</span>亿SH603392<span class="token punctuation">,</span>万泰⽣物<span class="token punctuation">,</span><span class="token number">35.97</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">3.27</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">311.09</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">6.92</span>万<span class="token punctuation">,</span><span class="token number">248.91</span>万<span class="token punctuation">,</span><span class="token number">0.16</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">65.24</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token punctuation">,</span><span class="token number">155.97</span>亿SZ000788<span class="token punctuation">,</span>北⼤医药<span class="token punctuation">,</span><span class="token number">6.82</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.62</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">2.40</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">832.44</span>万<span class="token punctuation">,</span><span class="token number">5583.87</span>万<span class="token punctuation">,</span><span class="token number">1.40</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">89.69</span><span class="token punctuation">,</span><span class="token number">0.32</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">40.65</span>亿SH601609<span class="token punctuation">,</span>⾦⽥铜业<span class="token punctuation">,</span><span class="token number">10.89</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.99</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">66.26</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">4027.64</span>万<span class="token punctuation">,</span><span class="token number">4.28</span>亿<span class="token punctuation">,</span><span class="token number">16.64</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">32.38</span><span class="token punctuation">,</span><span class="token number">0.32</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">158.66</span>亿SZ000403<span class="token punctuation">,</span>双林⽣物<span class="token punctuation">,</span><span class="token number">52.48</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">4.77</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">62.48</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">171.75</span>万<span class="token punctuation">,</span><span class="token number">9013.54</span>万<span class="token punctuation">,</span><span class="token number">0.63</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">88.80</span><span class="token punctuation">,</span><span class="token number">0.23</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">143.05</span>亿SZ300832<span class="token punctuation">,</span>新产业<span class="token punctuation">,</span><span class="token number">72.80</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.62</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">131.92</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">10.73</span>万<span class="token punctuation">,</span><span class="token number">780.85</span>万<span class="token punctuation">,</span><span class="token number">0.26</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">40.20</span><span class="token punctuation">,</span><span class="token number">0.62</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">299.64</span>亿SZ002985<span class="token punctuation">,</span>北摩⾼科<span class="token punctuation">,</span><span class="token number">92.58</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">8.42</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">10.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">310.92</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">2422.97</span>万<span class="token punctuation">,</span><span class="token number">21.55</span>亿<span class="token punctuation">,</span><span class="token number">64.54</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">60.48</span><span class="token punctuation">,</span><span class="token number">1.08</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">139.02</span>亿SH603348<span class="token punctuation">,</span>⽂灿股份<span class="token punctuation">,</span><span class="token number">18.06</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.64</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">9.99</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">25.15</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">357.86</span>万<span class="token punctuation">,</span><span class="token number">6328.87</span>万<span class="token punctuation">,</span><span class="token number">4.39</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">89.39</span><span class="token punctuation">,</span><span class="token number">0.89</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">41.83</span>亿SH603900<span class="token punctuation">,</span>莱绅通灵<span class="token punctuation">,</span><span class="token number">8.92</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.81</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">9.99</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">5.61</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1364.10</span>万<span class="token punctuation">,</span><span class="token number">1.15</span>亿<span class="token punctuation">,</span><span class="token number">4.01</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">43.78</span><span class="token punctuation">,</span><span class="token number">5.06</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">30.37</span>亿SH603042<span class="token punctuation">,</span>华脉科技<span class="token punctuation">,</span><span class="token number">17.85</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.62</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">9.98</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">17.05</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">491.44</span>万<span class="token punctuation">,</span><span class="token number">8705.99</span>万<span class="token punctuation">,</span><span class="token number">4.86</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">128.50</span><span class="token punctuation">,</span><span class="token number">0.31</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">24.28</span>亿SZ300260<span class="token punctuation">,</span>新莱应材<span class="token punctuation">,</span><span class="token number">19.83</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.80</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">9.98</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">68.48</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1800.45</span>万<span class="token punctuation">,</span><span class="token number">3.48</span>亿<span class="token punctuation">,</span><span class="token number">14.16</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">65.15</span><span class="token punctuation">,</span><span class="token number">0.73</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">40.04</span>亿SZ000557<span class="token punctuation">,</span>⻄部创业<span class="token punctuation">,</span><span class="token number">3.42</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.31</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">9.97</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">0.87</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">2751.17</span>万<span class="token punctuation">,</span><span class="token number">9408.89</span>万<span class="token punctuation">,</span><span class="token number">1.89</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">79.39</span><span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">49.88</span>亿SZ300716<span class="token punctuation">,</span>国⽴科技<span class="token punctuation">,</span><span class="token number">9.94</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.90</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">9.96</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">4.24</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">142.25</span>万<span class="token punctuation">,</span><span class="token number">1413.92</span>万<span class="token punctuation">,</span><span class="token number">1.50</span><span class="token operator">%</span><span class="token punctuation">,</span>亏损<span class="token punctuation">,</span><span class="token number">0.29</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">15.91</span>亿SZ002449<span class="token punctuation">,</span>国星光电<span class="token punctuation">,</span><span class="token number">11.92</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.08</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">9.96</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">6.80</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">5185.52</span>万<span class="token punctuation">,</span><span class="token number">6.03</span>亿<span class="token punctuation">,</span><span class="token number">8.53</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">21.51</span><span class="token punctuation">,</span><span class="token number">2.73</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">73.72</span>亿SZ002397<span class="token punctuation">,</span>梦洁股份<span class="token punctuation">,</span><span class="token number">8.50</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.77</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">9.96</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">73.47</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">810.06</span>万<span class="token punctuation">,</span><span class="token number">6885.51</span>万<span class="token punctuation">,</span><span class="token number">1.67</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">110.68</span><span class="token punctuation">,</span><span class="token number">2.35</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">64.95</span>亿SZ002662<span class="token punctuation">,</span>京威股份<span class="token punctuation">,</span><span class="token number">4.09</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.37</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">9.95</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">54.92</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">8588.12</span>万<span class="token punctuation">,</span><span class="token number">3.40</span>亿<span class="token punctuation">,</span><span class="token number">5.89</span><span class="token operator">%</span><span class="token punctuation">,</span>亏损<span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">61.35</span>亿SZ002297<span class="token punctuation">,</span>博云新材<span class="token punctuation">,</span><span class="token number">6.30</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.57</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">9.95</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1.87</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">2852.27</span>万<span class="token punctuation">,</span><span class="token number">1.74</span>亿<span class="token punctuation">,</span><span class="token number">6.07</span><span class="token operator">%</span><span class="token punctuation">,</span>亏损<span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">29.69</span>亿SZ300351<span class="token punctuation">,</span>永贵电器<span class="token punctuation">,</span><span class="token number">8.62</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.78</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">9.95</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">2.16</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1443.26</span>万<span class="token punctuation">,</span><span class="token number">1.23</span>亿<span class="token punctuation">,</span><span class="token number">5.89</span><span class="token operator">%</span><span class="token punctuation">,</span>亏损<span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">33.07</span>亿SH600834<span class="token punctuation">,</span>申通地铁<span class="token punctuation">,</span><span class="token number">7.63</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.69</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">9.94</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">5.68</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">223.20</span>万<span class="token punctuation">,</span><span class="token number">1703.02</span>万<span class="token punctuation">,</span><span class="token number">0.47</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">74.74</span><span class="token punctuation">,</span><span class="token number">0.56</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">36.42</span>亿SZ000616<span class="token punctuation">,</span>海航投资<span class="token punctuation">,</span><span class="token number">3.10</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.28</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">9.93</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">27.57</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">5002.95</span>万<span class="token punctuation">,</span><span class="token number">1.51</span>亿<span class="token punctuation">,</span><span class="token number">3.50</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">133.28</span><span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">44.34</span>亿SH600662<span class="token punctuation">,</span>强⽣控股<span class="token punctuation">,</span><span class="token number">5.54</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.50</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">9.92</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">22.03</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">254.89</span>万<span class="token punctuation">,</span><span class="token number">1412.07</span>万<span class="token punctuation">,</span><span class="token number">0.24</span><span class="token operator">%</span><span class="token punctuation">,</span>亏损<span class="token punctuation">,</span><span class="token number">0.72</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">58.36</span>亿SZ300223<span class="token punctuation">,</span>北京君正<span class="token punctuation">,</span><span class="token number">107.20</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">8.92</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">9.08</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">23.01</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">930.81</span>万<span class="token punctuation">,</span><span class="token number">9.86</span>亿<span class="token punctuation">,</span><span class="token number">7.34</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">314.71</span><span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">216.28</span>亿SZ002978<span class="token punctuation">,</span>安宁股份<span class="token punctuation">,</span><span class="token number">35.46</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">2.95</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">9.07</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">29.09</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1181.96</span>万<span class="token punctuation">,</span><span class="token number">4.11</span>亿<span class="token punctuation">,</span><span class="token number">29.10</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">25.11</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token punctuation">,</span><span class="token number">142.31</span>亿SZ002084<span class="token punctuation">,</span>海鸥住⼯<span class="token punctuation">,</span><span class="token number">7.09</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.54</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">8.24</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">9.24</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1647.83</span>万<span class="token punctuation">,</span><span class="token number">1.16</span>亿<span class="token punctuation">,</span><span class="token number">3.36</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">33.83</span><span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">35.60</span>亿SH688012<span class="token punctuation">,</span>中微公司<span class="token punctuation">,</span><span class="token number">229.00</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">17.30</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">8.17</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">147.84</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">448.32</span>万<span class="token punctuation">,</span><span class="token number">10.05</span>亿<span class="token punctuation">,</span><span class="token number">8.72</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">607.21</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token punctuation">,</span><span class="token number">1224.83</span>亿SZ002049<span class="token punctuation">,</span>紫光国微<span class="token punctuation">,</span><span class="token number">74.04</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">5.54</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">8.09</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">45.63</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">4459.03</span>万<span class="token punctuation">,</span><span class="token number">32.57</span>亿<span class="token punctuation">,</span><span class="token number">7.35</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">85.03</span><span class="token punctuation">,</span><span class="token number">0.10</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">449.29</span>亿SH600329<span class="token punctuation">,</span>中新药业<span class="token punctuation">,</span><span class="token number">14.83</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.10</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">8.01</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">7.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1159.16</span>万<span class="token punctuation">,</span><span class="token number">1.68</span>亿<span class="token punctuation">,</span><span class="token number">2.05</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">18.90</span><span class="token punctuation">,</span><span class="token number">2.16</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">114.61</span>亿SZ002204<span class="token punctuation">,</span>⼤连᯿⼯<span class="token punctuation">,</span><span class="token number">5.71</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.41</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">7.74</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">77.88</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1.73</span>亿<span class="token punctuation">,</span><span class="token number">9.35</span>亿<span class="token punctuation">,</span><span class="token number">8.97</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">213.83</span><span class="token punctuation">,</span><span class="token number">0.55</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">110.28</span>亿SH688088<span class="token punctuation">,</span>虹软科技<span class="token punctuation">,</span><span class="token number">84.16</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">5.96</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">7.62</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">78.12</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">290.59</span>万<span class="token punctuation">,</span><span class="token number">2.43</span>亿<span class="token punctuation">,</span><span class="token number">7.22</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">148.96</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token punctuation">,</span><span class="token number">341.69</span>亿SZ300398<span class="token punctuation">,</span>⻜凯材料<span class="token punctuation">,</span><span class="token number">21.33</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.50</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">7.56</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">42.68</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">2676.82</span>万<span class="token punctuation">,</span><span class="token number">5.65</span>亿<span class="token punctuation">,</span><span class="token number">6.21</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">47.18</span><span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">110.41</span>亿SZ300298<span class="token punctuation">,</span>三诺⽣物<span class="token punctuation">,</span><span class="token number">21.93</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.53</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">7.50</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">48.45</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">832.56</span>万<span class="token punctuation">,</span><span class="token number">1.80</span>亿<span class="token punctuation">,</span><span class="token number">1.89</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">46.66</span><span class="token punctuation">,</span><span class="token number">1.44</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">123.97</span>亿SH603236<span class="token punctuation">,</span>移远通信<span class="token punctuation">,</span><span class="token number">235.40</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">16.09</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">7.34</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">61.34</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">96.10</span>万<span class="token punctuation">,</span><span class="token number">2.22</span>亿<span class="token punctuation">,</span><span class="token number">4.31</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">151.64</span><span class="token punctuation">,</span><span class="token number">0.22</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">209.93</span>亿SZ002074<span class="token punctuation">,</span>国轩⾼科<span class="token punctuation">,</span><span class="token number">26.93</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.79</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">7.12</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">85.09</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">3628.58</span>万<span class="token punctuation">,</span><span class="token number">9.54</span>亿<span class="token punctuation">,</span><span class="token number">3.60</span><span class="token operator">%</span><span class="token punctuation">,</span>亏损<span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">304.25</span>亿SZ000710<span class="token punctuation">,</span>⻉瑞基因<span class="token punctuation">,</span><span class="token number">51.27</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">3.37</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">7.04</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">40.08</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">411.57</span>万<span class="token punctuation">,</span><span class="token number">2.09</span>亿<span class="token punctuation">,</span><span class="token number">2.91</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">63.69</span><span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">181.81</span>亿SZ300624<span class="token punctuation">,</span>万兴科技<span class="token punctuation">,</span><span class="token number">95.86</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.28</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">7.01</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">51.92</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">374.27</span>万<span class="token punctuation">,</span><span class="token number">3.54</span>亿<span class="token punctuation">,</span><span class="token number">7.52</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">84.07</span><span class="token punctuation">,</span><span class="token number">0.38</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">77.91</span>亿SZ300002<span class="token punctuation">,</span>神州泰岳<span class="token punctuation">,</span><span class="token number">6.42</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.41</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.82</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">96.93</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">9118.57</span>万<span class="token punctuation">,</span><span class="token number">5.66</span>亿<span class="token punctuation">,</span><span class="token number">5.59</span><span class="token operator">%</span><span class="token punctuation">,</span>亏损<span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">126.10</span>亿SH603012<span class="token punctuation">,</span>创⼒集团<span class="token punctuation">,</span><span class="token number">7.30</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.46</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.73</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">18.16</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">2648.28</span>万<span class="token punctuation">,</span><span class="token number">1.92</span>亿<span class="token punctuation">,</span><span class="token number">4.16</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">15.57</span><span class="token punctuation">,</span><span class="token number">1.01</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">46.47</span>亿SZ300144<span class="token punctuation">,</span>宋城演艺<span class="token punctuation">,</span><span class="token number">31.70</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.98</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.66</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">2.56</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">980.92</span>万<span class="token punctuation">,</span><span class="token number">3.08</span>亿<span class="token punctuation">,</span><span class="token number">0.82</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">45.22</span><span class="token punctuation">,</span><span class="token number">0.66</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">460.77</span>亿SZ300724<span class="token punctuation">,</span>捷佳伟创<span class="token punctuation">,</span><span class="token number">67.58</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">4.18</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.59</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">78.36</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">223.02</span>万<span class="token punctuation">,</span><span class="token number">1.48</span>亿<span class="token punctuation">,</span><span class="token number">1.31</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">57.75</span><span class="token punctuation">,</span><span class="token number">0.28</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">216.70</span>亿SZ200706<span class="token punctuation">,</span>瓦轴B<span class="token punctuation">,</span><span class="token number">2.27</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.14</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.57</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">21.99</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">25.88</span>万<span class="token punctuation">,</span><span class="token number">57.83</span>万<span class="token punctuation">,</span><span class="token number">0.16</span><span class="token operator">%</span><span class="token punctuation">,</span>亏损<span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">9.18</span>亿SH603693<span class="token punctuation">,</span>江苏新能<span class="token punctuation">,</span><span class="token number">12.10</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.74</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.51</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">18.86</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">2377.38</span>万<span class="token punctuation">,</span><span class="token number">2.87</span>亿<span class="token punctuation">,</span><span class="token number">12.32</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">19.47</span><span class="token punctuation">,</span><span class="token number">1.32</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">74.78</span>亿SZ200468<span class="token punctuation">,</span>宁通信B<span class="token punctuation">,</span><span class="token number">1.82</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.11</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.43</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">26.32</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">53.22</span>万<span class="token punctuation">,</span><span class="token number">96.40</span>万<span class="token punctuation">,</span><span class="token number">0.53</span><span class="token operator">%</span><span class="token punctuation">,</span>亏损<span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">3.89</span>亿SH600426<span class="token punctuation">,</span>华鲁恒升<span class="token punctuation">,</span><span class="token number">18.11</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.09</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.40</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">8.86</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1369.76</span>万<span class="token punctuation">,</span><span class="token number">2.46</span>亿<span class="token punctuation">,</span><span class="token number">0.85</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">13.16</span><span class="token punctuation">,</span><span class="token number">2.05</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">294.59</span>亿SH900953<span class="token punctuation">,</span>凯⻢B<span class="token punctuation">,</span><span class="token number">0.334</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.020</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.37</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">30.13</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">186.93</span>万<span class="token punctuation">,</span><span class="token number">63.29</span>万<span class="token punctuation">,</span><span class="token number">0.78</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">236.41</span><span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">2.14</span>亿SH600703<span class="token punctuation">,</span>三安光电<span class="token punctuation">,</span><span class="token number">25.15</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.50</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.34</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">36.98</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1.08</span>亿<span class="token punctuation">,</span><span class="token number">26.73</span>亿<span class="token punctuation">,</span><span class="token number">2.65</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">95.77</span><span class="token punctuation">,</span><span class="token number">0.42</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1025.72</span>亿SZ300118<span class="token punctuation">,</span>东⽅⽇升<span class="token punctuation">,</span><span class="token number">12.75</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.74</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.16</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">7.94</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">3686.23</span>万<span class="token punctuation">,</span><span class="token number">4.68</span>亿<span class="token punctuation">,</span><span class="token number">5.29</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">13.57</span><span class="token punctuation">,</span><span class="token number">1.63</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">114.92</span>亿SZ300418<span class="token punctuation">,</span>昆仑万维<span class="token punctuation">,</span><span class="token number">22.25</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.29</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.15</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">32.84</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">3641.22</span>万<span class="token punctuation">,</span><span class="token number">8.00</span>亿<span class="token punctuation">,</span><span class="token number">4.03</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">18.07</span><span class="token punctuation">,</span><span class="token number">0.12</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">257.36</span>亿SH900929<span class="token punctuation">,</span>锦旅B股<span class="token punctuation">,</span><span class="token number">1.214</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.070</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.12</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">25.52</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">36.05</span>万<span class="token punctuation">,</span><span class="token number">43.02</span>万<span class="token punctuation">,</span><span class="token number">0.55</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">19.81</span><span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1.61</span>亿SZ300496<span class="token punctuation">,</span>中科创达<span class="token punctuation">,</span><span class="token number">60.79</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">3.49</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.09</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">34.99</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1062.96</span>万<span class="token punctuation">,</span><span class="token number">6.40</span>亿<span class="token punctuation">,</span><span class="token number">3.75</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">96.33</span><span class="token punctuation">,</span><span class="token number">0.22</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">244.69</span>亿SH600818<span class="token punctuation">,</span>中路股份<span class="token punctuation">,</span><span class="token number">12.36</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.71</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.09</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">3.69</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">921.26</span>万<span class="token punctuation">,</span><span class="token number">1.15</span>亿<span class="token punctuation">,</span><span class="token number">3.87</span><span class="token operator">%</span><span class="token punctuation">,</span>亏损<span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">39.73</span>亿SZ300644<span class="token punctuation">,</span>南京聚隆<span class="token punctuation">,</span><span class="token number">35.19</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">2.01</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.06</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">18.64</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">872.06</span>万<span class="token punctuation">,</span><span class="token number">3.12</span>亿<span class="token punctuation">,</span><span class="token number">21.10</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">79.62</span><span class="token punctuation">,</span><span class="token number">0.55</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">22.53</span>亿SZ300729<span class="token punctuation">,</span>乐歌股份<span class="token punctuation">,</span><span class="token number">24.18</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.38</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.05</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">3.50</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">204.82</span>万<span class="token punctuation">,</span><span class="token number">4889.15</span>万<span class="token punctuation">,</span><span class="token number">8.14</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">31.62</span><span class="token punctuation">,</span><span class="token number">1.31</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">21.09</span>亿SZ300767<span class="token punctuation">,</span>震安科技<span class="token punctuation">,</span><span class="token number">108.58</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.16</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">6.01</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">79.44</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">146.41</span>万<span class="token punctuation">,</span><span class="token number">1.57</span>亿<span class="token punctuation">,</span><span class="token number">3.19</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">92.38</span><span class="token punctuation">,</span><span class="token number">0.21</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">86.86</span>亿SH603179<span class="token punctuation">,</span>DR新泉股<span class="token punctuation">,</span><span class="token number">19.30</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.08</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">5.93</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">35.50</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">147.38</span>万<span class="token punctuation">,</span><span class="token number">2833.24</span>万<span class="token punctuation">,</span><span class="token number">0.65</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">35.11</span><span class="token punctuation">,</span><span class="token number">2.25</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">56.76</span>亿SH603626<span class="token punctuation">,</span>科森科技<span class="token punctuation">,</span><span class="token number">11.27</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.63</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">5.92</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">8.47</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">466.11</span>万<span class="token punctuation">,</span><span class="token number">5187.87</span>万<span class="token punctuation">,</span><span class="token number">1.01</span><span class="token operator">%</span><span class="token punctuation">,</span>亏损<span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">53.30</span>亿SZ300019<span class="token punctuation">,</span>硅宝科技<span class="token punctuation">,</span><span class="token number">9.50</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.53</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">5.91</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">6.13</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">423.46</span>万<span class="token punctuation">,</span><span class="token number">3943.10</span>万<span class="token punctuation">,</span><span class="token number">1.55</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">24.58</span><span class="token punctuation">,</span><span class="token number">1.65</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">31.40</span>亿SZ002756<span class="token punctuation">,</span>永兴材料<span class="token punctuation">,</span><span class="token number">16.18</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.90</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">5.89</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">7.34</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">247.83</span>万<span class="token punctuation">,</span><span class="token number">3910.01</span>万<span class="token punctuation">,</span><span class="token number">1.34</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">18.38</span><span class="token punctuation">,</span><span class="token number">2.98</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">58.21</span>亿SZ002498<span class="token punctuation">,</span>汉缆股份<span class="token punctuation">,</span><span class="token number">6.11</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.34</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">5.89</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">102.99</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">2.01</span>亿<span class="token punctuation">,</span><span class="token number">12.04</span>亿<span class="token punctuation">,</span><span class="token number">6.05</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">43.98</span><span class="token punctuation">,</span><span class="token number">0.62</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">202.93</span>亿SZ002980<span class="token punctuation">,</span>华盛昌<span class="token punctuation">,</span><span class="token number">62.41</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">3.46</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">5.87</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">319.14</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">969.65</span>万<span class="token punctuation">,</span><span class="token number">5.99</span>亿<span class="token punctuation">,</span><span class="token number">29.09</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">51.97</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token punctuation">,</span><span class="token number">83.21</span>亿SZ002371<span class="token punctuation">,</span>北⽅华创<span class="token punctuation">,</span><span class="token number">176.88</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">9.80</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">5.87</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">101.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1006.35</span>万<span class="token punctuation">,</span><span class="token number">17.45</span>亿<span class="token punctuation">,</span><span class="token number">2.20</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">276.58</span><span class="token punctuation">,</span><span class="token number">0.04</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">875.76</span>亿SZ300139<span class="token punctuation">,</span>晓程科技<span class="token punctuation">,</span><span class="token number">8.71</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.48</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">5.83</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.23</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">4423.87</span>万<span class="token punctuation">,</span><span class="token number">3.82</span>亿<span class="token punctuation">,</span><span class="token number">20.11</span><span class="token operator">%</span><span class="token punctuation">,</span>亏损<span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">23.84</span>亿SZ000636<span class="token punctuation">,</span>⻛华⾼科<span class="token punctuation">,</span><span class="token number">24.51</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.33</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">5.74</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">64.61</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">5605.61</span>万<span class="token punctuation">,</span><span class="token number">13.61</span>亿<span class="token punctuation">,</span><span class="token number">6.26</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">71.71</span><span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">219.42</span>亿SZ000564<span class="token punctuation">,</span>供销⼤集<span class="token punctuation">,</span><span class="token number">4.06</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.22</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">5.73</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">69.87</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">2.98</span>亿<span class="token punctuation">,</span><span class="token number">11.89</span>亿<span class="token punctuation">,</span><span class="token number">14.86</span><span class="token operator">%</span><span class="token punctuation">,</span>亏损<span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">244.52</span>亿SZ002612<span class="token punctuation">,</span>朗姿股份<span class="token punctuation">,</span><span class="token number">7.84</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.42</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">5.66</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">19.34</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">540.71</span>万<span class="token punctuation">,</span><span class="token number">4191.22</span>万<span class="token punctuation">,</span><span class="token number">2.31</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">1224.17</span><span class="token punctuation">,</span><span class="token number">4.23</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">34.69</span>亿SH600176<span class="token punctuation">,</span>中国巨⽯<span class="token punctuation">,</span><span class="token number">9.39</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.50</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">5.62</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">13.85</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">3256.19</span>万<span class="token punctuation">,</span><span class="token number">3.02</span>亿<span class="token punctuation">,</span><span class="token number">0.93</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">16.97</span><span class="token punctuation">,</span><span class="token number">2.14</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">328.87</span>亿SH603313<span class="token punctuation">,</span>梦百合<span class="token punctuation">,</span><span class="token number">24.10</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">1.28</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">5.61</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">14.16</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">356.10</span>万<span class="token punctuation">,</span><span class="token number">8446.14</span>万<span class="token punctuation">,</span><span class="token number">1.05</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">21.72</span><span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">82.23</span>亿SZ300279<span class="token punctuation">,</span>和晶科技<span class="token punctuation">,</span><span class="token number">5.49</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">0.29</span><span class="token punctuation">,</span><span class="token operator">+</span><span class="token number">5.58</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">8.50</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">2328.20</span>万<span class="token punctuation">,</span><span class="token number">1.31</span>亿<span class="token punctuation">,</span><span class="token number">5.33</span><span class="token operator">%</span><span class="token punctuation">,</span>亏损<span class="token punctuation">,</span><span class="token number">0.00</span><span class="token operator">%</span><span class="token punctuation">,</span><span class="token number">24.65</span>亿</code></pre><h2 id="（二）需求"><a href="#（二）需求" class="headerlink" title="（二）需求"></a>（二）需求</h2><p>1、程序启动后，给⽤户提供查询接⼝，允许⽤户᯿复查股票⾏情信息(⽤到循环)<br>2、允许⽤户通过模糊查询股票名，⽐如输⼊“啤酒”, 就把所有股票名称中包含“啤酒”的信息打印出来<br>3、允许按股票价格、涨跌幅、换⼿率这⼏列来筛选信息，⽐如输⼊“价格&gt;50”则把价格⼤于50的股票都打印，输⼊“市盈率&lt;50“，则把市盈率⼩于50的股票都打印，不⽤判断等于<br>&amp;emsp;&amp;emsp;<strong>思路提示：加载⽂件内容到内存，转成dict or list结构，然后对dict or list 进⾏查询等操作。 这样以后就不⽤每查⼀次就要打开⼀次⽂件了，效率会⾼。</strong></p><h4 id="程序启动后执⾏效果参考："><a href="#程序启动后执⾏效果参考：" class="headerlink" title="程序启动后执⾏效果参考："></a>程序启动后执⾏效果参考：</h4><pre class="language-python" data-language="python"><code class="language-python">股票查询接⼝<span class="token operator">>></span><span class="token punctuation">:</span>换⼿率<span class="token operator">></span><span class="token number">25</span><span class="token punctuation">[</span><span class="token string">'序号'</span><span class="token punctuation">,</span> <span class="token string">'代码'</span><span class="token punctuation">,</span> <span class="token string">'名称'</span><span class="token punctuation">,</span> <span class="token string">'最新价'</span><span class="token punctuation">,</span> <span class="token string">'涨跌幅'</span><span class="token punctuation">,</span> <span class="token string">'涨跌额'</span><span class="token punctuation">,</span> <span class="token string">'成交量(⼿)'</span><span class="token punctuation">,</span> <span class="token string">'成交额'</span><span class="token punctuation">,</span> <span class="token string">'振幅'</span><span class="token punctuation">,</span><span class="token string">'最⾼'</span><span class="token punctuation">,</span> <span class="token string">'最低'</span><span class="token punctuation">,</span> <span class="token string">'今开'</span><span class="token punctuation">,</span> <span class="token string">'昨收'</span><span class="token punctuation">,</span> <span class="token string">'量⽐'</span><span class="token punctuation">,</span> <span class="token string">'换⼿率'</span><span class="token punctuation">,</span> <span class="token string">'市盈率'</span><span class="token punctuation">,</span> <span class="token string">'市净率'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'18'</span><span class="token punctuation">,</span> <span class="token string">'603697'</span><span class="token punctuation">,</span> <span class="token string">'有友⻝品'</span><span class="token punctuation">,</span> <span class="token string">'22.73'</span><span class="token punctuation">,</span> <span class="token string">'10.02%'</span><span class="token punctuation">,</span> <span class="token string">'2.07'</span><span class="token punctuation">,</span> <span class="token string">'34.93万'</span><span class="token punctuation">,</span> <span class="token string">'7.68亿'</span><span class="token punctuation">,</span><span class="token string">'8.23%'</span><span class="token punctuation">,</span> <span class="token string">'22.73'</span><span class="token punctuation">,</span> <span class="token string">'21.03'</span><span class="token punctuation">,</span> <span class="token string">'21.17'</span><span class="token punctuation">,</span> <span class="token string">'20.66'</span><span class="token punctuation">,</span> <span class="token string">'1.4'</span><span class="token punctuation">,</span> <span class="token string">'43.94%'</span><span class="token punctuation">,</span> <span class="token string">'38.1'</span><span class="token punctuation">,</span> <span class="token string">'4.66'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'23'</span><span class="token punctuation">,</span> <span class="token string">'603956'</span><span class="token punctuation">,</span> <span class="token string">'威派格'</span><span class="token punctuation">,</span> <span class="token string">'22.52'</span><span class="token punctuation">,</span> <span class="token string">'10.01%'</span><span class="token punctuation">,</span> <span class="token string">'2.05'</span><span class="token punctuation">,</span> <span class="token string">'18.33万'</span><span class="token punctuation">,</span> <span class="token string">'4.01亿'</span><span class="token punctuation">,</span><span class="token string">'10.60%'</span><span class="token punctuation">,</span> <span class="token string">'22.52'</span><span class="token punctuation">,</span> <span class="token string">'20.35'</span><span class="token punctuation">,</span> <span class="token string">'20.35'</span><span class="token punctuation">,</span> <span class="token string">'20.47'</span><span class="token punctuation">,</span> <span class="token string">'2.16'</span><span class="token punctuation">,</span> <span class="token string">'43.02%'</span><span class="token punctuation">,</span> <span class="token string">'-'</span><span class="token punctuation">,</span> <span class="token string">'9.82'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'36'</span><span class="token punctuation">,</span> <span class="token string">'300748'</span><span class="token punctuation">,</span> <span class="token string">'⾦⼒永磁'</span><span class="token punctuation">,</span> <span class="token string">'59.7'</span><span class="token punctuation">,</span> <span class="token string">'10.01%'</span><span class="token punctuation">,</span> <span class="token string">'5.43'</span><span class="token punctuation">,</span> <span class="token string">'11.02万'</span><span class="token punctuation">,</span> <span class="token string">'6.38亿'</span><span class="token punctuation">,</span><span class="token string">'6.98%'</span><span class="token punctuation">,</span> <span class="token string">'59.7'</span><span class="token punctuation">,</span> <span class="token string">'55.91'</span><span class="token punctuation">,</span> <span class="token string">'56.88'</span><span class="token punctuation">,</span> <span class="token string">'54.27'</span><span class="token punctuation">,</span> <span class="token string">'0.9'</span><span class="token punctuation">,</span> <span class="token string">'26.49%'</span><span class="token punctuation">,</span> <span class="token string">'234.09'</span><span class="token punctuation">,</span><span class="token string">'23.54'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'37'</span><span class="token punctuation">,</span> <span class="token string">'300767'</span><span class="token punctuation">,</span> <span class="token string">'震安科技'</span><span class="token punctuation">,</span> <span class="token string">'41.13'</span><span class="token punctuation">,</span> <span class="token string">'10.00%'</span><span class="token punctuation">,</span> <span class="token string">'3.74'</span><span class="token punctuation">,</span> <span class="token string">'6.22万'</span><span class="token punctuation">,</span> <span class="token string">'2.49亿'</span><span class="token punctuation">,</span><span class="token string">'10.32%'</span><span class="token punctuation">,</span> <span class="token string">'41.13'</span><span class="token punctuation">,</span> <span class="token string">'37.27'</span><span class="token punctuation">,</span> <span class="token string">'37.48'</span><span class="token punctuation">,</span> <span class="token string">'37.39'</span><span class="token punctuation">,</span> <span class="token string">'3.86'</span><span class="token punctuation">,</span> <span class="token string">'31.11%'</span><span class="token punctuation">,</span> <span class="token string">'43.32'</span><span class="token punctuation">,</span><span class="token string">'3.68'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'38'</span><span class="token punctuation">,</span> <span class="token string">'603045'</span><span class="token punctuation">,</span> <span class="token string">'福达合⾦'</span><span class="token punctuation">,</span> <span class="token string">'32'</span><span class="token punctuation">,</span> <span class="token string">'10.00%'</span><span class="token punctuation">,</span> <span class="token string">'2.91'</span><span class="token punctuation">,</span> <span class="token string">'17.06万'</span><span class="token punctuation">,</span> <span class="token string">'5.31亿'</span><span class="token punctuation">,</span><span class="token string">'9.87%'</span><span class="token punctuation">,</span> <span class="token string">'32'</span><span class="token punctuation">,</span> <span class="token string">'29.13'</span><span class="token punctuation">,</span> <span class="token string">'29.13'</span><span class="token punctuation">,</span> <span class="token string">'29.09'</span><span class="token punctuation">,</span> <span class="token string">'1.39'</span><span class="token punctuation">,</span> <span class="token string">'25.17%'</span><span class="token punctuation">,</span> <span class="token string">'52.74'</span><span class="token punctuation">,</span> <span class="token string">'4.02'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'39'</span><span class="token punctuation">,</span> <span class="token string">'2952'</span><span class="token punctuation">,</span> <span class="token string">'亚世光电'</span><span class="token punctuation">,</span> <span class="token string">'58.98'</span><span class="token punctuation">,</span> <span class="token string">'10.00%'</span><span class="token punctuation">,</span> <span class="token string">'5.36'</span><span class="token punctuation">,</span> <span class="token string">'4.18万'</span><span class="token punctuation">,</span> <span class="token string">'2.41亿'</span><span class="token punctuation">,</span><span class="token string">'7.42%'</span><span class="token punctuation">,</span> <span class="token string">'58.98'</span><span class="token punctuation">,</span> <span class="token string">'55'</span><span class="token punctuation">,</span> <span class="token string">'55.91'</span><span class="token punctuation">,</span> <span class="token string">'53.62'</span><span class="token punctuation">,</span> <span class="token string">'3.04'</span><span class="token punctuation">,</span> <span class="token string">'27.44%'</span><span class="token punctuation">,</span> <span class="token string">'53.09'</span><span class="token punctuation">,</span> <span class="token string">'5.51'</span><span class="token punctuation">]</span>找到<span class="token number">6</span>条股票查询接⼝<span class="token operator">>></span><span class="token punctuation">:</span>最新价<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">[</span><span class="token string">'序号'</span><span class="token punctuation">,</span> <span class="token string">'代码'</span><span class="token punctuation">,</span> <span class="token string">'名称'</span><span class="token punctuation">,</span> <span class="token string">'最新价'</span><span class="token punctuation">,</span> <span class="token string">'涨跌幅'</span><span class="token punctuation">,</span> <span class="token string">'涨跌额'</span><span class="token punctuation">,</span> <span class="token string">'成交量(⼿)'</span><span class="token punctuation">,</span> <span class="token string">'成交额'</span><span class="token punctuation">,</span> <span class="token string">'振幅'</span><span class="token punctuation">,</span><span class="token string">'最⾼'</span><span class="token punctuation">,</span> <span class="token string">'最低'</span><span class="token punctuation">,</span> <span class="token string">'今开'</span><span class="token punctuation">,</span> <span class="token string">'昨收'</span><span class="token punctuation">,</span> <span class="token string">'量⽐'</span><span class="token punctuation">,</span> <span class="token string">'换⼿率'</span><span class="token punctuation">,</span> <span class="token string">'市盈率'</span><span class="token punctuation">,</span> <span class="token string">'市净率'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'2'</span><span class="token punctuation">,</span> <span class="token string">'2676'</span><span class="token punctuation">,</span> <span class="token string">'顺威股份'</span><span class="token punctuation">,</span> <span class="token string">'3.69'</span><span class="token punctuation">,</span> <span class="token string">'10.15%'</span><span class="token punctuation">,</span> <span class="token string">'0.34'</span><span class="token punctuation">,</span> <span class="token string">'15.23万'</span><span class="token punctuation">,</span> <span class="token string">'5516万'</span><span class="token punctuation">,</span><span class="token string">'9.55%'</span><span class="token punctuation">,</span> <span class="token string">'3.69'</span><span class="token punctuation">,</span> <span class="token string">'3.37'</span><span class="token punctuation">,</span> <span class="token string">'3.37'</span><span class="token punctuation">,</span> <span class="token string">'3.35'</span><span class="token punctuation">,</span> <span class="token string">'1.16'</span><span class="token punctuation">,</span> <span class="token string">'2.11%'</span><span class="token punctuation">,</span> <span class="token string">'-'</span><span class="token punctuation">,</span> <span class="token string">'2.58'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'3'</span><span class="token punctuation">,</span> <span class="token string">'601619'</span><span class="token punctuation">,</span> <span class="token string">'嘉泽新能'</span><span class="token punctuation">,</span> <span class="token string">'4.91'</span><span class="token punctuation">,</span> <span class="token string">'10.09%'</span><span class="token punctuation">,</span> <span class="token string">'0.45'</span><span class="token punctuation">,</span> <span class="token string">'16.55万'</span><span class="token punctuation">,</span> <span class="token string">'8006万'</span><span class="token punctuation">,</span><span class="token string">'8.52%'</span><span class="token punctuation">,</span> <span class="token string">'4.91'</span><span class="token punctuation">,</span> <span class="token string">'4.53'</span><span class="token punctuation">,</span> <span class="token string">'4.54'</span><span class="token punctuation">,</span> <span class="token string">'4.46'</span><span class="token punctuation">,</span> <span class="token string">'1.82'</span><span class="token punctuation">,</span> <span class="token string">'3.28%'</span><span class="token punctuation">,</span> <span class="token string">'52.26'</span><span class="token punctuation">,</span> <span class="token string">'3.64'</span><span class="token punctuation">]</span>找到<span class="token number">2</span>条股票查询接⼝<span class="token operator">>></span><span class="token punctuation">:</span>⻝品<span class="token punctuation">[</span><span class="token string">'18'</span><span class="token punctuation">,</span> <span class="token string">'603697'</span><span class="token punctuation">,</span> <span class="token string">'有友⻝品'</span><span class="token punctuation">,</span> <span class="token string">'22.73'</span><span class="token punctuation">,</span> <span class="token string">'10.02%'</span><span class="token punctuation">,</span> <span class="token string">'2.07'</span><span class="token punctuation">,</span> <span class="token string">'34.93万'</span><span class="token punctuation">,</span> <span class="token string">'7.68亿'</span><span class="token punctuation">,</span><span class="token string">'8.23%'</span><span class="token punctuation">,</span> <span class="token string">'22.73'</span><span class="token punctuation">,</span> <span class="token string">'21.03'</span><span class="token punctuation">,</span> <span class="token string">'21.17'</span><span class="token punctuation">,</span> <span class="token string">'20.66'</span><span class="token punctuation">,</span> <span class="token string">'1.4'</span><span class="token punctuation">,</span> <span class="token string">'43.94%'</span><span class="token punctuation">,</span> <span class="token string">'38.1'</span><span class="token punctuation">,</span> <span class="token string">'4.66'</span><span class="token punctuation">]</span>找到<span class="token number">1</span>条股票查询接⼝<span class="token operator">>></span><span class="token punctuation">:</span>能源<span class="token punctuation">[</span><span class="token string">'9'</span><span class="token punctuation">,</span> <span class="token string">'2828'</span><span class="token punctuation">,</span> <span class="token string">'⻉肯能源'</span><span class="token punctuation">,</span> <span class="token string">'14.25'</span><span class="token punctuation">,</span> <span class="token string">'10.04%'</span><span class="token punctuation">,</span> <span class="token string">'1.3'</span><span class="token punctuation">,</span> <span class="token string">'17.83万'</span><span class="token punctuation">,</span> <span class="token string">'2.52亿'</span><span class="token punctuation">,</span><span class="token string">'4.71%'</span><span class="token punctuation">,</span> <span class="token string">'14.25'</span><span class="token punctuation">,</span> <span class="token string">'13.64'</span><span class="token punctuation">,</span> <span class="token string">'13.8'</span><span class="token punctuation">,</span> <span class="token string">'12.95'</span><span class="token punctuation">,</span> <span class="token string">'3.45'</span><span class="token punctuation">,</span> <span class="token string">'18.03%'</span><span class="token punctuation">,</span> <span class="token string">'-'</span><span class="token punctuation">,</span> <span class="token string">'3.08'</span><span class="token punctuation">]</span>找到<span class="token number">1</span>条股票查询接⼝<span class="token operator">>></span><span class="token punctuation">:</span>科技<span class="token punctuation">[</span><span class="token string">'12'</span><span class="token punctuation">,</span> <span class="token string">'2866'</span><span class="token punctuation">,</span> <span class="token string">'传艺科技'</span><span class="token punctuation">,</span> <span class="token string">'13.81'</span><span class="token punctuation">,</span> <span class="token string">'10.04%'</span><span class="token punctuation">,</span> <span class="token string">'1.26'</span><span class="token punctuation">,</span> <span class="token string">'13.59万'</span><span class="token punctuation">,</span> <span class="token string">'1.83亿'</span><span class="token punctuation">,</span><span class="token string">'9.72%'</span><span class="token punctuation">,</span> <span class="token string">'13.81'</span><span class="token punctuation">,</span> <span class="token string">'12.59'</span><span class="token punctuation">,</span> <span class="token string">'12.61'</span><span class="token punctuation">,</span> <span class="token string">'12.55'</span><span class="token punctuation">,</span> <span class="token string">'2.63'</span><span class="token punctuation">,</span> <span class="token string">'16.86%'</span><span class="token punctuation">,</span> <span class="token string">'33.37'</span><span class="token punctuation">,</span><span class="token string">'3.43'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'19'</span><span class="token punctuation">,</span> <span class="token string">'300777'</span><span class="token punctuation">,</span> <span class="token string">'中简科技'</span><span class="token punctuation">,</span> <span class="token string">'24.92'</span><span class="token punctuation">,</span> <span class="token string">'10.02%'</span><span class="token punctuation">,</span> <span class="token string">'2.27'</span><span class="token punctuation">,</span> <span class="token string">'5952'</span><span class="token punctuation">,</span> <span class="token string">'1483万'</span><span class="token punctuation">,</span><span class="token string">'0.00%'</span><span class="token punctuation">,</span> <span class="token string">'24.92'</span><span class="token punctuation">,</span> <span class="token string">'24.92'</span><span class="token punctuation">,</span> <span class="token string">'24.92'</span><span class="token punctuation">,</span> <span class="token string">'22.65'</span><span class="token punctuation">,</span> <span class="token string">'3.45'</span><span class="token punctuation">,</span> <span class="token string">'1.49%'</span><span class="token punctuation">,</span> <span class="token string">'102.24'</span><span class="token punctuation">,</span><span class="token string">'11.49'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'21'</span><span class="token punctuation">,</span> <span class="token string">'300245'</span><span class="token punctuation">,</span> <span class="token string">'天玑科技'</span><span class="token punctuation">,</span> <span class="token string">'11.53'</span><span class="token punctuation">,</span> <span class="token string">'10.02%'</span><span class="token punctuation">,</span> <span class="token string">'1.05'</span><span class="token punctuation">,</span> <span class="token string">'26.86万'</span><span class="token punctuation">,</span> <span class="token string">'3.05亿'</span><span class="token punctuation">,</span><span class="token string">'9.64%'</span><span class="token punctuation">,</span> <span class="token string">'11.53'</span><span class="token punctuation">,</span> <span class="token string">'10.52'</span><span class="token punctuation">,</span> <span class="token string">'10.52'</span><span class="token punctuation">,</span> <span class="token string">'10.48'</span><span class="token punctuation">,</span> <span class="token string">'1.06'</span><span class="token punctuation">,</span> <span class="token string">'10.35%'</span><span class="token punctuation">,</span> <span class="token string">'127.47'</span><span class="token punctuation">,</span><span class="token string">'2.57'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'26'</span><span class="token punctuation">,</span> <span class="token string">'300391'</span><span class="token punctuation">,</span> <span class="token string">'康跃科技'</span><span class="token punctuation">,</span> <span class="token string">'7.8'</span><span class="token punctuation">,</span> <span class="token string">'10.01%'</span><span class="token punctuation">,</span> <span class="token string">'0.71'</span><span class="token punctuation">,</span> <span class="token string">'3.9万'</span><span class="token punctuation">,</span> <span class="token string">'3027万'</span><span class="token punctuation">,</span><span class="token string">'10.01%'</span><span class="token punctuation">,</span> <span class="token string">'7.8'</span><span class="token punctuation">,</span> <span class="token string">'7.09'</span><span class="token punctuation">,</span> <span class="token string">'7.09'</span><span class="token punctuation">,</span> <span class="token string">'7.09'</span><span class="token punctuation">,</span> <span class="token string">'0.75'</span><span class="token punctuation">,</span> <span class="token string">'1.94%'</span><span class="token punctuation">,</span> <span class="token string">'27.35'</span><span class="token punctuation">,</span> <span class="token string">'1.89'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'37'</span><span class="token punctuation">,</span> <span class="token string">'300767'</span><span class="token punctuation">,</span> <span class="token string">'震安科技'</span><span class="token punctuation">,</span> <span class="token string">'41.13'</span><span class="token punctuation">,</span> <span class="token string">'10.00%'</span><span class="token punctuation">,</span> <span class="token string">'3.74'</span><span class="token punctuation">,</span> <span class="token string">'6.22万'</span><span class="token punctuation">,</span> <span class="token string">'2.49亿'</span><span class="token punctuation">,</span><span class="token string">'10.32%'</span><span class="token punctuation">,</span> <span class="token string">'41.13'</span><span class="token punctuation">,</span> <span class="token string">'37.27'</span><span class="token punctuation">,</span> <span class="token string">'37.48'</span><span class="token punctuation">,</span> <span class="token string">'37.39'</span><span class="token punctuation">,</span> <span class="token string">'3.86'</span><span class="token punctuation">,</span> <span class="token string">'31.11%'</span><span class="token punctuation">,</span> <span class="token string">'43.32'</span><span class="token punctuation">,</span><span class="token string">'3.68'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'40'</span><span class="token punctuation">,</span> <span class="token string">'603327'</span><span class="token punctuation">,</span> <span class="token string">'福蓉科技'</span><span class="token punctuation">,</span> <span class="token string">'21.56'</span><span class="token punctuation">,</span> <span class="token string">'10.00%'</span><span class="token punctuation">,</span> <span class="token string">'1.96'</span><span class="token punctuation">,</span> <span class="token string">'3586'</span><span class="token punctuation">,</span> <span class="token string">'773.1万'</span><span class="token punctuation">,</span><span class="token string">'0.00%'</span><span class="token punctuation">,</span> <span class="token string">'21.56'</span><span class="token punctuation">,</span> <span class="token string">'21.56'</span><span class="token punctuation">,</span> <span class="token string">'21.56'</span><span class="token punctuation">,</span> <span class="token string">'19.6'</span><span class="token punctuation">,</span> <span class="token string">'2.81'</span><span class="token punctuation">,</span> <span class="token string">'0.70%'</span><span class="token punctuation">,</span> <span class="token string">'31.97'</span><span class="token punctuation">,</span> <span class="token string">'8.05'</span><span class="token punctuation">]</span>找到<span class="token number">6</span>条</code></pre><h2 id="（三）代码"><a href="#（三）代码" class="headerlink" title="（三）代码"></a>（三）代码</h2><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 1、导入用户数据</span>user_info <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'stock_data'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token comment"># 2、将数据转化成字典，key为用户名，value为一个字典，包含&#123;股票代码：，名称：，当前价：...&#125;</span>info_dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment"># 'SH601778'：&#123;'股票名称': 'N晶科', '当前价': '6.29', '涨跌幅': '+1.92'... &#125;,</span>    <span class="token comment"># 'SHxxxxxx':&#123;'股票名称': 'xxx', '当前价': 'x.xx', '涨跌幅': 'xxxxx'... &#125;</span><span class="token punctuation">&#125;</span><span class="token comment"># 遍历每一行</span><span class="token keyword">for</span> line <span class="token keyword">in</span> user_info<span class="token punctuation">:</span>    <span class="token comment"># print(line)</span>    stock <span class="token operator">=</span> line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span>  <span class="token comment"># 先用strip()去掉回车（'\n'），再用split()按逗号进行分割</span>    <span class="token comment"># print(stock)</span>    <span class="token comment"># print(len(stock))</span>    info_dic<span class="token punctuation">[</span>stock<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'股票名称'</span><span class="token punctuation">:</span> stock<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'当前价'</span><span class="token punctuation">:</span> stock<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'涨跌额'</span><span class="token punctuation">:</span> stock<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'涨跌幅'</span><span class="token punctuation">:</span> stock<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'年初⾄今'</span><span class="token punctuation">:</span> stock<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'成交量'</span><span class="token punctuation">:</span> stock<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'成交额'</span><span class="token punctuation">:</span> stock<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'换⼿率'</span><span class="token punctuation">:</span> stock<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'市盈率(TTM)'</span><span class="token punctuation">:</span> stock<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'股息率'</span><span class="token punctuation">:</span> stock<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'市值'</span><span class="token punctuation">:</span> stock<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token comment"># print(info_dic)</span><span class="token comment"># 删除第一行</span><span class="token keyword">del</span> info_dic<span class="token punctuation">[</span><span class="token string">'股票代码'</span><span class="token punctuation">]</span>count <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    user_input <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'股票查询接口>>：'</span><span class="token punctuation">)</span>    <span class="token comment"># 输入e以退出程序</span>    <span class="token keyword">if</span> user_input <span class="token operator">==</span> <span class="token string">'e'</span><span class="token punctuation">:</span>        exit<span class="token punctuation">(</span><span class="token string">'bye!'</span><span class="token punctuation">)</span>    <span class="token comment"># 解决查询问题</span>    <span class="token keyword">for</span> stock <span class="token keyword">in</span> info_dic<span class="token punctuation">:</span>        <span class="token comment"># 如果查询股票信息则直接打印，支持模糊查询</span>        <span class="token comment"># print(info_dic[stock]['股票名称'])</span>        <span class="token keyword">if</span> user_input <span class="token keyword">in</span> info_dic<span class="token punctuation">[</span>stock<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'股票名称'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>info_dic<span class="token punctuation">[</span>stock<span class="token punctuation">]</span><span class="token punctuation">)</span>            count <span class="token operator">+=</span> <span class="token number">1</span>           <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'共找到</span><span class="token interpolation"><span class="token punctuation">&#123;</span>count<span class="token punctuation">&#125;</span></span><span class="token string">条记录'</span></span><span class="token punctuation">)</span></code></pre><p>※ 目前只完成字符串查询问题，未完成含有表达式的查询</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>day3-顺丰快递分拣小程序</title>
      <link href="/2022/05/05/Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A3/"/>
      <url>/2022/05/05/Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A3/</url>
      
        <content type="html"><![CDATA[<h3 id="本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记"><a href="#本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记" class="headerlink" title="本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记"></a>本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记</h3><h3 id="视频链接-Python零基础到精通7天速成"><a href="#视频链接-Python零基础到精通7天速成" class="headerlink" title="视频链接:Python零基础到精通7天速成"></a>视频链接:<a href="https://www.bilibili.com/video/BV1Gf4y1q7SG?share_source=copy_web">Python零基础到精通7天速成</a></h3><span id="more"></span><h1 id="一、数据类型–又见字符串"><a href="#一、数据类型–又见字符串" class="headerlink" title="一、数据类型–又见字符串"></a>一、数据类型–又见字符串</h1><p>&amp;emsp;&amp;emsp;是一个<font color="#dd0000">有序</font>的字符集合，用于在计算机里存储和表示文本信息</p><h2 id="（一）字符串的特性"><a href="#（一）字符串的特性" class="headerlink" title="（一）字符串的特性"></a>（一）字符串的特性</h2><p>1、<font color="#dd0000">有序</font><br>&amp;emsp;&amp;emsp;按照从左到右的顺序定义字符集合，下标从0开始顺序访问</p><div align=center><img src="https://img-blog.csdnimg.cn/38d03244ba3d4ca5a83c81c878ff3e70.png" width = 50%></div><p>2、可以进行切片操作</p><pre class="language-python" data-language="python"><code class="language-python">s <span class="token operator">=</span> <span class="token string">'hello world'</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><p>3、<font color="#dd0000">不可变</font><br>&amp;emsp;&amp;emsp;不能像列表一样修改其中某个元素，所有对字符串的修改操作，相当于生成了一份新的数据。</p><h2 id="（二）字符串的常用操作"><a href="#（二）字符串的常用操作" class="headerlink" title="（二）字符串的常用操作"></a>（二）字符串的常用操作</h2><div align=center><img src="https://img-blog.csdnimg.cn/f652a42d71324ac7a7e9c3a0ef068b85.png" width = 60%></div>※ <font color="#dd0000">以上所有方法均可通过heip()方法进行查看。</font><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">'Geng tian ba'</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>center<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># output:-----------------------Gengtianba------------------------</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># output:1  从G开始统计到n有多少各a</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">'ba'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># output:True</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">'geng'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># output:False</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'tian'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># output:5  没有就返回-1</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># output:False  判断字符串是否是数字类型的如‘34’</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">.</span>j oin<span class="token punctuation">(</span><span class="token string">'ashahs'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># output:a-s-h-a-h-s .前面为连接符</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'n'</span><span class="token punctuation">,</span> <span class="token string">'N'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># output:GeNg tian ba 将n还成N，后面的1表示只换一个</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'n'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># output:['Ge', 'g tia', ' ba'] 传入参数表示用什么对字符串进行分割，默认值为空格</span></code></pre><h1 id="二、数据类型–又见列表"><a href="#二、数据类型–又见列表" class="headerlink" title="二、数据类型–又见列表"></a>二、数据类型–又见列表</h1><p>&amp;emsp;&amp;emsp;[]内以逗号分隔，按照索引，存放各种数据类型，每个位置代表一个元素。</p><h2 id="（一）列表的特点"><a href="#（一）列表的特点" class="headerlink" title="（一）列表的特点"></a>（一）列表的特点</h2><p>1、可存放多个值<br>2、<font color="#dd0000">有序</font></p><div align=center><img src="https://img-blog.csdnimg.cn/011093bebe594b8d8ff5c9ab8e4c2d7c.png" width = 50%></div>3、<font color="#dd0000">可变</font>&emsp;&emsp;可修改指定索引的对应值<h2 id="（二）列表的常用操作"><a href="#（二）列表的常用操作" class="headerlink" title="（二）列表的常用操作"></a>（二）列表的常用操作</h2><h3 id="1、列表的增加操作"><a href="#1、列表的增加操作" class="headerlink" title="1、列表的增加操作"></a>1、列表的增加操作</h3><p>（1）追加</p><pre class="language-python" data-language="python"><code class="language-python">names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'耿天霸'</span><span class="token punctuation">,</span> <span class="token string">'童天霸'</span><span class="token punctuation">,</span> <span class="token string">'武天霸'</span><span class="token punctuation">]</span>                      names<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'霸天霸'</span><span class="token punctuation">)</span>                                <span class="token keyword">print</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span>  <span class="token comment"># output:['耿天霸', '童天霸', '武天霸', '霸天霸']                            </span></code></pre><p>（2）插入</p><pre class="language-python" data-language="python"><code class="language-python">names<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'张天霸'</span><span class="token punctuation">)</span>  <span class="token comment"># insert()方法可以直接插入列表                                         </span><span class="token keyword">print</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span>  <span class="token comment"># output['耿天霸', '童天霸', '武天霸', '霸天霸', '张天霸']                           </span></code></pre><p>（3）合并</p><pre class="language-python" data-language="python"><code class="language-python">new_names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'皮天霸'</span><span class="token punctuation">,</span> <span class="token string">'陈天霸'</span><span class="token punctuation">]</span>                                              names<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>new_names<span class="token punctuation">)</span>                                                 <span class="token keyword">print</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span>  <span class="token comment">#output:['耿天霸', '童天霸', '张天霸', '武天霸', '霸天霸', '皮天霸', '陈天霸']                            </span></code></pre><h3 id="2、列表的删除"><a href="#2、列表的删除" class="headerlink" title="2、列表的删除"></a>2、列表的删除</h3><p>（1）直接删</p><pre class="language-python" data-language="python"><code class="language-python">names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'耿天霸'</span><span class="token punctuation">,</span> <span class="token string">'童天霸'</span><span class="token punctuation">]</span><span class="token keyword">del</span><span class="token punctuation">(</span>names<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span>  <span class="token comment"># output: ['耿天霸']                       </span></code></pre><p>（2）根据位置删，默认删除最后一个元素，并返回被删除的值</p><pre class="language-python" data-language="python"><code class="language-python">names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'耿天霸'</span><span class="token punctuation">,</span> <span class="token string">'童天霸'</span><span class="token punctuation">,</span> <span class="token string">'张天霸'</span><span class="token punctuation">,</span> <span class="token string">'武天霸'</span><span class="token punctuation">]</span>         names<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>                                <span class="token keyword">print</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span>  <span class="token comment"># output: ['耿天霸', '童天霸', '武天霸']</span>names<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>                                  <span class="token keyword">print</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span>  <span class="token comment"># output: ['耿天霸', '童天霸']                                    </span></code></pre><p>（3）根据值删除</p><pre class="language-python" data-language="python"><code class="language-python">names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'耿天霸'</span><span class="token punctuation">,</span> <span class="token string">'童天霸'</span><span class="token punctuation">,</span> <span class="token string">'张天霸'</span><span class="token punctuation">,</span> <span class="token string">'武天霸'</span><span class="token punctuation">]</span>           names<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">'耿天霸'</span><span class="token punctuation">)</span>  <span class="token comment"># 删除遇到的第一个值                            </span><span class="token keyword">print</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span>  <span class="token comment"># output: ['童天霸', '张天霸', '武天霸']                                  </span></code></pre><p>（4）清空</p><pre class="language-python" data-language="python"><code class="language-python">names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'耿天霸'</span><span class="token punctuation">,</span> <span class="token string">'童天霸'</span><span class="token punctuation">,</span> <span class="token string">'张天霸'</span><span class="token punctuation">,</span> <span class="token string">'武天霸'</span><span class="token punctuation">]</span>names<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>                       <span class="token keyword">print</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span>  <span class="token comment"># output: []                                </span></code></pre><h3 id="3、列表的修改操作"><a href="#3、列表的修改操作" class="headerlink" title="3、列表的修改操作"></a>3、列表的修改操作</h3><pre class="language-python" data-language="python"><code class="language-python">names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'耿天霸'</span><span class="token punctuation">,</span> <span class="token string">'童天霸'</span><span class="token punctuation">,</span> <span class="token string">'张天霸'</span><span class="token punctuation">,</span> <span class="token string">'武天霸'</span><span class="token punctuation">,</span> <span class="token string">'皮天霸'</span><span class="token punctuation">]</span>         names<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'陈天霸'</span>                                    names<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'皮天霸'</span>                                   <span class="token keyword">print</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span>  <span class="token comment"># output: ['耿天霸', '陈天霸', '张天霸', '皮天霸']                            </span></code></pre><h3 id="4、列表的查操作"><a href="#4、列表的查操作" class="headerlink" title="4、列表的查操作"></a>4、列表的查操作</h3><p>&amp;emsp;&amp;emsp;在不知道元素在列表哪个位置的情况下，如何修改     </p><pre class="language-python" data-language="python"><code class="language-python">names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'耿天霸'</span><span class="token punctuation">,</span> <span class="token string">'陈天霸'</span><span class="token punctuation">,</span> <span class="token string">'张天霸'</span><span class="token punctuation">,</span> <span class="token string">'皮天霸'</span><span class="token punctuation">,</span> <span class="token string">'皮天霸'</span><span class="token punctuation">]</span>               <span class="token comment"># 1、判断元素是否在列表                                             </span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'陈天霸'</span> <span class="token keyword">in</span> names<span class="token punctuation">)</span>   <span class="token comment"># output:TURE                     </span><span class="token comment"># 2、获取元素位置                                                </span><span class="token keyword">print</span><span class="token punctuation">(</span>names<span class="token punctuation">.</span>index<span class="token punctuation">(</span><span class="token string">'陈天霸'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment"># output:1                    </span><span class="token comment"># 3、对元素进行修改                                               </span>names<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'天霸'</span>                                           <span class="token keyword">print</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span>  <span class="token comment"># output:['耿天霸', '天霸', '张天霸', '皮天霸', '皮天霸']    </span></code></pre><h3 id="5、列表的切片"><a href="#5、列表的切片" class="headerlink" title="5、列表的切片"></a>5、列表的切片</h3><pre class="language-python" data-language="python"><code class="language-python">names<span class="token punctuation">[</span>start<span class="token punctuation">:</span> end<span class="token punctuation">:</span> step<span class="token punctuation">]</span>  <span class="token comment"># 注意是左闭右开中间用冒号隔开不是逗号</span><span class="token operator">>></span><span class="token operator">></span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'耿天霸'</span><span class="token punctuation">,</span> <span class="token string">'天霸'</span><span class="token punctuation">,</span> <span class="token string">'张天霸'</span><span class="token punctuation">,</span> <span class="token string">'皮天霸'</span><span class="token punctuation">,</span> <span class="token string">'皮天霸'</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> names<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'耿天霸'</span><span class="token punctuation">,</span> <span class="token string">'张天霸'</span><span class="token punctuation">,</span> <span class="token string">'皮天霸'</span><span class="token punctuation">]</span></code></pre><h3 id="6、排序和反转"><a href="#6、排序和反转" class="headerlink" title="6、排序和反转"></a>6、排序和反转</h3><pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> numbers<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> numbers<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> numbers<span class="token punctuation">.</span>reverse<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> numbers<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span></code></pre><h3 id="7、列表的遍历"><a href="#7、列表的遍历" class="headerlink" title="7、列表的遍历"></a>7、列表的遍历</h3><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'耿天霸'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'天霸'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'张天霸'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'皮天霸'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">'皮天霸'</span><span class="token punctuation">)</span></code></pre><h2 id="（三）列表练习题–班级分组小程序"><a href="#（三）列表练习题–班级分组小程序" class="headerlink" title="（三）列表练习题–班级分组小程序"></a>（三）列表练习题–班级分组小程序</h2><p>1、需求<br>&amp;emsp;&amp;emsp;假设班上有55名同学，每个人的姓名和考试成绩存在大列表里，格式如下：</p><div align=center><img src="https://img-blog.csdnimg.cn/31d3b608291f4812864288be31b36cb6.png" width = 50%></div>&emsp;&emsp;要求按考试成绩高低，将学院分成5组，全存在一个新的大列表里，5组分别是90-100, 80-89, 70-79, 60-69, 0-59最终的数据格式如下：<div align=center><img src="https://img-blog.csdnimg.cn/173dc2869edc4f079b8179b1654897e9.png" width = 50%></div>2、代码<pre class="language-python" data-language="python"><code class="language-python">stu_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"梦琪"</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"忆柳"</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"之桃"</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"慕青"</span><span class="token punctuation">,</span><span class="token number">59</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"问兰"</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"尔岚"</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"元香"</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"初夏"</span><span class="token punctuation">,</span><span class="token number">75</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"沛菡"</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\                         <span class="token punctuation">[</span><span class="token string">"傲珊"</span><span class="token punctuation">,</span><span class="token number">49</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"曼文"</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"乐菱"</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"痴珊"</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"恨玉"</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"惜文"</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"香寒"</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"新柔"</span><span class="token punctuation">,</span><span class="token number">71</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"语蓉"</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\                          <span class="token punctuation">[</span><span class="token string">"海安"</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"夜蓉"</span><span class="token punctuation">,</span><span class="token number">52</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"涵柏"</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"水桃"</span><span class="token punctuation">,</span><span class="token number">42</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"醉蓝"</span><span class="token punctuation">,</span><span class="token number">58</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"春儿"</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"语琴"</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"从彤"</span><span class="token punctuation">,</span><span class="token number">74</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"傲晴"</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\                          <span class="token punctuation">[</span><span class="token string">"语兰"</span><span class="token punctuation">,</span><span class="token number">71</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"又菱"</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"碧彤"</span><span class="token punctuation">,</span><span class="token number">75</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"元霜"</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"怜梦"</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"紫寒"</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"妙彤"</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"曼易"</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"南莲"</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\                          <span class="token punctuation">[</span><span class="token string">"紫翠"</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"雨寒"</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"易烟"</span><span class="token punctuation">,</span><span class="token number">94</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"如萱"</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"若南"</span><span class="token punctuation">,</span><span class="token number">41</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"寻真"</span><span class="token punctuation">,</span><span class="token number">47</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"晓亦"</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"向珊"</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"慕灵"</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\                          <span class="token punctuation">[</span><span class="token string">"以蕊"</span><span class="token punctuation">,</span><span class="token number">74</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"寻雁"</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"映易"</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"雪柳"</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"孤岚"</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"笑霜"</span><span class="token punctuation">,</span><span class="token number">97</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"海云"</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"凝天"</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"沛珊"</span><span class="token punctuation">,</span><span class="token number">98</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\                          <span class="token punctuation">[</span><span class="token string">"寒云"</span><span class="token punctuation">,</span><span class="token number">52</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"冰旋"</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"宛儿"</span><span class="token punctuation">,</span><span class="token number">71</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"绿真"</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"盼儿"</span><span class="token punctuation">,</span><span class="token number">53</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"晓霜"</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"碧凡"</span><span class="token punctuation">,</span><span class="token number">72</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"夏菡"</span><span class="token punctuation">,</span><span class="token number">89</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"曼香"</span><span class="token punctuation">,</span><span class="token number">42</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\                          <span class="token punctuation">[</span><span class="token string">"若烟"</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"半梦"</span><span class="token punctuation">,</span><span class="token number">93</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"雅绿"</span><span class="token punctuation">,</span><span class="token number">98</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"冰蓝"</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"灵槐"</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"平安"</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"书翠"</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"翠风"</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"香巧"</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\                         <span class="token punctuation">[</span><span class="token string">"代云"</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"梦曼"</span><span class="token punctuation">,</span><span class="token number">94</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"幼翠"</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"友巧"</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"听寒"</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"梦柏"</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"醉易"</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"访旋"</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"亦玉"</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\                          <span class="token punctuation">[</span><span class="token string">"凌萱"</span><span class="token punctuation">,</span><span class="token number">83</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"访卉"</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"怀亦"</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"笑蓝"</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"春翠"</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"靖柏"</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"夜蕾"</span><span class="token punctuation">,</span><span class="token number">90</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"冰夏"</span><span class="token punctuation">,</span><span class="token number">47</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"杀毒"</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\                          <span class="token punctuation">[</span><span class="token string">"阿加"</span><span class="token punctuation">,</span><span class="token number">92</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"奥莱"</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"欧阳"</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"那谁"</span><span class="token punctuation">,</span><span class="token number">89</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"安塞"</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"市内"</span><span class="token punctuation">,</span><span class="token number">35</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"暗示"</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"维护"</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">"呼吸科"</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\                         <span class="token punctuation">[</span><span class="token string">"迪迦"</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">]</span>                                                                                                                                                                                                                    new_list <span class="token operator">=</span> <span class="token punctuation">[</span>                                                                                                             <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                                                                                                  <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                                                                                                  <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                                                                                                  <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                                                                                                                  <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># 创建一个五个分组的空列表                                                                                              </span>                                                                                                                     <span class="token keyword">for</span> student <span class="token keyword">in</span> stu_list<span class="token punctuation">:</span>                                                                                                 <span class="token keyword">if</span> student<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">89</span><span class="token punctuation">:</span>  <span class="token comment"># 如果学生成绩大于89                                                                                </span>        new_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>student<span class="token punctuation">)</span>   <span class="token comment"># 放入第一个空列表                                                                     </span>    <span class="token keyword">elif</span> student<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">79</span><span class="token punctuation">:</span>  <span class="token comment"># 如果学生成绩大于79                                                                              </span>        new_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>student<span class="token punctuation">)</span>   <span class="token comment"># 放入第二个空列表                                                                     </span>    <span class="token keyword">elif</span> student<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">69</span><span class="token punctuation">:</span>  <span class="token comment"># 如果学生成绩大于69                                                                              </span>        new_list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>student<span class="token punctuation">)</span>   <span class="token comment"># 放入第三个空列表                                                                     </span>    <span class="token keyword">elif</span> student<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">59</span><span class="token punctuation">:</span>  <span class="token comment"># 如果学生成绩大于59                                                                              </span>        new_list<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>student<span class="token punctuation">)</span>   <span class="token comment"># 放入第四个空列表                                                                     </span>    <span class="token keyword">else</span><span class="token punctuation">:</span>   <span class="token comment"># 如果学生成绩小于等于60                                                                                           </span>        new_list<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>student<span class="token punctuation">)</span>   <span class="token comment"># 放入第五个空列表                                                                     </span>                                                                                                                     <span class="token keyword">for</span> group <span class="token keyword">in</span> new_list<span class="token punctuation">:</span>                                                                                                   <span class="token keyword">print</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span> </code></pre><h1 id="三、数据类型dict"><a href="#三、数据类型dict" class="headerlink" title="三、数据类型dict"></a>三、数据类型dict</h1><h2 id="（一）引子"><a href="#（一）引子" class="headerlink" title="（一）引子"></a>（一）引子</h2><p>&amp;emsp;&amp;emsp;使用列表存储每个员工的名字、年龄、职务、工资<br>70-79, 60-69, 0-59最终的数据格式如下：</p><div align=center><img src="https://img-blog.csdnimg.cn/31c67ddb6346464ba1c5fac3fe0c4df6.png" width = 50%></div>&emsp;&emsp;如果想要拿到佩奇的工资，需要做以下操作<pre class="language-python" data-language="python"><code class="language-python">staff_list <span class="token operator">=</span> <span class="token punctuation">[</span>                     <span class="token punctuation">[</span><span class="token string">'Alex'</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">'CEO'</span><span class="token punctuation">,</span> <span class="token number">66000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token string">'黑姑娘'</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token string">'行政'</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token punctuation">[</span><span class="token string">'佩奇'</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token string">'讲师'</span><span class="token punctuation">,</span> <span class="token number">40000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>       <span class="token comment"># ['xxx', xx, 'xx', xxx]   </span>    <span class="token comment"># ['xxx', xx, 'xx', xxx]   </span>    <span class="token comment"># ['xxx', xx, 'xx', xxx]   </span><span class="token punctuation">]</span>                              <span class="token keyword">for</span> staff <span class="token keyword">in</span> staff_list<span class="token punctuation">:</span>           <span class="token keyword">if</span> staff<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'佩奇'</span><span class="token punctuation">:</span>               <span class="token keyword">print</span><span class="token punctuation">(</span>staff<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">break</span>  <span class="token comment"># 找到后直接结束 </span></code></pre><p>&amp;emsp;&amp;emsp;需要写三行代码，麻烦；需要遍历列表直到找到目标，时间消耗高</p><h2 id="（二）定义"><a href="#（二）定义" class="headerlink" title="（二）定义"></a>（二）定义</h2><p><strong>{key1:value1, key2:value2}</strong></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> staff_dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token string">'Alex'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">'CEO'</span><span class="token punctuation">,</span> <span class="token number">66000</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token string">'黑姑娘'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">,</span> <span class="token string">'行政'</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     <span class="token string">'佩奇'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">,</span> <span class="token string">'讲师'</span><span class="token punctuation">,</span> <span class="token number">40000</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">&#125;</span><span class="token operator">>></span><span class="token operator">></span> staff_dic<span class="token punctuation">[</span><span class="token string">'佩奇'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">,</span> <span class="token string">'讲师'</span><span class="token punctuation">,</span> <span class="token number">40000</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span>  </code></pre><h2 id="（三）特性"><a href="#（三）特性" class="headerlink" title="（三）特性"></a>（三）特性</h2><p>1、key: value结构<br>2、<font color="#dd0000">key必须为不可变数据类型（除列表字典外）、必须唯一</font><br>3、可存放任意多个value、可修改、不唯一<br>4、<font color="#dd0000">无序</font>通过key而不是索引号进行取值<br>5、查询速度快，且不受dict大小影响（学完hash后讲原因）</p><h2 id="（四）增加修改操作"><a href="#（四）增加修改操作" class="headerlink" title="（四）增加修改操作"></a>（四）增加修改操作</h2><pre class="language-python" data-language="python"><code class="language-python">staff_dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span>                          <span class="token string">'Alex'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">,</span> <span class="token string">'CEO'</span><span class="token punctuation">,</span> <span class="token number">66000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'黑姑娘'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">,</span> <span class="token string">'行政'</span><span class="token punctuation">,</span> <span class="token number">4000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>           <span class="token string">'佩奇'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">,</span> <span class="token string">'讲师'</span><span class="token punctuation">,</span> <span class="token number">40000</span><span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>                                  staff_dic<span class="token punctuation">[</span><span class="token string">'耿天霸'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">,</span> <span class="token string">'学生'</span><span class="token punctuation">,</span> <span class="token number">1500</span><span class="token punctuation">]</span>  <span class="token comment"># 当字典中已有该key值时，会对该key对应的value进行修改</span></code></pre><h2 id="（五）删除操作"><a href="#（五）删除操作" class="headerlink" title="（五）删除操作"></a>（五）删除操作</h2><pre class="language-python" data-language="python"><code class="language-python">staff_dic<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">'Alex'</span><span class="token punctuation">)</span>  <span class="token comment"># 删除指定key</span><span class="token keyword">del</span> staff_dic<span class="token punctuation">[</span><span class="token string">'Alex'</span><span class="token punctuation">]</span>  <span class="token comment"># 删除指定key，同pop()</span>staff_doc<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 清空字典</span></code></pre><h2 id="（六）查找操作"><a href="#（六）查找操作" class="headerlink" title="（六）查找操作"></a>（六）查找操作</h2><pre class="language-python" data-language="python"><code class="language-python">staff_dic<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 以列表形式返回所有key</span>staff_dic<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 以列表形式返回所有value</span>staff_dic<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 以列表形式返回所有字典，每个字典用元组封装</span>staff_dic<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'key'</span><span class="token punctuation">)</span>  <span class="token comment"># 返回对应key的value值，没有返回None </span></code></pre><p>※字典不支持同时查多个值，一次只能查一个值；字典不支持通过value查找key，只能通过key查value</p><h2 id="（七）循环"><a href="#（七）循环" class="headerlink" title="（七）循环"></a>（七）循环</h2><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> k <span class="token keyword">in</span> staff_dic<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 遍历所有key</span><span class="token keyword">for</span> v <span class="token keyword">in</span> staff_dic<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 遍历所有value</span><span class="token keyword">for</span> k<span class="token punctuation">,</span>v <span class="token keyword">in</span> staff_dic<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span>  <span class="token comment"># 遍历所有key和value</span><span class="token comment"># 官方推荐取法</span><span class="token keyword">for</span> k <span class="token keyword">in</span> staff_dic<span class="token punctuation">:</span>  <span class="token comment"># 遍历所有key</span><span class="token keyword">for</span> k <span class="token keyword">in</span> staff_dic<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>staff_dic<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 遍历所有value </span><span class="token keyword">for</span> k <span class="token keyword">in</span> staff_dic<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 遍历所有值</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> staff_dic<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span>  </code></pre><h2 id="（八）求长度"><a href="#（八）求长度" class="headerlink" title="（八）求长度"></a>（八）求长度</h2><pre class="language-python" data-language="python"><code class="language-python"><span class="token builtin">len</span><span class="token punctuation">(</span>staff_dic<span class="token punctuation">)</span>  </code></pre><h2 id="（九）嵌套"><a href="#（九）嵌套" class="headerlink" title="（九）嵌套"></a>（九）嵌套</h2><pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> dic <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token operator">>></span><span class="token operator">></span> dic<span class="token punctuation">[</span><span class="token string">'耿天霸'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'age'</span><span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">,</span><span class="token string">'salary'</span><span class="token punctuation">:</span><span class="token number">1500</span><span class="token punctuation">&#125;</span><span class="token operator">>></span><span class="token operator">></span> dic<span class="token punctuation">[</span><span class="token string">'耿天霸'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'age'</span><span class="token punctuation">]</span><span class="token number">25</span>  </code></pre><h1 id="四、集合"><a href="#四、集合" class="headerlink" title="四、集合"></a>四、集合</h1><p>&amp;emsp;&amp;emsp;数学中的集合概念，并主要进行交集、并集、补集和交叉补集运算</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 无序且不重复</span>five_man <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 交集</span><span class="token builtin">set</span><span class="token punctuation">.</span>intersection<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 并集</span><span class="token builtin">set</span><span class="token punctuation">.</span>union<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 补集</span><span class="token builtin">set</span><span class="token punctuation">.</span>difference<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 交叉补集</span><span class="token builtin">set</span><span class="token punctuation">.</span>symmetric_difference<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h1 id="五、字符编码"><a href="#五、字符编码" class="headerlink" title="五、字符编码"></a>五、字符编码</h1><p>&amp;emsp;&amp;emsp;通过字符编码，建立数字和文字的关系，达到用电流进行编码</p><h2 id="（一）从二进制到英文字母"><a href="#（一）从二进制到英文字母" class="headerlink" title="（一）从二进制到英文字母"></a>（一）从二进制到英文字母</h2><p>1、二进制<br>&amp;emsp;&amp;emsp;通过二进制建立电流和十进制的关系</p><p>2、<font color="#dd0000">ASCII码</font></p><div align=center>&emsp;&emsp;通过ASCII码建立十进制和英文和符号的关系<img src="https://img-blog.csdnimg.cn/eb871791c5df43859b67da75a2f27be8.png" width = 100%></div><font color="#dd0000">&emsp;&emsp;这张表就是计算机显示各种文字和符号的基石</font>，ASCII（American Standard Code for Information Interchange）码，是基于拉丁字母的一套电脑编码系统，主要用于显示现代英语和其它西欧语言。<div align=center><img src="https://img-blog.csdnimg.cn/4fca00f3cc714dc8a97c381b29575b9e.png" width = 100%></div><p>3、验证<br>&amp;emsp;&amp;emsp;通过ord()方法获取对应字符的十进制ASCII编码</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'0'</span><span class="token punctuation">)</span>  <span class="token comment"># 返回48对应0的十进制ASCII编码</span><span class="token number">48</span></code></pre><p>4、问题</p><div align=center><img src="https://img-blog.csdnimg.cn/5fef903ebd9743fe8da370d75027d88d.png" width = 100%></div>&emsp;&emsp;由于ASCII码是255个字符，对应的二进制位数是8，因此使用8位作为一个字符的长度，不够前方用0填充<h2 id="（二）计算机容量单位"><a href="#（二）计算机容量单位" class="headerlink" title="（二）计算机容量单位"></a>（二）计算机容量单位</h2><p>比特（bit）：一个二级制位，<font color="#dd0000">计算机中最小的表示单位</font><br>字节（bytes）：8个bit组成一个字节，<font color="#dd0000">计算机中最小的存储单位</font><br>1KB &#x3D; 1024B<br>1MB &#x3D; 1024KB<br>1GB &#x3D; 1024MB<br>1TB &#x3D; 1024GB<br>1PB &#x3D; 1024TB<br>1EB &#x3D; 1024PB<br>1ZB &#x3D; 1024EB<br>1YB &#x3D; 1024ZB</p><h2 id="（三）计算机怎么识别中文"><a href="#（三）计算机怎么识别中文" class="headerlink" title="（三）计算机怎么识别中文"></a>（三）计算机怎么识别中文</h2><p>&amp;emsp;&amp;emsp;我国1980年设计的中文编码表，一共存储了6763个汉字，使用两个字节进行存储，长成下面这样。</p><div align=center><img src="https://img-blog.csdnimg.cn/dba244cc3a5042d0b674e67cd83e988a.png" width = 100%></div>&emsp;&emsp;这个表格比较大，像上面的一块块的文字区域有72个，这导致通过一个字节是没办法表示一个汉字的(因为一个字节最多允许256个字符变种，你现在6千多个，只能2个字节啦，2**16=65535个变种)。有了gb2312，我们就能愉快的写中文啦。&emsp;&emsp;但我们写字竟然会出现中英混杂的情况，比如“我是路飞学城，我的英文名叫Luffycity."，这种你怎么办?这就要求你必须在GB2312里同时支持英文，但是还不能是2个字节表示一个英文字母。人家ASCII用一个字符，你用2个，那一个2mb大小的英文文档只要一改编码，就立刻变成4mb,太坑爹，中国人你有钱也不能这么造呀。所以中国砖家们又通过神奇手段兼容了ASSCII,即遇到中文用2个字节，遇到英文直接用ASCII的编码。怎么做到的呢?&emsp;&emsp;如何区别连在一起的2个字节是代表2个英文字母，还是一个中文汉字呢?中国人如此聪明，决定，<font color="#dd0000">如果2个字节连在一起，且每个字节的第1位(也就是相当于128的那个2进制位)如果是1，就代表这是个中文，</font>这个首位是128的字节被称为高字节。也就是2个高孛节连在一起，必然就是一个中文。你怎么如此笃定?因为0-127已经表示了英文的绝大部分字符，128-255是ASCII的扩展表，表示的都是极特殊的字符，一般没什么用。所以中国人就直接拿来用了。&emsp;&emsp;自1980年发布GB2312之后，中文一直用着没啥问题，随着个人电脑进入千家万户，有人发现，自己的名字竟然打印不出来，因为起的太生僻了。&emsp;&emsp;于是1995年，砖家们又升级了gb2312,加入更多字符，连什么藏语、维吾尔语、日语、韩语、蒙古语什么的统统都包含进去了，国家统一亚洲的野心从这些基础工作中就可见一斑哈。这个编码叫GBK，一直到现在，我们的windows电脑中文版本的编码就是<font color="#dd0000">GBK</font>.<h2 id="（四）编码的战国时代"><a href="#（四）编码的战国时代" class="headerlink" title="（四）编码的战国时代"></a>（四）编码的战国时代</h2><p>&amp;emsp;&amp;emsp;中国人在搞自己编码的同时，世界上其它非英语国家也得用电脑呀，于是都搞出了自己的编码，你可以想得到的是，全世界有上百种语言，日本把日文编到<strong>Shift_JIS</strong>里，韩国把韩文编到<strong>Euc-kr</strong>里，各国有各国的标准，就会不可避免地出现冲突，结果就是，在多语言混合的文本中，显示出来会有乱码。之前你从玩个日本游戏，往自己电脑上一装,就显示乱码了。</p><h4>解决方式：</h4><p>&amp;emsp;&amp;emsp;这么乱极大了阻碍了不同国家的信息传递，于是联合国出面，发誓要解决这个混乱局面。因此,<strong>Unicode</strong>应运而生。Unicode把所有语言都统一到一套编码里，这样就不会再有乱码问题了。Unicode 2-4字节已经收录<strong>136690</strong>个字符，并还在一直不断扩张中…。Unicode标准也在不断发展，但<strong>最常用的是用2个字节表示一个字符</strong>(如果要用到非常<strong>偏僻的字符，就需要4个字节</strong>)。现代操作系统和大多数编程语言都直接支持Unicode。</p><h4>Unicode的优势：</h4>1．支持全球所有语言2.可以跟各种语言的编码自由转换，也就是说，即使你gbk编码的文字，想转成unicode很容易。<p>&amp;emsp;&amp;emsp;为何unicode可以跟其它语言互相转换呢?因为有跟所有语言都有对应关系，这样做的好处是可以让那些已经用gbk或其它编码写好的软件容易的转成unicode编码，<font color="#dd0000"><strong>利于unicode的推广</strong></font>。下图就是unicode跟中文编码的对应关系</p><div align=center><img src="https://img-blog.csdnimg.cn/ab9f91d4a2324609b459cf4cde99921a.png" width = 100%></div><h2 id="（五）UTF-8编码："><a href="#（五）UTF-8编码：" class="headerlink" title="（五）UTF-8编码："></a>（五）UTF-8编码：</h2><p>&amp;emsp;&amp;emsp;新的问题又出现了:如果统-成Unicode编码，乱码问题从此消失了。但是，如果你写的文本基本上全部是英文的话，用Unicode编码比ASCII编 码需要多一倍的存储空间，由于计算机的内存比较大，并且字符串在内容中表示时也不会特别大，所以内存可以使用unicode来处理，但是存储和网络传输时一般数据都会非常多，那么增加一倍将是无法容忍的! ! !<br>&amp;emsp;&amp;emsp;为了解决存储和网络传输的问题，出现了Unicode Transformation Format,学术名UTF, 即:对unicode字符进行转换，以便于在存储和网络传输时可以节省空间!</p><h4>●UTF-8：</h4> 使用1、2、3、4个字节表示所有字符;优先使用1个字节、无法满足则使增加一个字节，最多4个字节。英文占1个字节、欧洲语系占2个、东亚占3个，其它及特殊字符占4个。<h4>●UTF-16:</h4> 使用2、4个字节表示所有字符;优先使用2个字节，否则使用4个字节表示。<h4>●UTF-32:</h4>使用4个字节表示所有字符。<p><font color="#dd0000"><strong>总结: UTF是为unicode编码设计的一种在存储和传输时节省空间的编码方案。如果你要传输的文本包含大量英文字符，用UTF-8编码就能节省空间</strong></font></p><div align=center><img src="https://img-blog.csdnimg.cn/7021815f69534e4d95e31e5d85f0a20c.png" width = 100%></div>&emsp;&emsp;从上面的表格还可以发现，UTF-8编码有一个额外的好处，就是ASCII编码实际 上可以被看成是UTF-8编码的一部分，所以，大量只支持ASCII编码的历史遗留软件可以在UTF-8编码下继续工作。&emsp;&emsp;搞清楚了ASCII、Unicode和UTF-8的关系，我们就可以总结一下现在计算机系统通用的字符编码工作方式:1、在计算机内存中，统一使用Unicode编码，当需要保存到硬盘或者需要传输的时候，就转换为UTF-8编码。2、用记事本编辑的时候，从文件读取的UTF-8字符被转换为Unicode字符到内存里，编辑完成后，保存的时候再把Unicode转换为UTF-8保存到文件。<div align=center><img src="https://img-blog.csdnimg.cn/bc8c412498d048de8830eb609cb9b4fb.png" width = 50%></div><h2 id="（六）常用编码一览表"><a href="#（六）常用编码一览表" class="headerlink" title="（六）常用编码一览表"></a>（六）常用编码一览表</h2><div align=center><img src="https://img-blog.csdnimg.cn/63e3a997f2de48c680b54a288af2427e.png" width = 100%></div><h2 id="（七）Py2-VS-Py3编码"><a href="#（七）Py2-VS-Py3编码" class="headerlink" title="（七）Py2 VS Py3编码"></a>（七）Py2 VS Py3编码</h2><p>&amp;emsp;&amp;emsp;python生下来的时候（1989年）还没有unicode&amp;utf-8,所以龟叔选用的默认编码只能是ASCI, -直到py2.7,用的还是ASCI,导致Py默认只支持英文想支持其它语言，必须单独配置。<br>&amp;emsp;&amp;emsp;到了Py3推出后,终于把默认编码改成了unicode,同时文件存储编码变成了utf-8，意味着，不用任何声明，你就可以写各种语言文字在你的Python程序里。从此，程序们手牵手过上了快乐的生活。</p><h1 id="六、十六进制"><a href="#六、十六进制" class="headerlink" title="六、十六进制"></a>六、十六进制</h1><h2 id="（一）概念"><a href="#（一）概念" class="headerlink" title="（一）概念"></a>（一）概念</h2><p>&amp;emsp;&amp;emsp;16进制，英文名称Hexadecimal(简写Hex)，在数学中是一种逢16进1的进位制。一般用数字0到9和字母A到F（或a<del>f ）表示，其中:A</del>F表示10~15，这些称作十六进制数字，比如十进制13用16进制表示是D,28用16进制是1C。</p><div align=center><img src="https://img-blog.csdnimg.cn/971bb0638c084bac8c9fa0ede3206462.png" width = 100%></div><h2 id="（二）应用"><a href="#（二）应用" class="headerlink" title="（二）应用"></a>（二）应用</h2><p>&amp;emsp;&amp;emsp;16进制在计算机领域应用普遍，常见的有htm\css的颜色表、mac地址、字符编码等都用16进制来表示</p><h1 id="七、快递分拣小程序"><a href="#七、快递分拣小程序" class="headerlink" title="七、快递分拣小程序"></a>七、快递分拣小程序</h1><h2 id="（一）需求"><a href="#（一）需求" class="headerlink" title="（一）需求"></a>（一）需求</h2><p>&amp;emsp;&amp;emsp;将数据源里的快递信息进行分拣，最终生成的数据格式如下:</p><div align=center><img src="https://img-blog.csdnimg.cn/c5c8b9c2541e4bd8ac8061e19d69a320.png" width = 80%></div><h2 id="（二）数据源"><a href="#（二）数据源" class="headerlink" title="（二）数据源"></a>（二）数据源</h2><pre class="language-python" data-language="python"><code class="language-python"></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>day2-开发年会抽奖小程序</title>
      <link href="/2022/05/03/Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A2/"/>
      <url>/2022/05/03/Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A2/</url>
      
        <content type="html"><![CDATA[<h3 id="本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记"><a href="#本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记" class="headerlink" title="本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记"></a>本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记</h3><h3 id="视频链接-Python零基础到精通7天速成"><a href="#视频链接-Python零基础到精通7天速成" class="headerlink" title="视频链接:Python零基础到精通7天速成"></a>视频链接:<a href="https://www.bilibili.com/video/BV1Gf4y1q7SG?share_source=copy_web">Python零基础到精通7天速成</a></h3><span id="more"></span><h1 id="一、for循环"><a href="#一、for循环" class="headerlink" title="一、for循环"></a>一、for循环</h1><h2 id="（一）多次猜年龄"><a href="#（一）多次猜年龄" class="headerlink" title="（一）多次猜年龄"></a>（一）多次猜年龄</h2><pre class="language-python" data-language="python"><code class="language-python">true_age <span class="token operator">=</span> <span class="token number">48</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        guess_age <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please guess a number: '</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> guess_age <span class="token operator">></span> true_age<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'猜的太大了'</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> guess_age <span class="token operator">&lt;</span> true_age<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'猜的太小了'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token comment"># 只要猜对就退出程序，并打印提示语句</span>        exit<span class="token punctuation">(</span><span class="token string">'恭喜你，猜对了'</span><span class="token punctuation">)</span></code></pre><h2 id="（二）打印0-100的奇偶数"><a href="#（二）打印0-100的奇偶数" class="headerlink" title="（二）打印0-100的奇偶数"></a>（二）打印0-100的奇偶数</h2><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> i<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>  <span class="token comment"># 说明i是偶数</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string"> is even'</span></span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string"> is odd'</span></span><span class="token punctuation">)</span></code></pre><h2 id="（三）打印门牌号"><a href="#（三）打印门牌号" class="headerlink" title="（三）打印门牌号"></a>（三）打印门牌号</h2><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 一共5层，每层9个房间，打印出房间号格式如L2-203(2楼3号房)</span><span class="token keyword">for</span> floor <span class="token keyword">in</span> <span class="token builtin">range</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> room <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'L</span><span class="token interpolation"><span class="token punctuation">&#123;</span>floor<span class="token punctuation">&#125;</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">&#123;</span>floor<span class="token punctuation">&#125;</span></span><span class="token string">0</span><span class="token interpolation"><span class="token punctuation">&#123;</span>room<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span></code></pre><h2 id="（四）打印下方图形"><a href="#（四）打印下方图形" class="headerlink" title="（四）打印下方图形"></a>（四）打印下方图形</h2><div align=center><img src="https://img-blog.csdnimg.cn/b7a57af6ed454d219eb4e8353ed19bc9.png" width = 10%></div><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> i <span class="token operator">&lt;=</span><span class="token number">5</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token operator">*</span><span class="token string">"*"</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token operator">*</span><span class="token string">"*"</span><span class="token punctuation">)</span></code></pre><h1 id="二、break和continue"><a href="#二、break和continue" class="headerlink" title="二、break和continue"></a>二、break和continue</h1><p><font color="#dd0000">用于控制循环流程，只能在循环中使用</font></p><h2 id="（一）break"><a href="#（一）break" class="headerlink" title="（一）break"></a>（一）break</h2><p>&amp;emsp;&amp;emsp;<font color="#dd0000">当程序遇到break，就会结束当前循环</font>（如果是多层嵌套循环，只结束当前循环）</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 一共5层，每层9个房间，当遇到房间404时，不再打印4层房间号</span><span class="token keyword">for</span> floor <span class="token keyword">in</span> <span class="token builtin">range</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> room <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> floor<span class="token operator">==</span><span class="token number">4</span> <span class="token keyword">and</span> room<span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'L</span><span class="token interpolation"><span class="token punctuation">&#123;</span>floor<span class="token punctuation">&#125;</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">&#123;</span>floor<span class="token punctuation">&#125;</span></span><span class="token string">0</span><span class="token interpolation"><span class="token punctuation">&#123;</span>room<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span></code></pre><h2 id="（二）continue"><a href="#（二）continue" class="headerlink" title="（二）continue"></a>（二）continue</h2><p>&amp;emsp;&amp;emsp;<font color="#dd0000">当程序遇到continue，就会结束本次循环，直接进入下一次循环</font></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># 一共5层，每层9个房间，当遇到第三层时不打印房间号其它层都打印</span><span class="token keyword">for</span> floor <span class="token keyword">in</span> <span class="token builtin">range</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> floor <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>        <span class="token keyword">continue</span>    <span class="token keyword">for</span> room <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'L</span><span class="token interpolation"><span class="token punctuation">&#123;</span>floor<span class="token punctuation">&#125;</span></span><span class="token string">-</span><span class="token interpolation"><span class="token punctuation">&#123;</span>floor<span class="token punctuation">&#125;</span></span><span class="token string">0</span><span class="token interpolation"><span class="token punctuation">&#123;</span>room<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span></code></pre><h1 id="三、while"><a href="#三、while" class="headerlink" title="三、while"></a>三、while</h1><p><font color="#dd0000">&amp;emsp;&amp;emsp;与for循环不一样的是，while循环的次数可以是不定的，只要条件满足就可以一直循环下去。<br></font></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># while版猜年龄，当猜到的年龄和真实年龄不符时，继续猜提示，猜到时退出。</span>true_age <span class="token operator">=</span> <span class="token number">48</span>guess_age <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> guess_age <span class="token operator">!=</span> true_age<span class="token punctuation">:</span>    guess_age <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please guess a number: '</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> guess_age <span class="token operator">></span> true_age<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'猜的太大了'</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> guess_age <span class="token operator">&lt;</span> true_age<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'猜的太小了'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'恭喜你，猜对了'</span><span class="token punctuation">)</span>        <span class="token keyword">break</span></code></pre><h1 id="四、打印九九乘法表"><a href="#四、打印九九乘法表" class="headerlink" title="四、打印九九乘法表"></a>四、打印九九乘法表</h1><div align=center><img src="https://img-blog.csdnimg.cn/cc75c013d07b42c0a36608ec8ab288e0.png" width = 80%></div><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">*</span><span class="token interpolation"><span class="token punctuation">&#123;</span>j<span class="token punctuation">&#125;</span></span><span class="token string">=</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token operator">*</span>j<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">' '</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 每执行一次大循环，进行换行</span></code></pre><h1 id="五、京牌摇号小程序"><a href="#五、京牌摇号小程序" class="headerlink" title="五、京牌摇号小程序"></a>五、京牌摇号小程序</h1><h2 id="（一）需求："><a href="#（一）需求：" class="headerlink" title="（一）需求："></a>（一）需求：</h2><p>1、允许用户最多选三次<br>2、每次放出20个车牌供用户选择<br>3、京[A-Z]-[xxxxx]，可以是字母和数字的组合</p><h2 id="（二）思路"><a href="#（二）思路" class="headerlink" title="（二）思路"></a>（二）思路</h2><p>1、车牌由两个部分组成，第一部分京+A-Z的随机数；第二部分五位字母和数字组合随机数<br>2、随机数的实现<br>（1）random模块</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> randomrandom<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token string">'abcdefg'</span><span class="token punctuation">)</span>  <span class="token comment"># 参数也可以是一个列表</span>s <span class="token operator">=</span> <span class="token string">'abcdefghijk'</span>random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># 从数据源s中随机选三个值</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>  <span class="token comment"># 打印一个1到100的随机数 </span></code></pre><p>（2）string模块</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> stringstring<span class="token punctuation">.</span>digits  <span class="token comment">#打印数字</span>string<span class="token punctuation">.</span>ascii_letters  <span class="token comment"># 大写字母加小写字母</span>string<span class="token punctuation">.</span>ascii_uppercase  <span class="token comment"># 大写字母</span>string<span class="token punctuation">.</span>ascii_lowercase  <span class="token comment"># 小写字母</span>string<span class="token punctuation">.</span>punctuation  <span class="token comment"># 打印特殊字符 </span></code></pre><p>（3）join方法</p><pre class="language-python" data-language="python"><code class="language-python">引号内为链接符，join接受列表，列表元素必须全部为字符串<span class="token string">'--'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><h2 id="（三）代码"><a href="#（三）代码" class="headerlink" title="（三）代码"></a>（三）代码</h2><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random<span class="token keyword">import</span> stringtimes <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">while</span> times <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">:</span>    times <span class="token operator">+=</span> <span class="token number">1</span>    license_plates <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        area <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>string<span class="token punctuation">.</span>ascii_uppercase<span class="token punctuation">)</span>  <span class="token comment"># 选择A-Z其中一个作为地区</span>        part1 <span class="token operator">=</span> <span class="token string">'京'</span> <span class="token operator">+</span> area <span class="token operator">+</span> <span class="token string">'-'</span>  <span class="token comment"># 拼接车牌第一部分</span>        num_str <span class="token operator">=</span> string<span class="token punctuation">.</span>digits <span class="token operator">+</span> string<span class="token punctuation">.</span>ascii_uppercase  <span class="token comment"># 车牌第二部分在A-Z和0-9数字中选择</span>        part2 <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>num_str<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 拼接车牌第二部分</span>        license_plates<span class="token punctuation">.</span>append<span class="token punctuation">(</span>part1 <span class="token operator">+</span> part2<span class="token punctuation">)</span>  <span class="token comment"># 拼接整个车牌</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>license_plates<span class="token punctuation">)</span>    choice <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>f'please choice a license_plate  <span class="token keyword">in</span> the <span class="token builtin">list</span> \    <span class="token keyword">and</span> you hanv <span class="token number">3</span> chance to choice a number<span class="token punctuation">:</span> you have <span class="token punctuation">&#123;</span><span class="token number">3</span> <span class="token operator">-</span> times<span class="token punctuation">&#125;</span> times left： '<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">.</span>center<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token string">'~'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> choice <span class="token keyword">in</span> license_plates<span class="token punctuation">:</span>        exit<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'your license_plates is </span><span class="token interpolation"><span class="token punctuation">&#123;</span>choice<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span></code></pre><h1 id="六、综合联系–年会抽奖小程序"><a href="#六、综合联系–年会抽奖小程序" class="headerlink" title="六、综合联系–年会抽奖小程序"></a>六、综合联系–年会抽奖小程序</h1><h2 id="（一）需求"><a href="#（一）需求" class="headerlink" title="（一）需求"></a>（一）需求</h2><p>&amp;emsp;&amp;emsp;张三科技公司有300个员工，开年会抽奖，奖项如下:<br>一等奖 3名：泰国五日游<br>二等奖 6名：iPhone手机<br>三等奖 30名：羽毛球拍一副</p><h2 id="（二）规则"><a href="#（二）规则" class="headerlink" title="（二）规则"></a>（二）规则</h2><p>1、共抽三次，第一次抽三等奖，第二次抽二等奖，第三次抽一等奖<br>2、每个员工限中奖一次</p><h2 id="（三）代码-1"><a href="#（三）代码-1" class="headerlink" title="（三）代码"></a>（三）代码</h2><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> randomemployees <span class="token operator">=</span> <span class="token punctuation">[</span>employee <span class="token keyword">for</span> employee <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">]</span>  <span class="token comment"># 一共300名员工</span>winners_each_round <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>  <span class="token comment"># 抽3轮每轮中奖人数</span>times <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">def</span> <span class="token function">choice_winner</span><span class="token punctuation">(</span>participants<span class="token punctuation">,</span> number_of_winners<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 定义函数，实现抽奖并移除中奖人员</span>    winners <span class="token operator">=</span> random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>participants<span class="token punctuation">,</span> number_of_winners<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'中</span><span class="token interpolation"><span class="token punctuation">&#123;</span>times<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">&#125;</span></span><span class="token string">等奖人员编号为：</span><span class="token interpolation"><span class="token punctuation">&#123;</span>winners<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span>    <span class="token keyword">for</span> winner <span class="token keyword">in</span> winners<span class="token punctuation">:</span>        participants<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>winner<span class="token punctuation">)</span><span class="token keyword">while</span> times <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>winners_each_round<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 进行抽奖,一共抽三轮</span>    choice_winner<span class="token punctuation">(</span>employees<span class="token punctuation">,</span> winners_each_round<span class="token punctuation">[</span>times<span class="token punctuation">]</span><span class="token punctuation">)</span>    times <span class="token operator">+=</span> <span class="token number">1</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算R脚本</title>
      <link href="/2022/05/01/%E8%AE%A1%E7%AE%97R%E8%84%9A%E6%9C%AC/"/>
      <url>/2022/05/01/%E8%AE%A1%E7%AE%97R%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><span id="more"></span><h1 id="一、脚本介绍"><a href="#一、脚本介绍" class="headerlink" title="一、脚本介绍"></a>一、脚本介绍</h1><h2 id="amp-emsp-amp-emsp-通过1km逐月降水雨量栅格数据，计算该年降雨侵蚀因子R。"><a href="#amp-emsp-amp-emsp-通过1km逐月降水雨量栅格数据，计算该年降雨侵蚀因子R。" class="headerlink" title="&amp;emsp;&amp;emsp;通过1km逐月降水雨量栅格数据，计算该年降雨侵蚀因子R。"></a>&amp;emsp;&amp;emsp;通过1km逐月降水雨量栅格数据，计算该年降雨侵蚀因子R。</h2><h2 id="（一）计算公式"><a href="#（一）计算公式" class="headerlink" title="（一）计算公式"></a>（一）计算公式</h2><div align=center><img src="https://img-blog.csdnimg.cn/74d684baa75a48028a052f83ff4ffd60.png" width = 80%></div><h2 id="（二）数据源"><a href="#（二）数据源" class="headerlink" title="（二）数据源"></a>（二）数据源</h2><h3 id="amp-emsp-amp-emsp-国家地球系统科学数据中心-http-www-geodata-cn"><a href="#amp-emsp-amp-emsp-国家地球系统科学数据中心-http-www-geodata-cn" class="headerlink" title="&amp;emsp;&amp;emsp;国家地球系统科学数据中心(http://www.geodata.cn/)"></a>&amp;emsp;&amp;emsp;国家地球系统科学数据中心(<a href="http://www.geodata.cn/">http://www.geodata.cn/</a>)</h3><div align=center><img src="https://img-blog.csdnimg.cn/d2bf59b83f59438d87a7b283e11a8a09.png" width = 80%></div><p><font color="#dd0000">※该数据为.nc格式，需要转换成tif格式</font></p><h2 id="（三）数据输出"><a href="#（三）数据输出" class="headerlink" title="（三）数据输出"></a>（三）数据输出</h2><h3 id="1、年降雨总量栅格数据"><a href="#1、年降雨总量栅格数据" class="headerlink" title="1、年降雨总量栅格数据"></a>1、年降雨总量栅格数据</h3><h3 id="2、各月降雨侵蚀因子R"><a href="#2、各月降雨侵蚀因子R" class="headerlink" title="2、各月降雨侵蚀因子R"></a>2、各月降雨侵蚀因子R</h3><h3 id="3、年总降雨量侵蚀因子R"><a href="#3、年总降雨量侵蚀因子R" class="headerlink" title="3、年总降雨量侵蚀因子R"></a>3、年总降雨量侵蚀因子R</h3><h2 id="（四）操作过程"><a href="#（四）操作过程" class="headerlink" title="（四）操作过程"></a>（四）操作过程</h2><h3 id="1、将12各月的降雨量栅格数据输入文件夹"><a href="#1、将12各月的降雨量栅格数据输入文件夹" class="headerlink" title="1、将12各月的降雨量栅格数据输入文件夹"></a>1、将12各月的降雨量栅格数据输入文件夹</h3><h3 id="2、更改文件工作环境，运行脚本"><a href="#2、更改文件工作环境，运行脚本" class="headerlink" title="2、更改文件工作环境，运行脚本"></a>2、更改文件工作环境，运行脚本</h3><h2 id="（五）Python2源码"><a href="#（五）Python2源码" class="headerlink" title="（五）Python2源码"></a>（五）Python2源码</h2><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># coding=utf-8  ##Python2不支持中文</span><span class="token comment"># 导入模块</span><span class="token keyword">import</span> arcpy<span class="token keyword">from</span> arcpy<span class="token punctuation">.</span>sa <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment"># 设置工作环境</span>arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">=</span> <span class="token string">"C:/Users/Geng/Desktop/test/"</span><span class="token comment"># 创建变量</span>rasters <span class="token operator">=</span> arcpy<span class="token punctuation">.</span>ListRasters<span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">,</span> <span class="token string">"tif"</span><span class="token punctuation">)</span>  <span class="token comment"># 将工作空间中所有.tif栅格文件存入raster变量</span>sum_pre <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment"># 初始化年降雨量</span>r_month <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token comment"># 创建空列表存储12各月的降雨量侵蚀因子r</span>r_year <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment"># 初始化年降雨量侵蚀因子</span><span class="token comment"># 计算年总降水量</span><span class="token keyword">for</span> raster <span class="token keyword">in</span> rasters<span class="token punctuation">:</span>    <span class="token keyword">print</span> raster    sum_pre <span class="token operator">+=</span> Raster<span class="token punctuation">(</span>raster<span class="token punctuation">)</span><span class="token comment"># 编辑公式通过降雨量计算降雨侵蚀因子r</span><span class="token keyword">def</span> <span class="token function">calculation_r</span><span class="token punctuation">(</span>pre_mon<span class="token punctuation">,</span> pre_year<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 该公式计算出的降雨侵蚀因子有异常值(Nodata)</span>    r_month_with_nodata <span class="token operator">=</span> <span class="token number">17.02</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1.735</span> <span class="token operator">*</span> Power<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1.5</span> <span class="token operator">*</span> Log10<span class="token punctuation">(</span>Power<span class="token punctuation">(</span>pre_mon<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">/</span>pre_year<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0.8188</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> Con<span class="token punctuation">(</span>pre_mon <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> r_month_with_nodata<span class="token punctuation">)</span>  <span class="token comment"># 处理异常值(将Nodata 赋值为0)</span><span class="token comment"># 根据12个月的r，计算该年的r</span><span class="token keyword">for</span> raster <span class="token keyword">in</span> rasters<span class="token punctuation">:</span>    r_month<span class="token punctuation">.</span>append<span class="token punctuation">(</span>calculation_r<span class="token punctuation">(</span>Raster<span class="token punctuation">(</span>raster<span class="token punctuation">)</span><span class="token punctuation">,</span> sum_pre<span class="token punctuation">)</span><span class="token punctuation">)</span>    r_year <span class="token operator">+=</span> r_month<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token comment"># 输出每月r</span>    r_month<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>save<span class="token punctuation">(</span>arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">+</span> <span class="token string">"/r_%s.tif"</span> <span class="token operator">%</span>raster<span class="token punctuation">)</span><span class="token comment"># 输出结果</span>r_year<span class="token punctuation">.</span>save<span class="token punctuation">(</span>arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">+</span> <span class="token string">"/r_year.tif"</span><span class="token punctuation">)</span>  <span class="token comment"># 输出年尺度r</span>sum_pre<span class="token punctuation">.</span>save<span class="token punctuation">(</span>arcpy<span class="token punctuation">.</span>env<span class="token punctuation">.</span>workspace <span class="token operator">+</span> <span class="token string">"/pre_year.tif"</span><span class="token punctuation">)</span>  <span class="token comment"># 输出年尺度pre</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 个人学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>day1-Python新手小白上路</title>
      <link href="/2022/04/22/Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A1/"/>
      <url>/2022/04/22/Python%E5%85%A5%E9%97%A8%E5%88%B0%E7%B2%BE%E9%80%9A1/</url>
      
        <content type="html"><![CDATA[<h3 id="本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记"><a href="#本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记" class="headerlink" title="本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记"></a>本文章为金角大王Alex《Python零基础到精通7天速成》视频笔记</h3><h3 id="视频链接-Python零基础到精通7天速成"><a href="#视频链接-Python零基础到精通7天速成" class="headerlink" title="视频链接:Python零基础到精通7天速成"></a>视频链接:<a href="https://www.bilibili.com/video/BV1Gf4y1q7SG?share_source=copy_web">Python零基础到精通7天速成</a></h3><span id="more"></span><h1 id="一、Python语言简介"><a href="#一、Python语言简介" class="headerlink" title="一、Python语言简介"></a>一、Python语言简介</h1><h2 id="1、Python的优势领域"><a href="#1、Python的优势领域" class="headerlink" title="1、Python的优势领域"></a>1、Python的优势领域</h2><p><img src="https://img-blog.csdnimg.cn/56a412283570418787f2536651fb6219.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6IC_5aSp6Zy4,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="2、Python的排名"><a href="#2、Python的排名" class="headerlink" title="2、Python的排名"></a>2、Python的排名</h2><p><a href="https://www.tiobe.com/tiobe-index/">https://www.tiobe.com/tiobe-index/</a></p><h1 id="二、安装Python解释器"><a href="#二、安装Python解释器" class="headerlink" title="二、安装Python解释器"></a>二、安装Python解释器</h1><h2 id="一-为什么要安装Python解释器"><a href="#一-为什么要安装Python解释器" class="headerlink" title="(一)为什么要安装Python解释器"></a>(一)为什么要安装Python解释器</h2><div align=center><img src="https://img-blog.csdnimg.cn/bab3384778a54f1fbe8de609cdc756f0.png??" width = 65%></div><h2 id="（二）python解释器安装"><a href="#（二）python解释器安装" class="headerlink" title="（二）python解释器安装"></a>（二）python解释器安装</h2><p>1、官网安装<a href="https://www.python.org/">https://www.python.org/</a><br>（1）将Python添加到系统变量中，如不添加只能在安装Python的目录下才能调出Python解释器<br>（2）安装好后在cmd命令行输入Python，即可进入Python交互式环境，输入exit()退出<br>2、写下第一行代码<br>&amp;emsp;&amp;emsp;书写Python代码可以通过两种方式，一致是在Python交互器直接写，一种是写到文件里并保存为.py文件<br>（1）交互器直接写<br><img src="https://img-blog.csdnimg.cn/6c22c0f11dca4e478eb82d8a5184c4c4.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6IC_5aSp6Zy4,size_19,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>（2）写到文件里<br><img src="https://img-blog.csdnimg.cn/a82227df8608447598e61703a00e3c61.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6IC_5aSp6Zy4,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>（3）写下第一行代码</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Hello world!'</span><span class="token punctuation">)</span></code></pre><p>（4）执行<br>a、交互器执行：命令行输入Python版本 + 空格 + 完整路径的.py文件（<font color="#dd0000">或直接将.py文件拖入</font>）<br>b、编程软件执行：找对对应的.py文件，run<br>※Python的后缀.py作用是供编程人员识别文件类型，不加任何后缀或加入其它后缀（如：.jpeg,.md）Python解释器都会按照Python语法对文件内容进行解析，对不符合Python语法的代码进行报错。</p><h1 id="三、变量"><a href="#三、变量" class="headerlink" title="三、变量"></a>三、变量</h1><h2 id="（一）快速扫盲CPU、内存、硬盘关系"><a href="#（一）快速扫盲CPU、内存、硬盘关系" class="headerlink" title="（一）快速扫盲CPU、内存、硬盘关系"></a>（一）快速扫盲CPU、内存、硬盘关系</h2><p><img src="https://img-blog.csdnimg.cn/e53ecf195d2a4f158335907ec65977b1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6IC_5aSp6Zy4,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>1、硬盘负责永久性存储数据，为CPU提供计算的数据源，并保存计算结果。<br>2、但硬盘速度太慢，而CPU的处理速度很快，对于CPU而言硬盘读写数据时间消耗过大。<br>3、将一部分数据先读到内存，CPU只和内存进行通信，以解决CPU和硬盘速度的冲突。<br>4、举例：<br>&amp;emsp;&amp;emsp;当对一个很大的word文档进行操作时，刚打开时会很慢（内存从硬盘读取数据），打开后进行处理时反应很快（CPU和内存进行交互），保存时又会很慢（内存将数据存入硬盘）。</p><h2 id="（二）变量"><a href="#（二）变量" class="headerlink" title="（二）变量"></a>（二）变量</h2><h3 id="1、什么是变量"><a href="#1、什么是变量" class="headerlink" title="1、什么是变量"></a>1、什么是变量</h3><p>&amp;emsp;&amp;emsp;内存是一个仓库，变量就是仓库中<strong>存放程序运行数据的容器</strong>。</p><div align=center><img src="https://img-blog.csdnimg.cn/61aefc3170814ad08463dbfa78a68ad3.png?" width = 65%></div><center><font color="#dd0000">变量名=货物编号</font></center><center><font color="#dd0000">变量值=货物</font></center><center><font color="#dd0000">内存地址=一个个货架</font></center>举例：&emsp;&emsp;变量名是衣服的编号，可以叫A区、B区，变量值就是衣服本身，通过货物编号（变量名）可以调用衣服（变量值），衣服的物理位置在具体某个货架（内存地址）上。<h3 id="2、变量的使用规则"><a href="#2、变量的使用规则" class="headerlink" title="2、变量的使用规则"></a>2、变量的使用规则</h3><p>&amp;emsp;&amp;emsp;先定义，在调用</p><h3 id="3、变量的命名规则"><a href="#3、变量的命名规则" class="headerlink" title="3、变量的命名规则"></a>3、<font color="#dd0000">变量的命名规则</font></h3><p>（1）在程序全局都会用到的变量，尽量定义在文件开头。<br>（2）变量名<strong>只能是字母、数字、下划线的组合，且不能以数字开头</strong>，其它形式均不合法。<br>（3）Python占用的关键字不建议声明为变量[‘and’,’as’,’assert’,’break’,’class’,’continue’,’def’,’del’,’elif’,’except’,’exec’,’finally’,’for’,’form’,’gloabl’,’if’,’import’,’in’,’is’,’lambda’,’not’,’or’,’pass’,’print’,’raise’,’return’,’try’,’while’,’with’,’yield’]</p><h3 id="4、常用变量名定义规范"><a href="#4、常用变量名定义规范" class="headerlink" title="4、常用变量名定义规范"></a>4、常用变量名定义规范</h3><p>（1）驼峰体(c,c#):每个单词首字母大写</p><pre class="language-python" data-language="python"><code class="language-python">AgeOfOldBoy<span class="token operator">=</span> <span class="token number">56</span>NumberOfStudents <span class="token operator">=</span> <span class="token number">80</span></code></pre><p>（2）<br><font color="#dd0000">下划线(Python):每个单词下划线隔开</font></p><pre class="language-python" data-language="python"><code class="language-python">age_of_old_boy<span class="token operator">=</span> <span class="token number">56</span>number_of_students <span class="token operator">=</span> <span class="token number">80</span></code></pre><p>（3）<font color="#dd0000">定义变量不好的方式</font><br>a. 用拼音、中文做变量名<br>b. 变量名过长<br>c. 不能让人通过名字就看出来什么意思<br>d. 首字母大写，是用来定义类名的</p><h3 id="5、变量的修改和删除"><a href="#5、变量的修改和删除" class="headerlink" title="5、变量的修改和删除"></a>5、变量的修改和删除</h3><p>修改：重新赋值，<font color="#dd0000">将货物编号（变量名）揭下来，贴到新的货物（变量）上。原来的货物（变量）还在仓库（内存）中，只是不能根据原来的货物编号（变量名）找到它。Python解释器对定期对没有货物编号（变量名）的货物（变量）进行删除</font><br>删除：del+空格+变量名，<font color="#dd0000">将货物编号（变量名）删除，原来的货物（变量）还在仓库（内存）中，只是不能根据原来的货物编号（变量名）找到它。Python解释器对定期对没有货物编号（变量名）的货物（变量）进行删除</font><br>※</p><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token string">'GengTianBa'</span>name_new <span class="token operator">=</span> namename <span class="token operator">=</span> <span class="token string">'Gengyu'</span><span class="token keyword">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>name_new<span class="token punctuation">)</span>输出：<span class="token string">'GengTianBa'</span><span class="token string">'Gengyu'</span></code></pre><p>name_new &#x3D; name:<font color="#dd0000">将新货物编号（name_new）指向原来货物编号（name）下的货物（’GengTianBa’），而不是指向原来的货物编号（name）。</font></p><h1 id="四、数据类型初始"><a href="#四、数据类型初始" class="headerlink" title="四、数据类型初始"></a>四、数据类型初始</h1><p>目前学习：整型、浮点、字符串、布尔、列表<br>往后学习：元组、字典、集合<br>使用type()查看</p><h2 id="（一）整型（int）"><a href="#（一）整型（int）" class="headerlink" title="（一）整型（int）"></a>（一）整型（int）</h2><p>&amp;emsp;&amp;emsp;就是整数</p><h2 id="（二）浮点型（float）"><a href="#（二）浮点型（float）" class="headerlink" title="（二）浮点型（float）"></a>（二）浮点型（float）</h2><p>&amp;emsp;&amp;emsp;就是小数</p><h2 id="（三）字符串（str）"><a href="#（三）字符串（str）" class="headerlink" title="（三）字符串（str）"></a>（三）<font color="#dd0000">字符串（str）</font></h2><p>1、字符串的定义<br>&amp;emsp;&amp;emsp;Python中加了引号的都会被认为是字符串<br>（1）单引号和双引号没有任何区别，只考虑单双引号的配合使用</p><pre class="language-python" data-language="python"><code class="language-python">msg <span class="token operator">=</span> <span class="token string">"my name is GY, I'm 25 years old"</span></code></pre><p>（2）多行字符串必须用多引号<br>2、<font color="#dd0000">字符串的方法</font><br>输入<code>str.＋table健</code>进行查看</p><div align=center><img src="https://img-blog.csdnimg.cn/988cac4caf72489eb738f82e429801e0.png" width = 80%></div>3、字符串拼接&emsp;&emsp;数字可以进行加减乘除运算，字符串只能进行“相加”和“相乘”。其中相加是字符串和字符串进行，相乘是字符串和数字进行。<h2 id="（四）布尔（bool）"><a href="#（四）布尔（bool）" class="headerlink" title="（四）布尔（bool）"></a>（四）布尔（bool）</h2><p>&amp;emsp;&amp;emsp;就两个值，一个True（真），一个False（假），主要用作逻辑判断。</p><h2 id="（五）列表（list）"><a href="#（五）列表（list）" class="headerlink" title="（五）列表（list）"></a>（五）列表（list）</h2><p>&amp;emsp;&amp;emsp;如果要把全班的人名在内存里存下来很简单，但不方便取（字符串切割，很麻烦），此时比较适合用列表。<br>列表通过索引标记元素位置。</p><pre class="language-python" data-language="python"><code class="language-python">names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Alex"</span><span class="token punctuation">,</span> <span class="token string">"Jack"</span><span class="token punctuation">,</span> <span class="token string">"Rain"</span><span class="token punctuation">,</span> <span class="token string">"Rachel"</span><span class="token punctuation">,</span> <span class="token string">"Mack"</span><span class="token punctuation">]</span>names<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></code></pre><div align=center><img src="https://img-blog.csdnimg.cn/1691d6a1b580403c9ae61ae2b39a94e7.png" width = 100%></div>1、列表增加元素（1） insert():插入到任意位置<div align=center><img src="https://img-blog.csdnimg.cn/02dc9403f1b94815a1c4fa4a50faa5a0.png" width = 80%></div><p>（2）append():追加到列表尾部</p><div align=center><img src="https://img-blog.csdnimg.cn/a75589abc7e04a7f8abf96f297046564.png" width = 80%></div><p>2、列表元素的删除<br>（1） pop():删除任意位置元素</p><div align=center><img src="https://img-blog.csdnimg.cn/e0df74ed2fb547a4880b88a5ba991bd7.png" width = 80%></div><p>（2） remove():根据元素值删除（只删除第一个）</p><div align=center><img src="https://img-blog.csdnimg.cn/e8d8814d7d4f4651ba433806fd41e596.png" width = 80%></div><p>※del方法可以删除变量、列表元素、列表、字符串等所有东西。</p><p>3、列表元素的修改<br>根据下标找到元素重新赋值即可</p><div align=center><img src="https://img-blog.csdnimg.cn/ffd78f833a5c46ae864b755d16bf6016.png" width = 80%></div><p>4、判断列表中是否有某个元素</p><div align=center><img src="https://img-blog.csdnimg.cn/c96919d2d53e4e6ab44d9524d917bfc6.png" width = 80%></div><p>※先学习列表中的简单知识进行了解，后续在深入学习。</p><h1 id="五、运算符"><a href="#五、运算符" class="headerlink" title="五、运算符"></a>五、运算符</h1><p>目前学习：算数运算、比较运算、逻辑运算、赋值运算和成员运算<br>往后学习：算法运算和位运算</p><h2 id="（一）算数运算符"><a href="#（一）算数运算符" class="headerlink" title="（一）算数运算符"></a>（一）算数运算符</h2><p>以下假设变量：<strong>a&#x3D;10, b&#x3D;20</strong></p><div align=center><img src="https://img-blog.csdnimg.cn/475761c9066142c3bece7e0d11f7c235.png" width = 80%></div><h2 id="（二）比较运算符"><a href="#（二）比较运算符" class="headerlink" title="（二）比较运算符"></a>（二）比较运算符</h2><p>以下假设变量：<strong>a&#x3D;10, b&#x3D;20</strong></p><div align=center><img src="https://img-blog.csdnimg.cn/4ef9b3c2447043be9bc3e8d8e4cd3d6c.png" width = 80%></div>※<>在Python2中可以使用，Python3不支持。<h2 id="（三）赋值运算"><a href="#（三）赋值运算" class="headerlink" title="（三）赋值运算"></a>（三）赋值运算</h2><p>以下假设变量：<strong>a&#x3D;10, b&#x3D;20</strong></p><div align=center><img src="https://img-blog.csdnimg.cn/73f1fd9725e240e7b890748d59b22f4f.png" width = 80%></div><h2 id="（四）逻辑运算"><a href="#（四）逻辑运算" class="headerlink" title="（四）逻辑运算"></a>（四）逻辑运算</h2><p>以下假设变量：<strong>a&#x3D;10, b&#x3D;20</strong></p><div align=center><img src="https://img-blog.csdnimg.cn/4561d7d7270141bc91a6915767d8f720.png" width = 80%></div>※<font color="#dd0000">出现多个逻辑运算时，加上括号加强代码可读性</font><h2 id="（五）逻辑运算"><a href="#（五）逻辑运算" class="headerlink" title="（五）逻辑运算"></a>（五）逻辑运算</h2><div align=center><img src="https://img-blog.csdnimg.cn/be915ecf202643a2a60d2b49133824ef.png" width = 80%></div>※<font color="#dd0000">可以用来测试字符串、列表、元组、字典和集合，<strong>但不能测试数字类型</strong></font><h1 id="六、代码编辑器"><a href="#六、代码编辑器" class="headerlink" title="六、代码编辑器"></a>六、代码编辑器</h1><h2 id="（一）、安装Pycharm"><a href="#（一）、安装Pycharm" class="headerlink" title="（一）、安装Pycharm"></a>（一）、安装Pycharm</h2><p><a href="https://www.jetbrains.com/pycharm/download">https://www.jetbrains.com/pycharm/download</a></p><h2 id="（二）、创建项目"><a href="#（二）、创建项目" class="headerlink" title="（二）、创建项目"></a>（二）、创建项目</h2><div align=center><img src="https://img-blog.csdnimg.cn/bed3698df8984491b1c517405c97d5c7.png" width = 70%></div><h2 id="（三）、运行代码"><a href="#（三）、运行代码" class="headerlink" title="（三）、运行代码"></a>（三）、运行代码</h2><div align=center><img src="https://img-blog.csdnimg.cn/9250785ae9f64e56a8ae951553d3dda0.png" width = 70%></div><h2 id="（四）、命令终端"><a href="#（四）、命令终端" class="headerlink" title="（四）、命令终端"></a>（四）、命令终端</h2><div align=center><img src="https://img-blog.csdnimg.cn/2b5bc858b9ec47839837cf59788f2a3a.png" width = 70%></div><h2 id="（五）、代码调试"><a href="#（五）、代码调试" class="headerlink" title="（五）、代码调试"></a>（五）、代码调试</h2><div align=center><img src="https://img-blog.csdnimg.cn/ecd31ab243aa47d78eaba557ee6ab8ea.png" width = 70%></div><h2 id="（六）、一些快捷键"><a href="#（六）、一些快捷键" class="headerlink" title="（六）、一些快捷键"></a>（六）、一些快捷键</h2><p>1、ctrl+d 直接复制粘贴一行<br>2、ctrl+？选中要注释的多行代码，进行多行注释</p><h1 id="七、小练习"><a href="#七、小练习" class="headerlink" title="七、小练习"></a>七、小练习</h1><h2 id="（一）读取用户输入"><a href="#（一）读取用户输入" class="headerlink" title="（一）读取用户输入"></a>（一）读取用户输入</h2><pre class="language-python" data-language="python"><code class="language-python">name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"please input your username: "</span><span class="token punctuation">)</span>age <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"please input your age: "</span><span class="token punctuation">)</span>job <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"please input your job: "</span><span class="token punctuation">)</span>hobby <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"please input your hobby: "</span><span class="token punctuation">)</span></code></pre><p>※ input的输出值为str</p><h2 id="（二）格式化打印"><a href="#（二）格式化打印" class="headerlink" title="（二）格式化打印"></a>（二）格式化打印</h2><p>&amp;emsp;&amp;emsp;通过以上信息打印出好看的个人信息卡</p><pre class="language-python" data-language="python"><code class="language-python">msg <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'''-----------info of </span><span class="token interpolation"><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span></span><span class="token string">---------Name: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span></span><span class="token string">Age: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>age<span class="token punctuation">&#125;</span></span><span class="token string">job: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>job<span class="token punctuation">&#125;</span></span><span class="token string">hobby: </span><span class="token interpolation"><span class="token punctuation">&#123;</span>hobby<span class="token punctuation">&#125;</span></span><span class="token string">----------------end----------------'''</span></span> <span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span></code></pre><p>※ 在字符串前加f，然后用花括号将需要打印的变量括起来</p><h2 id="（三）流程控制"><a href="#（三）流程控制" class="headerlink" title="（三）流程控制"></a>（三）流程控制</h2><h3 id="1、缩进"><a href="#1、缩进" class="headerlink" title="1、缩进"></a>1、缩进</h3><p>（1）顶级代码必须顶行写，即如果一行代码的执行不依赖于任何条件，那它不能进行任何缩进。<br>（2）同一级别的代码缩进必须一致。<br>（3）官方建议缩进用四个空格。</p><h3 id="2、单分支"><a href="#2、单分支" class="headerlink" title="2、单分支"></a>2、单分支</h3><pre class="language-python" data-language="python"><code class="language-python">salary <span class="token operator">=</span> <span class="token number">8000</span><span class="token keyword">if</span> salary <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你赚的太少了'</span><span class="token punctuation">)</span></code></pre><h3 id="3、双分支"><a href="#3、双分支" class="headerlink" title="3、双分支"></a>3、双分支</h3><pre class="language-python" data-language="python"><code class="language-python">salary <span class="token operator">=</span> <span class="token number">12000</span><span class="token keyword">if</span> salary <span class="token operator">&lt;</span> <span class="token number">10000</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你赚的太少了'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'你的工资还可以'</span><span class="token punctuation">)</span></code></pre><h3 id="4、多分支"><a href="#4、多分支" class="headerlink" title="4、多分支"></a>4、多分支</h3><pre class="language-python" data-language="python"><code class="language-python">true_age <span class="token operator">=</span> <span class="token number">48</span>guess_age <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please guess a number: '</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> guess_age <span class="token operator">></span> true_age<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'猜的太大了'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> guess_age <span class="token operator">&lt;</span> true_age<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'猜的太小了'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'恭喜你，猜对了'</span><span class="token punctuation">)</span></code></pre><h2 id="（四）作业"><a href="#（四）作业" class="headerlink" title="（四）作业"></a>（四）作业</h2><div align=center><img src="https://img-blog.csdnimg.cn/b3f1383e1997474f96536ce94db4192f.png" width = 70%></div><pre class="language-python" data-language="python"><code class="language-python">score <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"please input your score: "</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">if</span> score <span class="token operator">></span> <span class="token number">89</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> score <span class="token operator">></span> <span class="token number">79</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'B'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> score <span class="token operator">></span> <span class="token number">59</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'C'</span><span class="token punctuation">)</span><span class="token keyword">elif</span> score <span class="token operator">></span> <span class="token number">39</span> <span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'D'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'E'</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>1 HTML</title>
      <link href="/2022/03/07/web%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/03/07/web%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="黑马pink老师前端学习路线"><a href="#黑马pink老师前端学习路线" class="headerlink" title="黑马pink老师前端学习路线"></a>黑马pink老师前端学习路线</h1><p><img src="https://img-blog.csdnimg.cn/20210604162042916.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NjQwMjYy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id=""><a href="#" class="headerlink" title=""></a></h1><span id="more"></span><h1 id="一、HTML简介"><a href="#一、HTML简介" class="headerlink" title="一、HTML简介"></a>一、HTML简介</h1><h2 id="（一）基本概念"><a href="#（一）基本概念" class="headerlink" title="（一）基本概念"></a>（一）基本概念</h2><h3 id="1、网站"><a href="#1、网站" class="headerlink" title="1、网站"></a>1、网站</h3><p>&amp;emsp;&amp;emsp;是指因特尔网上根据一定规则，使用HTML等制作的用于展示特定内容相关的<strong>网页集合</strong>。</p><h3 id="2、网页"><a href="#2、网页" class="headerlink" title="2、网页"></a>2、网页</h3><p>&amp;emsp;&amp;emsp;是网站中的一页，通常是HTML格式的文件，它要通过浏览器来阅读。</p><h3 id="3、HTML"><a href="#3、HTML" class="headerlink" title="3、HTML"></a>3、<font color="#dd0000">HTML</font></h3><p>&amp;emsp;&amp;emsp;<strong>超文本标记语言（Hyper Text Markup Language）</strong>，它是用来描述网页的一种语言。HTML不是编程语言，而是一种<strong>标记语言（markup language）</strong>。即一套标记标签（markup tag）。</p><h3 id="4、超文本含义"><a href="#4、超文本含义" class="headerlink" title="4、超文本含义"></a>4、超文本含义</h3><p>（1）它可以加入图片、声音、动画、多媒体等内容，<strong>超越了文本的限制</strong>。<br>（2）它可以从一个文件跳转到另一个文件，与世界各地主机的文件链接，<strong>超级链接文本</strong>。</p><h2 id="（二）浏览器"><a href="#（二）浏览器" class="headerlink" title="（二）浏览器"></a>（二）浏览器</h2><p>&amp;emsp;&amp;emsp;网页是通过浏览器来展示的，关于浏览器我们需要掌握以下两点。</p><h3 id="1、常用的浏览器"><a href="#1、常用的浏览器" class="headerlink" title="1、常用的浏览器"></a>1、常用的浏览器</h3><p>&amp;emsp;&amp;emsp;<strong>浏览器</strong>是网页显示和运行的平台，常用的浏览器包括<strong>IE</strong>、<strong>火狐（Firefox）</strong>、<strong>谷歌（Chrome）</strong>、<strong>苹果（Safari）</strong>和<strong>Opera</strong>等。称为五大浏览器。<br>谷歌浏览器市场占有率最高</p><h3 id="2、浏览器内核"><a href="#2、浏览器内核" class="headerlink" title="2、浏览器内核"></a>2、浏览器内核</h3><p>&amp;emsp;&amp;emsp;浏览器内核（<strong>渲染引擎</strong>）：复制读取网页内容，整理讯息，计算网页的显示方式并显示网页。<br><img src="https://img-blog.csdnimg.cn/20210604171911440.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NjQwMjYy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="（三）Web标准"><a href="#（三）Web标准" class="headerlink" title="（三）Web标准"></a>（三）Web标准</h2><h3 id="1、概念"><a href="#1、概念" class="headerlink" title="1、概念"></a>1、概念</h3><p>&amp;emsp;&amp;emsp;Web标准是由W3C（万维网联盟）组织和其它标椎化组织制定的一系列标准的集合。</p><h3 id="2、遵循Web标准的优点"><a href="#2、遵循Web标准的优点" class="headerlink" title="2、遵循Web标准的优点"></a>2、遵循Web标准的优点</h3><p>&amp;emsp;&amp;emsp;浏览器不同，它们显示页面和排版稍有区别<br>遵循Web标准有以下优点<br>（1）让Web的发展前景更广阔。<br>（2）内容能被更广阔的设备访问。<br>（3）更容易被搜索引擎搜索。<br>（4）降低网站流量费用。<br>（5）使网站更易于维护。<br>（6）提高网页浏览速度。</p><h3 id="3、web标准的构成"><a href="#3、web标准的构成" class="headerlink" title="3、web标准的构成"></a>3、<font color="#dd0000">web标准的构成</font></h3><p><img src="https://img-blog.csdnimg.cn/20210604174144904.png"><br>&amp;emsp;&amp;emsp;Web 标准提出的最佳方案：<strong>结构、表现、行为分离</strong>。结构写到HTML文件中、表现写到CSS文件中、行为写到JavaScript中。<br><img src="https://img-blog.csdnimg.cn/20210604174611968.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NjQwMjYy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="（四）HTML语法规范"><a href="#（四）HTML语法规范" class="headerlink" title="（四）HTML语法规范"></a>（四）<font color="#dd0000">HTML语法规范</font></h2><p>&amp;emsp;&amp;emsp;1、所有标签由<strong>尖括号</strong>加<strong>关键词</strong>组成，如<code>&lt;html &gt;</code>。<br>&amp;emsp;&amp;emsp;2、大部分情况下标签成对出现。如<code>&lt;html&gt;&lt;/html&gt;</code>,其中<code>&lt;html&gt;</code>为开始标签，<code>&lt;/html&gt;</code>为结束标签，多一个<code>/</code>。双标签关系分为<strong>包含关系</strong>和<strong>并列关系</strong>。<br><img src="https://img-blog.csdnimg.cn/20210605093707770.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NjQwMjYy,size_16,color_FFFFFF,t_70" alt="包含关系和并列关系"></p><h2 id="（五）HTML基本结构标签"><a href="#（五）HTML基本结构标签" class="headerlink" title="（五）HTML基本结构标签"></a>（五）<font color="#dd0000">HTML基本结构标签</font></h2><p><img src="https://img-blog.csdnimg.cn/20210605094456108.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NjQwMjYy,size_16,color_FFFFFF,t_70" alt="基本结构标签"><br><img src="https://img-blog.csdnimg.cn/20210605094606933.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NjQwMjYy,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h2 id="（六）开发工具"><a href="#（六）开发工具" class="headerlink" title="（六）开发工具"></a>（六）开发工具</h2><p>&amp;emsp;&amp;emsp;使用记事本写.html文件有诸多不便，使用VSCode进行.html的编写。<br>&amp;emsp;&amp;emsp;VSCode中安转以下插件，<strong>输入英文感叹号</strong>出现HTML基本结构，编辑title和body后，右键选择Open in Default Browser 打开网页。<br><img src="https://img-blog.csdnimg.cn/20210605104736885.png" alt="中文插件"></p><p><img src="https://img-blog.csdnimg.cn/20210605104753697.png" alt="用浏览器打开VSCode插件"></p><h1 id="二、HTML常用标签"><a href="#二、HTML常用标签" class="headerlink" title="二、HTML常用标签"></a>二、<font color="#dd0000">HTML常用标签</font></h1><h2 id="（一）语义标签"><a href="#（一）语义标签" class="headerlink" title="（一）语义标签"></a>（一）语义标签</h2><p>&amp;emsp;&amp;emsp;标签的含义，用来干嘛的。根据标签的语义，在合适的地方给一个合理的标签，能让页面的结构更清晰。<br><img src="https://img-blog.csdnimg.cn/20210607161008669.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NjQwMjYy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="（二）标题标签"><a href="#（二）标题标签" class="headerlink" title="（二）标题标签"></a>（二）标题标签</h2><p>&amp;emsp;&amp;emsp;<code>&lt;h1&gt;-&lt;h6&gt;</code>，表示一级-六级标签，重要性递减。h为head的缩写，是<strong>双标签</strong>如：<code>&lt;h1&gt;  &lt;/h1&gt;</code>。加了标题的文字会加粗，字号也会变大，并且独占一行。</p><h3 id="1、基础语法"><a href="#1、基础语法" class="headerlink" title="1、基础语法"></a>1、基础语法</h3><pre class="language-none"><code class="language-none">&lt;h1&gt;我是一级标题&lt;&#x2F;h1&gt;&lt;h2&gt;我是二级标题&lt;&#x2F;h2&gt;</code></pre><h3 id="2、练习"><a href="#2、练习" class="headerlink" title="2、练习"></a>2、练习</h3><p><img src="https://img-blog.csdnimg.cn/20210607162414928.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NjQwMjYy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210607162435446.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NjQwMjYy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="（三）段落和换行标签"><a href="#（三）段落和换行标签" class="headerlink" title="（三）段落和换行标签"></a>（三）<font color="#dd0000">段落和换行标签</font></h2><h3 id="1、段落标签"><a href="#1、段落标签" class="headerlink" title="1、段落标签"></a>1、段落标签</h3><p>&amp;emsp;&amp;emsp;把文字分为不同的段落，p为paragraph 段落缩写。文本在一个段落中，会根据浏览器的大小自动换行，<strong>段落和段落之间保有空隙</strong>。<br>（1）基础语法</p><pre class="language-none"><code class="language-none">&lt;p&gt;我是一个段落标签&lt;&#x2F;p&gt;</code></pre><p>（2）示例<br><img src="https://img-blog.csdnimg.cn/20210607164257591.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NjQwMjYy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210607164309955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NjQwMjYy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="2、换行标签"><a href="#2、换行标签" class="headerlink" title="2、换行标签"></a>2、换行标签</h3><p>&amp;emsp;&amp;emsp;强制换行，br为break 换行缩写。 <code>&lt;br /&gt;</code>是一个单标签，<code>&lt;br /&gt;</code>和<code>&lt;p&gt;</code>的区别，段落标签不同段落间有间距，换行标签没有间距只是换行。<br>（1）基础语法</p><pre class="language-none"><code class="language-none">我是&lt;br &#x2F;&gt;一个换行标签</code></pre><h3 id="3、示例"><a href="#3、示例" class="headerlink" title="3、示例"></a>3、示例</h3><p><img src="https://img-blog.csdnimg.cn/20210609150648796.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NjQwMjYy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2021060915072253.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NjQwMjYy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="（四）文本格式标签"><a href="#（四）文本格式标签" class="headerlink" title="（四）文本格式标签"></a>（四）文本格式标签</h2><p>&amp;emsp;&amp;emsp;突出重要性，在网页中为文字添加粗体、斜体或下划线等效果，使文字以特殊方式显示。</p><h3 id="1、基础语法-1"><a href="#1、基础语法-1" class="headerlink" title="1、基础语法"></a>1、基础语法</h3><p><img src="https://img-blog.csdnimg.cn/20210607172308823.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NjQwMjYy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="2、示例"><a href="#2、示例" class="headerlink" title="2、示例"></a>2、示例</h3><p><img src="https://img-blog.csdnimg.cn/20210609150526972.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NjQwMjYy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210609150606976.png" alt="在这里插入图片描述"></p><h2 id="（五）div和span标签"><a href="#（五）div和span标签" class="headerlink" title="（五）div和span标签"></a>（五）div和span标签</h2><p>&amp;emsp;&amp;emsp;就是盒子用来装内容，div是division的缩写，表示分割、分区；span意为跨度、跨距。<code>&lt;div&gt;</code>标签用来布局，但<strong>一行只能放一个</strong><code>&lt;div&gt;</code>（大盒子）。<code>&lt;span&gt;</code>标签用来布局，但**一行可以放多个<code>&lt;span&gt;</code>**（小盒子）。</p><h3 id="1、基础语法-2"><a href="#1、基础语法-2" class="headerlink" title="1、基础语法"></a>1、基础语法</h3><pre class="language-none"><code class="language-none">&lt;div&gt;我是一个div标签，我一个人单独占一行&lt;&#x2F;div&gt;    &lt;span&gt;百度&lt;&#x2F;span&gt;    &lt;span&gt;新浪&lt;&#x2F;span&gt;    &lt;span&gt;搜狐&lt;&#x2F;span&gt;</code></pre><h3 id="2、示例-1"><a href="#2、示例-1" class="headerlink" title="2、示例"></a>2、示例</h3><p><img src="https://img-blog.csdnimg.cn/20210609152409401.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NjQwMjYy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210609152605370.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L20wXzQ2NjQwMjYy,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="（六）图像标签"><a href="#（六）图像标签" class="headerlink" title="（六）图像标签"></a>（六）<font color="#dd0000">图像标签</font></h2><h3 id="1、基础语法-3"><a href="#1、基础语法-3" class="headerlink" title="1、基础语法"></a>1、基础语法</h3><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--单标签img（image） --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>图像URL<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  </code></pre><h3 id="2、标签属性"><a href="#2、标签属性" class="headerlink" title="2、标签属性"></a>2、标签属性</h3><p><img src="https://img-blog.csdnimg.cn/8c8862a958ca41c18951b4f34b37426f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6IC_5aSp6Zy4,size_20,color_FFFFFF,t_70,g_se,x_16"></p><p>（1）图像标签可以有多个属性，但必须写在标签名img后面。<br>（2）属性之间不分先后顺序，标签名和属性、属性和属性之间用<font color="#dd0000">空格</font>隔开。<br>（3）属性值采取键值对的格式，及key&#x3D;”value”（属性 &#x3D; “属性值”）</p><h3 id="3、示例-1"><a href="#3、示例-1" class="headerlink" title="3、示例"></a>3、示例</h3><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>图像标签的使用：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img.JPG<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>alt：替换文本，当图像加载不出来时，提示用户图片信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img1.JPG<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>这是我的桌面</span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>title：提示文本，当鼠标放在图片上时，出现的图片信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img.JPG<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>这是我的桌面<span class="token punctuation">"</span></span>  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>桌面照片<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>width:给图像设置宽度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img.JPG<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>这是我的桌面<span class="token punctuation">"</span></span>  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>桌面照片<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>height:给图像设置高度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img.JPG<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>这是我的桌面<span class="token punctuation">"</span></span>  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>桌面照片<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>100 <span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>border:给图像设置边框<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img.JPG<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>这是我的桌面<span class="token punctuation">"</span></span>  <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>桌面照片<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>15<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h3 id="4、绝对路径和相对路径"><a href="#4、绝对路径和相对路径" class="headerlink" title="4、绝对路径和相对路径"></a>4、<font color="#dd0000">绝对路径和相对路径</font></h3><p>（1）目录文件夹和根目录<br>&amp;emsp;&amp;emsp;目录文件夹就是指普通的文件夹，打开目录文件夹的第一层就是根目录。<br>（2）<font color="#dd0000">绝对路径</font><br>&amp;emsp;&amp;emsp;指目录下的绝对位置，通常指<strong>从盘符开始的路径或完整的网络路径</strong>（”D:\web\img”或”<a href="http://www.&quot;)./">http://www.&quot;)。</a><br>（3）<font color="#dd0000">相对路径</font><br>&amp;emsp;&amp;emsp;以引用文件所在位置为参考，建立出的目录路径，简单来说就是<strong>图片相对于HTML文件的位置</strong>。<br><img src="https://img-blog.csdnimg.cn/896c674fa9ad412aa06b01c3fc476875.png" alt="在这里插入图片描述"></p><h2 id="（七）超链接标签"><a href="#（七）超链接标签" class="headerlink" title="（七）超链接标签"></a>（七）超链接标签</h2><p>&amp;emsp;&amp;emsp;用于定义超连接，作用是从一个页面链接到另一个页面。</p><h3 id="1、基础语法-4"><a href="#1、基础语法-4" class="headerlink" title="1、基础语法"></a>1、基础语法</h3><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token comment">&lt;!--双标签&lt;a>（anchor） --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>跳转目标<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>文字或图像<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><h3 id="2、标签属性-1"><a href="#2、标签属性-1" class="headerlink" title="2、标签属性"></a>2、标签属性</h3><p><img src="https://img-blog.csdnimg.cn/231ced72cfbf4eb5980921c1d31bf960.png" alt="在这里插入图片描述"></p><h3 id="3、超链接类型"><a href="#3、超链接类型" class="headerlink" title="3、超链接类型"></a>3、超链接类型</h3><p>（1）外部链接：必须以http:&#x2F;&#x2F;开头<br>（2）内部链接：网站内部页面之间的相互链接，直接链接内部网站的名称即可。<br>（3）空连接：<code>&lt;a href=&quot;#&quot;&gt;&lt;/a&gt;</code>用于站位。<br>（4）下载链接：herf里面地址是一个文件（.exe）或者压缩包(.zip)，会下载这个文件。<br>（5）网页元素链接：在网页中的各种网页元素，如文本、图像、表格、音频、视频都可以添加超链接。<br>（6）锚点链接：当点击锚点链接，可以快速的定位到页面中的某个位置。在链接文本中的href属性中，设置属性值为#名字的形式，如<code>&lt;a herf=&quot;#two&quot;&gt;</code>第2集<code>&lt;/a&gt;</code>。找到目标位置标签，里面添加一个id属性，如<code>&lt;h3 id=&quot;two&quot;&gt;</code>第2集介绍<code>&lt;/h3&gt;</code></p><h3 id="4、示例"><a href="#4、示例" class="headerlink" title="4、示例"></a>4、示例</h3><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>1.外部链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>百度<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://itcast.cn<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>传智播客<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>2.内部链接：网站内部各个网页之间的相互链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gongsijianjie.html<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>公司简介<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>3.空链接：没有确定链接目标<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>公司地址<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>4.下载链接：当链接目标为文件（.exe）或者压缩包(.zip)时，直接对其进行下载<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img.zip<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>下载链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>5.网页元素链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.qq.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img.JPG<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="（八）表格标签"><a href="#（八）表格标签" class="headerlink" title="（八）表格标签"></a>（八）<font color="#dd0000">表格标签</font></h2><p>&amp;emsp;&amp;emsp;<strong>用于显示和展示数据</strong>，因为它可以提高数据可读性（表格不是用来布局页面的而是用来展示数据的）。</p><h3 id="1、基础语法-5"><a href="#1、基础语法-5" class="headerlink" title="1、基础语法"></a>1、基础语法</h3><p>（1）表格标签<br><code>&lt;table&gt;&lt;/table&gt;</code>用于定义<strong>表格标签</strong>。<br>（2）表格结构标签<br>表格可能很长，为了更好的表示表格语义，可以将表格划分成表格头部和表格主体两大部分。<br>（3）表头标签<br><code>&lt;th&gt;&lt;/th&gt;</code>(table head);表头单元格位于表格的第一行或者第一列，表头单元格里面的文本内容会<strong>加粗并居住</strong>。<br>（4）行标签<br><code>&lt;tr&gt;&lt;/tr&gt;</code>用于定义表格中的<strong>行</strong>，必须嵌套在<code>&lt;table&gt;&lt;/table&gt;</code>标签中。<br>（5）单元格标签<br><code>&lt;td&gt;&lt;/td&gt;</code>(table data)用于定义表格中的<strong>单元格</strong>，必须嵌套在<code>&lt;tr&gt;&lt;/tr&gt;</code>标签中。</p><h3 id="2、标签属性-2"><a href="#2、标签属性-2" class="headerlink" title="2、标签属性"></a>2、标签属性</h3><p>&amp;emsp;&amp;emsp;表格属性开发中不常用，后面通过CSS来设置（目的：记住这些英语单词后面CSS会用）。<br><img src="https://img-blog.csdnimg.cn/4b6f0feeac99428590b600c16ff001ab.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6IC_5aSp6Zy4,size_20,color_FFFFFF,t_70,g_se,x_16"></p><h3 id="3、表格合并"><a href="#3、表格合并" class="headerlink" title="3、表格合并"></a>3、表格合并</h3><p>单元格合并三部曲<br>（1）确定跨行（rowspan）还是跨列（colspan）。<br>（2）找到目标单元（跨行指上方单元格，跨列指左侧单元格）格并确定合并单元格数量，如<td colspan="2"></td>。<br>（3）删除多余单元格</p><h3 id="4、示例-1"><a href="#4、示例-1" class="headerlink" title="4、示例"></a>4、示例</h3><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">cellpadding</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">cellspacing</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 第一行为表头标签 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>排名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>关键词<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>趋势<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>今日搜索<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>最近七日<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>相关链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>鬼吹灯<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 图像标签为向下（向上）箭头的图像 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>images/down.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>345<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>贴吧<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>图片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>百科<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>盗墓笔记<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>images/down.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>675324<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>贴吧<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>图片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>百科<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>西游记<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>images/up.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>212<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>贴吧<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>图片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>百科<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>东游记<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>images/up.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>23<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>75645<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>贴吧<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>图片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>百科<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>甄嬛传<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>images/down.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">rowspan</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>631324<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>贴吧<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>图片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>百科<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>水浒传<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>images/up.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>6724<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>贴吧<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>图片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>百科<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>三国演义<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>images/up.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>13<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>7324<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>贴吧<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>图片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>百科<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h2 id="九-列表标签"><a href="#九-列表标签" class="headerlink" title="(九)列表标签"></a>(九)<font color="#dd0000">列表标签</font></h2><p>&amp;emsp;&amp;emsp;表格用于展示数据，列表用于<strong>布局页面</strong>，使得页面整齐有序。<br><img src="https://img-blog.csdnimg.cn/ec2f5d7ec31845a78af915730d013a0d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6IC_5aSp6Zy4,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h3 id="1、无序列表"><a href="#1、无序列表" class="headerlink" title="1、无序列表"></a>1、<font color="#dd0000">无序列表</font></h3><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>列表项1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>列表项2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre><p>（1）无序列表的各个列表项没有级别之分，是<strong>并列关系</strong>。<br>（2）<code>&lt;ul&gt;&lt;/ul&gt;</code>标签中只能嵌套<code>&lt;li&gt;&lt;/li&gt;</code>，不能放其它标签（如段落标签<code>&lt;p&gt;&lt;/p&gt;</code>）或者文字。<br>（3）<code>&lt;li&gt;&lt;/li&gt;</code>是一个容器，可以容纳所有元素。<br>（4）无序列表带有自己的样式属性，通常使用CSS进行设置。</p><h3 id="2、有序列表"><a href="#2、有序列表" class="headerlink" title="2、有序列表"></a>2、有序列表</h3><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>列表项1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>列表项2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span></code></pre><h3 id="3、自定义列表"><a href="#3、自定义列表" class="headerlink" title="3、自定义列表"></a>3、<font color="#dd0000">自定义列表</font></h3><p>&amp;emsp;&amp;emsp;常用于对术语或名词进行解释和描述，定义列表的列表项前没有任何项目符号。</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>名词1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>名词1解释1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>名词1解释2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>    ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span></code></pre><p>（1）<code>&lt;dl&gt;&lt;/dl&gt;</code>里面只能包含<code>&lt;dt&gt;&lt;/dt&gt;</code>和<code>&lt;dd&gt;&lt;/dd&gt;</code>。<br>（2）<code>&lt;dt&gt;&lt;/dt&gt;</code>和<code>&lt;dd&gt;&lt;/dd&gt;</code>没有个数限制，但通常是一个<code>&lt;dt&gt;&lt;/dt&gt;</code>对应多个<code>&lt;dd&gt;&lt;/dd&gt;</code>。<br>（3）<code>&lt;dt&gt;&lt;/dt&gt;</code>和<code>&lt;dd&gt;&lt;/dd&gt;</code>是<strong>并列关系，不是包含关系</strong>。</p><h3 id="4、总结"><a href="#4、总结" class="headerlink" title="4、总结"></a>4、总结</h3><p><img src="https://img-blog.csdnimg.cn/47f717883d3947cf8886c8c2ef38082f.png" alt="在这里插入图片描述"><br><strong>（1）学会什么时候用无序什么时候用自定义。</strong><br><strong>自定义：一个小标题加多个围绕说明</strong><br><img src="https://img-blog.csdnimg.cn/9cec6b04ce4243b2ae1af5b4874e0ee4.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6IC_5aSp6Zy4,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><strong>无序：排列整齐、没有顺序。</strong><br><img src="https://img-blog.csdnimg.cn/82ac531af11c4376a3f79f09e9c82395.png" alt="在这里插入图片描述"><br><strong>（2）学完CSS后，完成对列表的布局。</strong></p><h2 id="（九）表单标签"><a href="#（九）表单标签" class="headerlink" title="（九）表单标签"></a>（九）<font color="#dd0000">表单标签</font></h2><p>&amp;emsp;&amp;emsp;表单用于<strong>收集用户信息</strong>，由表单域、表单控件和提示信息组成。</p><h3 id="1、表单域"><a href="#1、表单域" class="headerlink" title="1、表单域"></a>1、表单域</h3><p>&amp;emsp;&amp;emsp;<strong>一个包含表单元素的区域</strong>。<code>&lt;form&gt;&lt;/form&gt;</code>标签定义表单域，以<strong>实现用户信息的收集和传递，会把范围内的表单元素信息提交给服务器</strong>。<br>(1)基础语法</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>url地址<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>提交方法<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>表单域名称<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>各种表单元素控件<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code></pre><p>（2）标签属性<br><img src="https://img-blog.csdnimg.cn/f9872812bc52491a8b4aa1ddafa33220.png" alt="在这里插入图片描述"><br>（3）实例代码</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>demo.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>基础班不用表单域提交数据，只需要写上form标签即可。掌握以下两点。<br>a、在写表单元素之前，应该有一个表单域把他们进行包含。<br>b、表单域就是<code>&lt;form&gt;&lt;/form&gt;</code></p><h3 id="2、表单控件（表单元素）"><a href="#2、表单控件（表单元素）" class="headerlink" title="2、表单控件（表单元素）"></a>2、表单控件（表单元素）</h3><p>&amp;emsp;&amp;emsp;在表单域中可以定义各种表单元素，这些表单元素就是允许用户在表单中输入或者选择的内容控件。</p><h4 id="（1）input输入表单元素"><a href="#（1）input输入表单元素" class="headerlink" title="（1）input输入表单元素"></a>（1）input输入表单元素</h4><p>&amp;emsp;&amp;emsp;用于收集用户信息<br>a、基础语法</p><pre class="language-markup" data-language="markup"><code class="language-markup">\<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>属性值<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><p>※ <code>&lt;input /&gt;</code>为单标签<br>※ type属性设置不同的属性值用来指定不同的元素类型（文本字段、复选框、掩码后的文本控件、单选按钮、按钮等）</p><p><img src="https://img-blog.csdnimg.cn/5c73ef75bcb349fda46fcf67dad0a6bc.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA6IC_5aSp6Zy4,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>b、标签属性</p><p><img src="https://img-blog.csdnimg.cn/658fd3395d2b466b93b1a435ce77645e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6IC_5aSp6Zy4,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>※name和value是每个表单元素都有的值，主要给后台人员使用。<br>※name表单元素的名字，<strong>单选按钮和复选框都要有相同的name值</strong>。<br>※checked属性主要针对<strong>单选按钮和复选框</strong>，主要作用是一打开网页，就可以默认选择某个表单元素。<br>※maxlength是用户可以在表单元素输入的最大字符数，一般较少使用（一般使用正则表达式进行限定）。<br>c、实例代码</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>input 表单元素<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- text 文本框 用户可以输入任何文字 --></span>        用户：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入用户名<span class="token punctuation">"</span></span> <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>        <span class="token comment">&lt;!-- password 密码框 用户看不见输入的密码 --></span>        密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>        <span class="token comment">&lt;!-- radio 单选按钮 可以实现多选 --></span>        <span class="token comment">&lt;!-- name 表单元素的名字 单选按钮必须有相同的name才能实现多选一 --></span>        <span class="token comment">&lt;!-- 单选按钮和复选框可以设置checked属性，一打开网页默认选中这个按钮 --></span>        性别：男 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>男<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checked<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        女 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>女<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>         <span class="token comment">&lt;!-- checkbox 复选框 可以实现多选 --></span>        爱好：吃饭 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>吃饭<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            睡觉 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>睡觉<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            打豆豆 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>打豆豆<span class="token punctuation">"</span></span> <span class="token attr-name">checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checked<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>d、lable标签<br>&amp;emsp;&amp;emsp;为<code>&lt;input /&gt;</code>元素定义标签，用于绑定一个表单元素，当点击<code>&lt;lable&gt;&lt;/lable&gt;</code>标签内的文本时，浏览器会自动将鼠标移动到对应的表单元素上，用来<strong>增强用户体验</strong>。<br>※实例代码</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>用户：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入用户名<span class="token punctuation">"</span></span> <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span></code></pre><h4 id="（2）select下拉表单元素"><a href="#（2）select下拉表单元素" class="headerlink" title="（2）select下拉表单元素"></a>（2）select下拉表单元素</h4><p>&amp;emsp;&amp;emsp;在页面中。<strong>如果有多个选项让用户选择，并且想要节约页面空间</strong>时使用<code>&lt;select&gt;&lt;/select&gt;</code>标签，定义下拉菜单。<br>a、基础语法</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>选项1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>选项2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>选项3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code></pre><p>※<code>&lt;select&gt;&lt;/select&gt;</code>中至少包含一对<code>&lt;option&gt;&lt;/option&gt;</code><br>※<code>&lt;option&gt;&lt;/option&gt;</code>中可以定义selected属性，默认选中项。<br>b、实例代码</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>select 下拉表单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>        籍贯：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">selected</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selected<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>四川<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>河南<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>陕西<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>重庆<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>江西<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="（3）textarea文本域元素"><a href="#（3）textarea文本域元素" class="headerlink" title="（3）textarea文本域元素"></a>（3）textarea文本域元素</h4><p>&amp;emsp;&amp;emsp;当用户输入内容较多时，不使用文本框表单，而是用<code>&lt;textarea&gt;&lt;/textarea&gt;</code>标签，以<strong>定义多行文本的输入</strong>。<br>a、基础语法</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>文本内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span></code></pre><p>b、标签属性<br>cols&#x3D;”每行中的字符数”<br>rows&#x3D;”显示的行数”<br><strong>实际开发中不会使用都是通过CSS来设置</strong>。<br>c、实例代码</p><pre class="language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>textarea 文本域<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>        今日反馈<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>pink老师，我知道这个留言反馈是使用textarea来做的<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>### 3、总结（1）学习了三大表单元素input输入表单元素、select下拉表单元素、textarea文本域表单元素。（2）这三组表单元素都应该包含在form表单域中，并且有name属性。```xml<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>总结<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入用户名<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>        籍贯：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>jiguan<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">selected</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selected<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>四川<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span><span class="token punctuation">></span></span>陕西<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>        个人简介：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gerenjianjie<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>（3）有三个名字特别相似的标签<br>a、表单域<code>&lt;form&gt;&lt;/form&gt;</code>提交区域内表单文件给后台服务器。<br>b、文件域file是<code>&lt;input /&gt;</code>标签属性值，用于上传文件。<br>c、文本域<code>&lt;textarea&gt;&lt;/textarea&gt;</code><br>（4）当前阶段不需要提交表单元素，只负责表单元素的外观形态。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 黑马pink老师前端视频 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络整理（三）</title>
      <link href="/2021/12/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%95%B4%E7%90%86%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2021/12/18/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%95%B4%E7%90%86%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><span id="more"></span><h1 id="一、思维导图"><a href="#一、思维导图" class="headerlink" title="一、思维导图"></a>一、思维导图</h1><blockquote class="pullquote mindmap mindmap-md"><ul><li>第三章 数据链路层<ul><li>3.1 数据链路层概述<ul><li>点对点信道的数据链路</li><li>使用广播信道的数据链路</li></ul></li><li>3.2 封装成帧<ul><li>封装成帧</li><li>透明传输</li><li>最大传输单元</li></ul></li><li>3.3 差错监测<ul><li>概念</li><li>奇偶校验</li><li>循环冗余校验CRC</li></ul></li><li>3.4 可靠传输<ul><li>概念</li><li>传输差错</li><li>实现机制<ul><li>停止-等待协议</li><li>回到N帧协议</li><li>选择重传协议</li></ul></li></ul></li><li>3.5 碰撞监测<ul><li>点对点协议</li><li>媒体接入控制<ul><li>基本概念</li><li>静态划分信道<ul><li>频分多址</li><li>时分多址</li><li>码分多址</li></ul></li><li>动态划分信道<ul><li>受控接入<ul><li>集中控制</li><li>分散控制</li></ul></li><li>随机接入</li></ul></li></ul></li></ul></li><li>3.6 编址问题<ul><li>MAC地址</li><li>IP地址</li><li>ARP协议</li></ul></li><li>3.7 以太网交换机<ul><li>集线器与交换机的区别</li><li>以太网交换机自学习和发送帧的过程</li><li>生成树协议STP</li></ul></li><li>3.8 虚拟局域网VLAN<ul><li>概念</li><li>实现</li></ul></li></ul></li></ul></blockquote><h1 id="二、重点"><a href="#二、重点" class="headerlink" title="二、重点"></a>二、重点</h1><h1 id="三、参考文献"><a href="#三、参考文献" class="headerlink" title="三、参考文献"></a>三、参考文献</h1><ol><li><a href="https://www.bilibili.com/video/BV1c4411d7jb?share_source=copy_web">b站湖科大教书匠计算机网络视频</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络整理（二）</title>
      <link href="/2021/12/16/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%95%B4%E7%90%86%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2021/12/16/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%95%B4%E7%90%86%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><span id="more"></span><h1 id="一、思维导图"><a href="#一、思维导图" class="headerlink" title="一、思维导图"></a>一、思维导图</h1><blockquote class="pullquote mindmap mindmap-md"><ul><li>第二章 物理层<ul><li>2.1 基本概念<ul><li>物理层所要解决的问题（重要）</li><li>物理层协议的主要任务（重要）<ul><li>机械特性</li><li>电气特性</li><li>功能特性</li><li>过程特性</li></ul></li></ul></li><li>2.2 传播媒体<ul><li>导引型传输媒体<ul><li>同轴电缆</li><li>双绞线（重要）</li><li>光纤（重要）</li><li>电力线</li></ul></li><li>非导引型传输媒体<ul><li>无线电波</li><li>微波（重要）</li><li>红外线</li><li>可见光</li></ul></li><li>无线电频谱管理机构<ul><li>中国</li><li>美国</li><li>ISM</li></ul></li></ul></li><li>2.3 传播方式<ul><li>串行传输和并行传输（重要）</li><li>同步传输和异步传输（重要）</li><li>单工、半双工和全双工</li></ul></li><li>2.4 编码和调整<ul><li>数据通信中的常用术语<ul><li>消息</li><li>数据</li><li>信号（基带信号）<ul><li>数字基带信号</li><li>模拟基带信号</li></ul></li></ul></li><li>编码（重要）<ul><li>将数字信号转换为另一种数字信号在数字信道中传播</li><li>将模拟信号转换为数字信号在数字信道中传播</li><li>常见的编码方式<ul><li>不归零编码</li><li>归零编码</li><li>曼彻斯特编码和差分曼彻斯特编码</li></ul></li></ul></li><li>调制（重要）<ul><li>将数字信号转化为模拟信号在模拟信道中传播</li><li>将模拟信号转化为另一模拟信号在模拟信道中传播</li><li>基本调制</li><li>混合调制</li></ul></li><li>码元（重要）</li></ul></li><li>2.5 信道的极限容量（重要）<ul><li>造成信号失真的因素<ul><li>码元传输速率</li><li>信号传输距离</li><li>噪声干扰</li><li>传播媒体质量</li></ul></li><li>奈氏准则</li><li>香农公式</li><li>奈氏准则和香农公式的作用</li></ul></li></ul></li></ul></blockquote><h1 id="二、重点"><a href="#二、重点" class="headerlink" title="二、重点"></a>二、重点</h1><h2 id="（一）物理层所要解决的问题"><a href="#（一）物理层所要解决的问题" class="headerlink" title="（一）物理层所要解决的问题"></a>（一）物理层所要解决的问题</h2><p>&amp;emsp;&amp;emsp;物理层考虑的是怎样才能在连接各种计算机的<strong>传输媒体上传输数据比特流</strong>。<br>&amp;emsp;&amp;emsp;它为数据链路层<strong>屏蔽了各种传输媒体的差异</strong>，使数据链路层只需要考虑如何完成本层协议和服务，而不必考虑网络具体的传输媒体是什么。</p><h2 id="（二）物理层协议的主要任务"><a href="#（二）物理层协议的主要任务" class="headerlink" title="（二）物理层协议的主要任务"></a>（二）物理层协议的主要任务</h2><h3 id="1、机械特性"><a href="#1、机械特性" class="headerlink" title="1、机械特性"></a>1、机械特性</h3><p>&amp;emsp;&amp;emsp;指定接口所用<strong>接线器形状和尺寸</strong>、<strong>引脚数目和排列</strong>、<strong>固定</strong>和<strong>锁定</strong>装置。</p><h3 id="2、电气特性"><a href="#2、电气特性" class="headerlink" title="2、电气特性"></a>2、电气特性</h3><p>&amp;emsp;&amp;emsp;指明在接口电缆出现的各条线上出现的<strong>电压范围</strong>。</p><h3 id="3、功能特性"><a href="#3、功能特性" class="headerlink" title="3、功能特性"></a>3、功能特性</h3><p>&amp;emsp;&amp;emsp;指定某条线上的<strong>某一电平的电压表示何种意义</strong>。</p><h3 id="4、过程特性"><a href="#4、过程特性" class="headerlink" title="4、过程特性"></a>4、过程特性</h3><p>&amp;emsp;&amp;emsp;指明对于不同功能的各种可能<strong>事件的出现顺序</strong>。</p><h2 id="（三）传播媒体"><a href="#（三）传播媒体" class="headerlink" title="（三）传播媒体"></a>（三）传播媒体</h2><h3 id="1、双绞线绞和的目的"><a href="#1、双绞线绞和的目的" class="headerlink" title="1、双绞线绞和的目的"></a>1、双绞线绞和的目的</h3><p>（1）抵御部分来自<strong>外界</strong>的<strong>电磁干扰</strong>。<br>（2）减少<strong>相邻导线</strong>的<strong>电磁干扰</strong>。</p><h3 id="2、光在光纤中传播的原理"><a href="#2、光在光纤中传播的原理" class="headerlink" title="2、光在光纤中传播的原理"></a>2、光在光纤中传播的原理</h3><p>&amp;emsp;&amp;emsp;纤芯：非常透明的石英玻璃拉成细丝（直径8~100um）。<br>&amp;emsp;&amp;emsp;包层：折射率比纤芯低的玻璃封套（直径125um）。<br>&amp;emsp;&amp;emsp;发送端：发光二极管、半导体激光器作为光源。<br>&amp;emsp;&amp;emsp;接收端：光电二极管、激光检波器检测光脉冲。<br>&amp;emsp;&amp;emsp;光纤：当光从高折射率的媒体射向低折射率的媒体时，折射角将大于入射角，因此只要入射角足够大时，就会发生全反射，即光遇到包层时就会反射回纤芯，光也就沿着光纤传输下去。<br>&amp;emsp;&amp;emsp;多模光纤：只要入射角大于某一临街角度，就可产生全反射。也就可以存在许多条不同入射角的<br>光线，在一条光纤中传输。由于色散，多模光纤存在脉冲展宽的问题，只适合近距离传输（建筑物<br>内）。<br>&amp;emsp;&amp;emsp;单模光纤：光在纤芯中一直向前传播而不发生全反射。没有脉冲展宽问题，适合长距离传输，成<br>本高、对光源要求高。</p><h2 id="（四）串行传输和并行传输"><a href="#（四）串行传输和并行传输" class="headerlink" title="（四）串行传输和并行传输"></a>（四）串行传输和并行传输</h2><p>1、串行传输<br>&amp;emsp;&amp;emsp;<strong>比特一个接一个</strong>的在<strong>一根传输线</strong>上传输，适合<strong>远距离</strong>传输，<strong>计算机网络</strong>采用这种传输。<br>2、并行传输<br>&amp;emsp;&amp;emsp;多个比特同时在多根传输线上传输，成本高。应用于计算机内部的数据传输。（例如：CPU和内存之间通过总线进行传输）</p><h2 id="（五）同步传输和异步传输"><a href="#（五）同步传输和异步传输" class="headerlink" title="（五）同步传输和异步传输"></a>（五）同步传输和异步传输</h2><p>1、同步传输<br>&amp;emsp;&amp;emsp;<strong>比特</strong>一个接一个传输，中间<strong>没有间隔</strong>，各比特<strong>持续时长相等</strong>，要保证收发双方<strong>时钟同步</strong>。主要方法有。<br>（1）外同步：在收发双发之间<strong>增加</strong>一条单独的<strong>时钟信号线</strong>。<br>（2）内同步：发送方将<strong>时钟信号编码到数据</strong>中一起发送。<br>2、异步传输<br>&amp;emsp;&amp;emsp;以<strong>字节为</strong>单位进行传输，字节间<strong>间隔不固定</strong>，但字节内每个<strong>比特持续时间相同</strong>（<strong>字节异步，比特同步</strong>）。为此需要给每个字节<strong>添加起始位和结束位</strong>，方便接收端接受。</p><h2 id="（六）编码"><a href="#（六）编码" class="headerlink" title="（六）编码"></a>（六）编码</h2><h3 id="1、概念"><a href="#1、概念" class="headerlink" title="1、概念"></a>1、概念</h3><p>（1）将数据信号转换为另一种数据信号，在数字信道上传输。<br>例如：因特网曼切斯特编码、4B&#x2F;8B、8B&#x2F;10B。<br>（2）将模拟信号转换为数字信号，在数字信道中传输。<br>例如：对音频信号进行编码的脉码调制（PCM, Pulse Code Modulation）。</p><h3 id="2、几种常见的编码"><a href="#2、几种常见的编码" class="headerlink" title="2、几种常见的编码"></a>2、几种常见的编码</h3><p>（1）不归零编码<br><img src="https://img-blog.csdnimg.cn/1133270aff6c4522a398461dc668b2ca.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6IC_5aSp6Zy4,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>（2）归零编码<br><img src="https://img-blog.csdnimg.cn/86540d0a0da14a6f8d24264b5970bbe7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6IC_5aSp6Zy4,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>（3）曼切斯特编码和差分曼切斯特编码<br><img src="https://img-blog.csdnimg.cn/bbb6d692b7914a66b68832b11e0714e6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6IC_5aSp6Zy4,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="（七）调制"><a href="#（七）调制" class="headerlink" title="（七）调制"></a>（七）调制</h2><h3 id="1、概念-1"><a href="#1、概念-1" class="headerlink" title="1、概念"></a>1、概念</h3><p>（1）将数字信号转换成模拟信号，在模拟信道中传输。<br>例如：WiFi采用补码检控、直接序列扩频、正交频分复用等技术。<br>（2）将模拟信号转换为另一种模拟信号，在模拟信道中传输。<br>例如：语音信号加载到模拟的载波信号中进行传输。</p><h3 id="2、基本调制"><a href="#2、基本调制" class="headerlink" title="2、基本调制"></a>2、基本调制</h3><p><img src="https://img-blog.csdnimg.cn/6b9eec3428b64bdcb3039887024e72fc.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6IC_5aSp6Zy4,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h3 id="3、混合调制"><a href="#3、混合调制" class="headerlink" title="3、混合调制"></a>3、混合调制</h3><p><img src="https://img-blog.csdnimg.cn/70a5a67f04fa4a949d00961585c05cf1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6IC_5aSp6Zy4,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="（八）码元"><a href="#（八）码元" class="headerlink" title="（八）码元"></a>（八）码元</h2><p>&amp;emsp;&amp;emsp;在使用时间域的波型表示数字信号时，代表<strong>不同离散数值的基本波型</strong>。</p><h2 id="（九）造成信号失真的原因"><a href="#（九）造成信号失真的原因" class="headerlink" title="（九）造成信号失真的原因"></a>（九）造成信号失真的原因</h2><p>1、码元传输速率<br>2、信号传输距离<br>3、噪声干扰<br>4、传输媒体质量</p><h2 id="（十）奈氏准则"><a href="#（十）奈氏准则" class="headerlink" title="（十）奈氏准则"></a>（十）奈氏准则</h2><p><img src="https://img-blog.csdnimg.cn/b921b0e682644480aafd76c2999924f8.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6IC_5aSp6Zy4,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="（十一）香农公式"><a href="#（十一）香农公式" class="headerlink" title="（十一）香农公式"></a>（十一）香农公式</h2><p><img src="https://img-blog.csdnimg.cn/eea23f5b1b7545139352fd8b0a7ce58e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6IC_5aSp6Zy4,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h2 id="（十二）奈氏准则和香农公式的意义"><a href="#（十二）奈氏准则和香农公式的意义" class="headerlink" title="（十二）奈氏准则和香农公式的意义"></a>（十二）奈氏准则和香农公式的意义</h2><p>1、在信道<strong>带宽一定</strong>的前提现，根据奈氏准则和香农公式，想要提高<strong>信息传输的效率</strong>，就必须采用<strong>多元制</strong>（更好的调整方法），和努力<strong>提高</strong>信道中的<strong>信噪比</strong>。<br>2、自从香农公式发表后，各种新的<strong>信号处理和调制方式</strong>就不断出现，目的就是为了接近<strong>香农公式给出的信道传输速率的极限</strong>。</p><h1 id="三、参考文献"><a href="#三、参考文献" class="headerlink" title="三、参考文献"></a>三、参考文献</h1><ol><li><a href="https://www.bilibili.com/video/BV1c4411d7jb?share_source=copy_web">b站湖科大教书匠计算机网络视频</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客搭建</title>
      <link href="/2021/12/16/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2021/12/16/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><span id="more"></span><h1 id="一、hexo本地部署和github部署"><a href="#一、hexo本地部署和github部署" class="headerlink" title="一、hexo本地部署和github部署"></a>一、hexo本地部署和github部署</h1><ul><li>过程：<br>&amp;emsp;&amp;emsp;参考<a href="https://www.bilibili.com/video/BV1Yb411a7ty?share_source=copy_web">b站程序羊</a></li><li>主要问题：windos系统 hexo d 报错<br>&amp;emsp;&amp;emsp;参考弹幕<a href="https://www.bilibili.com/video/BV1Yb411a7ty?share_source=copy_web">b站程序羊</a><blockquote><p>win10记得hexo 之前敲<br>git config –global user.email “xxx”<br>git config –global user.name “xxx”</p></blockquote></li></ul><h1 id="二、yilia主题使用"><a href="#二、yilia主题使用" class="headerlink" title="二、yilia主题使用"></a>二、yilia主题使用</h1><p>&amp;emsp;&amp;emsp;参考<a href="https://www.bilibili.com/video/BV1pt411K7o9?p=5&share_source=copy_web">b站CoolPlayer-函博</a></p><h2 id="（一）解决所有文章无法查看-配置图片"><a href="#（一）解决所有文章无法查看-配置图片" class="headerlink" title="（一）解决所有文章无法查看+配置图片"></a>（一）解决所有文章无法查看+配置图片</h2><p>&amp;emsp;&amp;emsp;参考<a href="https://blog.csdn.net/lynnbest/article/details/79845944">Hexo yilia 主题一揽子使用方案</a></p><h2 id="（二）博客文章书写"><a href="#（二）博客文章书写" class="headerlink" title="（二）博客文章书写"></a>（二）博客文章书写</h2><p>&amp;emsp;&amp;emsp;参考<a href="https://blog.csdn.net/sanallen/article/details/92081911">Markdown文档编写指南</a></p><h2 id="（三）添加背景音乐"><a href="#（三）添加背景音乐" class="headerlink" title="（三）添加背景音乐"></a>（三）添加背景音乐</h2><p>&amp;emsp;&amp;emsp;参考<a href="https://www.jianshu.com/p/f3fe5cb74d32">Hexo博客yilia主题添加背景音乐</a></p><h2 id="（四）点击小红星-看板娘"><a href="#（四）点击小红星-看板娘" class="headerlink" title="（四）点击小红星+看板娘"></a>（四）点击小红星+看板娘</h2><p>&amp;emsp;&amp;emsp;参考<a href="https://www.cnblogs.com/Friends-A/p/11054968.html">Hexo添加Live2D看板娘+模型预览</a></p><h2 id="（五）添加脑图"><a href="#（五）添加脑图" class="headerlink" title="（五）添加脑图"></a>（五）添加脑图</h2><p>&amp;emsp;&amp;emsp;参考<a href="https://hunterx.xyz/use-mindmap-in-hexo.html">在Hexo中使用思维导图</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络整理（一）</title>
      <link href="/2021/12/16/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%95%B4%E7%90%86%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2021/12/16/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E6%95%B4%E7%90%86%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><span id="more"></span><h1 id="一、思维导图"><a href="#一、思维导图" class="headerlink" title="一、思维导图"></a>一、思维导图</h1><blockquote class="pullquote mindmap mindmap-md"><ul><li>第一章 概述<ul><li>1.1 计算机网络在信息时代的作用<ul><li>信息服务基础设施</li><li>我国互联网发展现状</li></ul></li><li>1.2 因特网概述<ul><li>xxxxxxxxxx # coding&#x3D;utf-8  ##Python2不支持中文​# 导入模块import arcpyfrom arcpy.sa import <em>​# 设置工作环境arcpy.env.workspace &#x3D; “C:&#x2F;Users&#x2F;Geng&#x2F;Desktop&#x2F;test&#x2F;“​# 创建变量rasters &#x3D; arcpy.ListRasters(“</em>“, “tif”)  # 将工作空间中所有.tif栅格文件存入raster变量sum_pre &#x3D; 0  # 初始化年降雨量r_month &#x3D; []  # 创建空列表存储12各月的降雨量侵蚀因子rr_year &#x3D; 0  # 初始化年降雨量侵蚀因子​​# 计算年总降水量for raster in rasters:    print raster    sum_pre +&#x3D; Raster(raster)​# 编辑公式通过降雨量计算降雨侵蚀因子rdef calculation_r(pre_mon, pre_year):    # 该公式计算出的降雨侵蚀因子有异常值(Nodata)    r_month_with_nodata &#x3D; 17.02 * (1.735 * Power(10, (1.5 * Log10(Power(pre_mon, 2)&#x2F;pre_year) - 0.8188)))    return Con(pre_mon &#x3D;&#x3D; 0, 0, r_month_with_nodata)  # 处理异常值(将Nodata 赋值为0)​​# 根据12个月的r，计算该年的rfor raster in rasters:    r_month.append(calculation_r(Raster(raster), sum_pre))    r_year +&#x3D; r_month[-1]    # 输出每月r    r_month[-1].save(arcpy.env.workspace + “&#x2F;r_%s.tif” %raster)​​# 输出结果r_year.save(arcpy.env.workspace + “&#x2F;r_year.tif”)  # 输出年尺度rsum_pre.save(arcpy.env.workspace + “&#x2F;pre_year.tif”)  # 输出年尺度pre​python</li><li>因特网发展的三个阶段</li><li>因特网的标准化工作</li></ul></li><li>1.3 三种交换方式<ul><li>电路交换</li><li>分组交换（重要）</li><li>报文交换</li></ul></li><li>1.4 计算机网络的定义和分类<ul><li>定义<ul><li>没有精确统一的定义</li><li>最简单的定义为：互连、自治、计算机集合</li><li>不同阶段的定义不同，反映当时的网络技术发展水平</li></ul></li><li>分类（重要）<ul><li>按交换技术</li><li>按使用者</li><li>按传输介质</li><li>按覆盖范围</li><li>按拓扑结构</li></ul></li></ul></li><li>1.5 计算机网络的性能指标<ul><li>速率<ul><li>比特</li><li>速率</li></ul></li><li>带宽（重要）</li><li>吞吐量</li><li>时延（重要）<ul><li>发送时延</li><li>传播时延</li><li>处理时延</li></ul></li><li>往返时间RTT</li><li>时延带宽积</li><li>利用率（重要）</li><li>丢包率</li></ul></li><li>1.6 计算机网络的体系结构（重要）<ul><li>分层的必要性<ul><li>计算机网络是一个非常复杂的系统</li><li>“分层”可以将庞大而复杂的问题，转化为若干弱小的局部问题</li><li>以五层原理体系结构为例，说明分层的必要性</li></ul></li><li>常见的计算机网络体系结构<ul><li>osi七层体系结构</li><li>TCP&#x2F;IP四层体系结构</li><li>五层协议的原理体系结构</li></ul></li><li>分层思想举例<ul><li>通过浏览器进程与Web服务器进程的交互实例，演示分组逐层封装和解封的过程</li><li>湖科大教书匠计算机网络微课堂（p9）</li></ul></li><li>专业术语<ul><li>实体</li><li>协议</li><li>服务</li></ul></li></ul></li></ul></li></ul></blockquote><h1 id="二、重点"><a href="#二、重点" class="headerlink" title="二、重点"></a>二、重点</h1><h2 id="（一）网络、互联网、因特网的概念"><a href="#（一）网络、互联网、因特网的概念" class="headerlink" title="（一）网络、互联网、因特网的概念"></a>（一）网络、互联网、因特网的概念</h2><p>1、网络（Network）<br>&amp;emsp;&amp;emsp;由若干<font color="#dd0000">结点（Node）</font>和连接这些结点的<font color="#dd0000">链路（Link）</font>组成。<br>2、互联网（internet）<br>&amp;emsp;&amp;emsp;多个网络可以通过路由器互连起来，形成一个覆盖范围更大的网络，及互联网，因此互联网是<font color="#dd0000">网络的网络</font>。<br>3、因特网（Internet）<br>&amp;emsp;&amp;emsp;是世界上<font color="#dd0000">最大的互连网络</font>（用户数以亿计，互连的网络数以百万计）。</p><h2 id="（二）分组交换"><a href="#（二）分组交换" class="headerlink" title="（二）分组交换"></a>（二）分组交换</h2><p>&amp;emsp;&amp;emsp;将报文分成若干个<font color="#dd0000">等长的报文段</font>，然后将各数据添加首部（包含重要的控件信息），构成分组。<font color="#dd0000">节点交换机（路由器）</font>对分组进行存储转发，分组从源主机到目的主机可走不同的路径。</p><h2 id="（三）计算机网络的分类"><a href="#（三）计算机网络的分类" class="headerlink" title="（三）计算机网络的分类"></a>（三）计算机网络的分类</h2><h3 id="1、按交换技术"><a href="#1、按交换技术" class="headerlink" title="1、按交换技术"></a>1、按交换技术</h3><p>电路交换网、报文交换网、分组交换网</p><h3 id="2、按使用者"><a href="#2、按使用者" class="headerlink" title="2、按使用者"></a>2、按使用者</h3><p>公用网、专用网</p><h3 id="3、安传输介质"><a href="#3、安传输介质" class="headerlink" title="3、安传输介质"></a>3、安传输介质</h3><p>有线网、无线网</p><h3 id="4、按覆盖范围"><a href="#4、按覆盖范围" class="headerlink" title="4、按覆盖范围"></a>4、按覆盖范围</h3><p>广域网（WAN）、城域网(MAN)、局域网(LAN)、个域网(PAN)</p><h3 id="5、按拓扑结构"><a href="#5、按拓扑结构" class="headerlink" title="5、按拓扑结构"></a>5、按拓扑结构</h3><p>总线型网络、星型网络、环形网络、网状网络</p><h2 id="（四）带宽"><a href="#（四）带宽" class="headerlink" title="（四）带宽"></a>（四）带宽</h2><p>&amp;emsp;&amp;emsp;用来表示网络通信线路所能传送数据的能力，也就是<font color="#dd0000">最高数据率</font>。</p><h2 id="（五）时延"><a href="#（五）时延" class="headerlink" title="（五）时延"></a>（五）时延</h2><h3 id="1、发送时延"><a href="#1、发送时延" class="headerlink" title="1、发送时延"></a>1、发送时延</h3><p>&amp;emsp;&amp;emsp;分组长度（b）&#x2F;发送速率（b&#x2F;s）</p><h3 id="2、传播时延"><a href="#2、传播时延" class="headerlink" title="2、传播时延"></a>2、传播时延</h3><p>&amp;emsp;&amp;emsp;信道长度（m）&#x2F;电磁波传播速率（m&#x2F;s）<br>&amp;emsp;&amp;emsp;电磁波传播速率：<br>自由空间：3*$10^8$m&#x2F;s<br>铜线：2.3*$10^8$m&#x2F;s<br>光纤：2*$10^8$m&#x2F;s</p><h3 id="3、处理时延"><a href="#3、处理时延" class="headerlink" title="3、处理时延"></a>3、处理时延</h3><p>&amp;emsp;&amp;emsp;不方便计算，忽略。</p><h2 id="（六）利用率"><a href="#（六）利用率" class="headerlink" title="（六）利用率"></a>（六）利用率</h2><p><img src="https://img-blog.csdnimg.cn/fd679280fe1f465e9b524c5a373891a8.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6IC_5aSp6Zy4,size_20,color_FFFFFF,t_70,g_se,x_16"></p><h2 id="（七）分层的必要性"><a href="#（七）分层的必要性" class="headerlink" title="（七）分层的必要性"></a>（七）分层的必要性</h2><h3 id="1、概念"><a href="#1、概念" class="headerlink" title="1、概念"></a>1、概念</h3><p>&amp;emsp;&amp;emsp;计算机网络是非常复杂的系统,“分层”可以将<font color="#dd0000">庞大而复杂</font>的问题，转化成若干<font color="#dd0000">弱小的局部问题</font>。</p><h3 id="2、以五层原理体系结构为例，说明分层的必要性"><a href="#2、以五层原理体系结构为例，说明分层的必要性" class="headerlink" title="2、以五层原理体系结构为例，说明分层的必要性"></a>2、以五层原理体系结构为例，说明分层的必要性</h3><p>物理层：解决使用<font color="#dd0000">何种信号传输比特</font>的问题。<br>数据链路层：解决<font color="#dd0000">分组在一个网络（或一段链路）</font>上的传输问题。<br>网络层：解决<font color="#dd0000">分组在多个网络</font>间传输（路由）的问题。<br>运输层：解决<font color="#dd0000">进程之间基于网络的通信</font>问题。<br>应用层：解决<font color="#dd0000">应用进程间的交互来实现特定网络应用</font>的问题。</p><h2 id="（八）常见的计算机网络体系结构"><a href="#（八）常见的计算机网络体系结构" class="headerlink" title="（八）常见的计算机网络体系结构"></a>（八）常见的计算机网络体系结构</h2><h3 id="1、osi七层体系结构"><a href="#1、osi七层体系结构" class="headerlink" title="1、osi七层体系结构"></a>1、osi七层体系结构</h3><p>法律上的国际标准：物理层、数据链路层、网络层、传输层、对话层、表示层、应用层。</p><h3 id="2、TCP-x2F-IP的四层体系结构"><a href="#2、TCP-x2F-IP的四层体系结构" class="headerlink" title="2、TCP&#x2F;IP的四层体系结构"></a>2、TCP&#x2F;IP的四层体系结构</h3><p>实际上的国际标准：网络接口层、网际层、传输层、应用层。</p><h3 id="3、五层协议的原理体系结构"><a href="#3、五层协议的原理体系结构" class="headerlink" title="3、五层协议的原理体系结构"></a>3、五层协议的原理体系结构</h3><p>便于教学：物理层、数据链路层、网络层、传输层、应用层。</p><h2 id="（九）分层思想举例"><a href="#（九）分层思想举例" class="headerlink" title="（九）分层思想举例"></a>（九）分层思想举例</h2><p>&amp;emsp;&amp;emsp;通过浏览器进程与Web服务器进程的交互实例，演示分组逐层封装和解封的过程视频（P9）。</p><h2 id="（十）专用术语"><a href="#（十）专用术语" class="headerlink" title="（十）专用术语"></a>（十）专用术语</h2><h3 id="1、实体"><a href="#1、实体" class="headerlink" title="1、实体"></a>1、实体</h3><p>&amp;emsp;&amp;emsp;实体是指任何可<font color="#dd0000">发送或接受信息的硬件或软件</font>进程。<br>&amp;emsp;&amp;emsp;<font color="#dd0000">对等实体</font>是指通信双方相同层次中的实体。</p><h3 id="2、协议"><a href="#2、协议" class="headerlink" title="2、协议"></a>2、协议</h3><p>（1）概念<br>&amp;emsp;&amp;emsp;<font color="#dd0000">协议</font>是指控制两个对等实体进行逻辑通信的规则的集合。<br>（2）<font color="#dd0000">协议的三要</font>素是语法、语义、同步。<br>&amp;emsp;&amp;emsp;<font color="#dd0000">语法</font>定义所交换信息的格式。例如：ip数据报的格式<br>&amp;emsp;&amp;emsp;<font color="#dd0000">语义</font>定义通信双方所要完成的操作。例如：主机发送HTTP的GET请求给Web服务器，Web服务器收到后执行相应的操作，然后给主机发回HTTP响应。<br>&amp;emsp;&amp;emsp;<font color="#dd0000">同步</font>定义通信双方的时序关系。例如：TCP的“三报文握手”建立连接的过程。<br>（3）<font color="#dd0000">协议数据单元</font><br>&amp;emsp;&amp;emsp;对等层次之间传输的数据包成为该层的协议数据单元PDU。<br>&amp;emsp;&amp;emsp;应用层：报文（message）<br>&amp;emsp;&amp;emsp;运输层：TCP报文段（segment）或UDP用户数据报（datagram）<br>&amp;emsp;&amp;emsp;网络层：分组（packet）或IP数据报<br>&amp;emsp;&amp;emsp;数据链路层：帧（frame）<br>&amp;emsp;&amp;emsp;物理层：比特流（bit stram）</p><h3 id="3、服务"><a href="#3、服务" class="headerlink" title="3、服务"></a>3、服务</h3><p>（1）概念<br>&amp;emsp;&amp;emsp;在协议的控制下，两个对等实体之间的逻辑通信使得本层能够向上一层提供服务。要实现本层协议，还需要使用下一层所提供的服务。<font color="#dd0000">协议是水平的，服务是垂直</font>的。实体看得见相邻下层提供的服务，但并不知道实现该服务的具体协议。也就是说下面的协议对上面的实体是<font color="#dd0000">“透明”</font>的。<br>（2）<font color="#dd0000">服务访问点</font>是指在同一系统中，<font color="#dd0000">相邻两个实体交换信息的逻辑接口</font>，用于区分不同的服务类型。<br>&amp;emsp;&amp;emsp;数据链路层的服务访问点为帧的“类型”字段。<br>&amp;emsp;&amp;emsp;网络层的服务访问点为IP数据报首部中的“协议字段”。<br>&amp;emsp;&amp;emsp;运输层的服务访问点为“窗口号”。<br>(3)<font color="#dd0000">服务原语</font>是指上层使用下层所提供的服务必须通过与下层交换的一些命令。<br>(4)<font color="#dd0000">服务数据单元</font>SDU是指统一系统内，层与层之间交换的数据包。多个SDU可以合成为一个PDU；一个SUP也可以划分为多个PDU。</p><h1 id="三、参考文献"><a href="#三、参考文献" class="headerlink" title="三、参考文献"></a>三、参考文献</h1><ol><li><a href="https://www.bilibili.com/video/BV1c4411d7jb?share_source=copy_web">b站湖科大教书匠计算机网络视频</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pycharm设置</title>
      <link href="/2021/05/21/pycharm%E8%AE%BE%E7%BD%AE/"/>
      <url>/2021/05/21/pycharm%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="一、字体随鼠标调整"><a href="#一、字体随鼠标调整" class="headerlink" title="一、字体随鼠标调整"></a>一、字体随鼠标调整</h1><ul><li><p>设置，搜索mouse</p></li><li><p>General里勾选Change front size with Ctrl+Mouse Wheel in：</p><p><img src="/asserts/image-20220521150603124.png" alt="image-20220521150603124"></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
